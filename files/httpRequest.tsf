/**
 * AUTO_GENERATED Do not change this file directly, use config.ts file instead
 *
 * @version 4
 */
import { AxiosRequestConfig, AxiosResponse } from "axios";
import { getAxiosInstance, Security } from "./config";

export const Http = {
  async getRequest(
    url: string,
    queryParams: any | undefined,
    //@ts-ignore
    _requestBody: undefined,
    security: Security,
    configOverride?: AxiosRequestConfig,
  ): Promise<AxiosResponse<any>> {
    return getAxiosInstance(security).get(url, {
      params: queryParams,
      ...configOverride,
    });
  },
  async postRequest(
    url: string,
    queryParams: any | undefined,
    requestBody: any | undefined,
    security: Security,
    configOverride?: AxiosRequestConfig,
  ): Promise<AxiosResponse<any>> {
    return getAxiosInstance(security).post(url, requestBody, {
      params: queryParams,
      ...configOverride,
    });
  },
  async putRequest(
    url: string,
    queryParams: any | undefined,
    requestBody: any | undefined,
    security: Security,
    configOverride?: AxiosRequestConfig,
  ): Promise<AxiosResponse<any>> {
    return getAxiosInstance(security).put(url, requestBody, {
      params: queryParams,
      ...configOverride,
    });
  },
  async deleteRequest(
    url: string,
    queryParams: any | undefined,
    //@ts-ignore
    _requestBody: undefined,
    security: Security,
    configOverride?: AxiosRequestConfig,
  ): Promise<AxiosResponse<any>> {
    return getAxiosInstance(security).delete(url, {
      params: queryParams,
      ...configOverride,
    });
  },
};

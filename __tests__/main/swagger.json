{
  "openapi": "3.0.0",
  "x-generator": "NSwag v13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))",
  "info": {
    "title": "API",
    "description": "API",
    "contact": {
      "name": "hosseinmd",
      "email": "hosseinm.developer@gmail.com"
    },
    "version": "v1"
  },
  "paths": {
    "/Access/{userWalletId}/{logicalAction}": {
      "get": {
        "tags": [
          "Access"
        ],
        "operationId": "Access_HasAccess",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "logicalAction",
            "in": "path",
            "required": true,
            "x-schema": {
              "$ref": "#/components/schemas/LogicalActionType"
            },
            "x-nullable": false,
            "schema": {
              "type": "string",
              "enum": [
                "EpayRequest",
                "TransferMoney",
                "AccountChargeRequest",
                "ServiceBill",
                "ServiceMobileCharge",
                "POS",
                "ShareAndBlockRequest",
                "ShareRequest",
                "Settlement",
                "GroupTransferMoney",
                "ShareAndUnblock",
                "Refund",
                "PayCommand",
                "Gift",
                "TaxiFairPayment",
                "HitoBitFee"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Auth/login/otp/generate": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_GenerateTotp",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTotpInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTotpInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTotpInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTotpInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TotpLoginResult"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth_Register",
        "parameters": [
          {
            "name": "platformType",
            "in": "header",
            "x-schema": {
              "$ref": "#/components/schemas/PlatformType"
            },
            "x-nullable": false,
            "schema": {
              "type": "string",
              "enum": [
                "Unknown",
                "Server",
                "Android",
                "iOS",
                "Device",
                "Browser",
                "PWA",
                "Web",
                "Windows",
                "Linux",
                "macOS",
                "Desktop"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterApiModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterApiModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterApiModel"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RegisterNewUserQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Auth/register/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirm the phone number with verification code",
        "operationId": "Auth_ConfirmPhoneNumber",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/register/basic": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Set basic data for your registration [fullname, password]",
        "operationId": "Auth_SetUserBasicInfo",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserBasicInfoInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserBasicInfoInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserBasicInfoInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserBasicInfoInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/Auth/forgetPassword": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Recover forgotten password with phone number (Two factor authentication)",
        "operationId": "Auth_ForgetPassword",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserForgetPasswordInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForgetPasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForgetPasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserForgetPasswordInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ForgetPasswordQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Auth/forgetPassword/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirm the phone number with a verification code for recover password",
        "operationId": "Auth_VerifyForgetPassword",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerifyForgetPasswordInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerifyForgetPasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerifyForgetPasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerifyForgetPasswordInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/Bank": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "Get available banks",
        "operationId": "Bank_Get",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BankApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/BusinessUser/category": {
      "get": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Get Business categories",
        "operationId": "BusinessUser_GetBusinessCategory",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessCategoryApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/BusinessUser/invite": {
      "post": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Send a connection request to sub user\n[Feature just allowed for the business users]",
        "operationId": "BusinessUser_SendInvitation",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SendConnectionRequestInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendConnectionRequestInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendConnectionRequestInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendConnectionRequestInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/BusinessUser/invite/{invitationId}/resend": {
      "post": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Resend Connection Request to Sub-User\n[Feature just allowed for the business users]",
        "operationId": "BusinessUser_ResendInvitation",
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "description": "Invitation Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/BusinessUser/invite/{invitationId}/remove": {
      "delete": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Remove an invitation\n[Feature just allowed for the business users]\n[Needs secure login]",
        "operationId": "BusinessUser_RemoveInvitation",
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/BusinessUser/resend/{invitationId}": {
      "post": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Resend Connection Request to Sub-User\n[Feature just allowed for the business users]\n[Deprecated, use 'businessuser/invite/{invitationId}/resend' instead]",
        "operationId": "BusinessUser_ResendConnectionRequest_Deprecated",
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "description": "Invitation Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/BusinessUser/connection/{invitationId}/remove": {
      "delete": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Remove an invitation\n[Feature just allowed for the business users]\n[Needs secure login]\n[Deprecated, use 'businessuser/invite/{invitationId}/remove' instead]",
        "operationId": "BusinessUser_RemoveInvitation_Deprecated",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/BusinessUser/connection": {
      "get": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Get the connections\n[Feature just allowed for the business users]",
        "operationId": "BusinessUser_GetConnections",
        "parameters": [
          {
            "name": "subUserConnectionStatus",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/SubUserConnectionStatus"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Pending",
                "Rejected",
                "Connected",
                "Disconnected",
                "Deleted"
              ]
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "defaults to 0",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "states",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubUserConnectionStatus"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubUserConnectionApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/BusinessUser/connection/active": {
      "get": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Get active connections ordered by Transactions count\n[Feature just allowed for the business users]",
        "operationId": "BusinessUser_GetActiveConnections",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "description": "defaults to 0",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubUserConnectionApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/BusinessUser/connection/{connectionId}": {
      "get": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Get the connection detail\n[Feature just allowed for the business users]\n[Needs secure login]",
        "operationId": "BusinessUser_GetConnectionDetail",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "Connection Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Change sub user connection info\n[Feature just allowed for the business users]\n[Needs secure login]",
        "operationId": "BusinessUser_EditConnectionInfo",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "Connection Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditConnectionInfoInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditConnectionInfoInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditConnectionInfoInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditConnectionInfoInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Disconnect sub user connection\n[Feature just allowed for the business users]\n[Needs secure login]",
        "operationId": "BusinessUser_DisconnectSubUser",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "Connection Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/BusinessUser/connection/{connectionId}/permission": {
      "get": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Get sub user permissions for accounts\n[Feature just allowed for the business users]\n[Needs secure login]",
        "operationId": "BusinessUser_GetSubUserPermissions",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "Connection Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubUserPermissionApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Set access to the account for sub user\n[Feature just allowed for the business users]\n[Needs secure login]",
        "operationId": "BusinessUser_SetAccountAccessForSubUser",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "Connection Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAccountAccessForSubUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAccountAccessForSubUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetAccountAccessForSubUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetAccountAccessForSubUserInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/BusinessUser/connection/{connectionId}/permission/{userWalletId}": {
      "put": {
        "tags": [
          "BusinessUser"
        ],
        "operationId": "BusinessUser_EditSubUserPermission",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "description": "Id of Account to edit it's permissios",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubUserPermissionInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubUserPermissionInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubUserPermissionInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditSubUserPermissionInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "BusinessUser"
        ],
        "operationId": "BusinessUser_RemoveAccountAccessForSubUser",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "description": "Id of Account to delete it's permissios",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/BusinessUser/connection/{connectionId}/activity": {
      "get": {
        "tags": [
          "BusinessUser"
        ],
        "summary": "Get the connection amounts report\n[Feature just allowed for the business users]\n[Needs secure login]",
        "operationId": "BusinessUser_GetSubUserActivityReport",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "Connection Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserActivityApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/BusinessUser/connection/{connectionId}/epay": {
      "get": {
        "tags": [
          "BusinessUser"
        ],
        "operationId": "BusinessUser_GetEpayRequestsCreatedBySubUser",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "epayRequestStatus",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/EpayRequestStatus"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Initiated",
                "Paid",
                "Cancelled",
                "Expired",
                "Viewed"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pluginId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "plugin_ZhenicCustomerName",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicCustomerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicInvoiceNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicRialAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicDollarAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicDollarAmountRate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicEuroAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicEuroAmountRate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarCustomerName",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarCustomerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarDocumentNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarVoucherType",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "defaults to 0",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpayRequestApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_Get",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "epayRequestStatus",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/EpayRequestStatus"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Initiated",
                "Paid",
                "Cancelled",
                "Expired",
                "Viewed"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pluginId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "plugin_ZhenicCustomerName",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicCustomerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicInvoiceNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicRialAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicDollarAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicDollarAmountRate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicEuroAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicEuroAmountRate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarCustomerName",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarCustomerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarDocumentNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarVoucherType",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "defaults to 0",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accountIds",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              }
            }
          },
          {
            "name": "states",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EpayRequestActualState"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpayRequestApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/excel": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetExcel",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "epayRequestStatus",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/EpayRequestStatus"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Initiated",
                "Paid",
                "Cancelled",
                "Expired",
                "Viewed"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pluginId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "plugin_ZhenicCustomerName",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicCustomerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicInvoiceNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicRialAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicDollarAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicDollarAmountRate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicEuroAmount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_ZhenicEuroAmountRate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarCustomerName",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarCustomerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarDocumentNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "plugin_SepidarVoucherType",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "defaults to 0",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "accountIds",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              }
            }
          },
          {
            "name": "states",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EpayRequestActualState"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/forMe": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "summary": "Get pay requests that the user is one of its audiences.\n[Feature is not allowed for sub users]\n[Needs secure login]",
        "operationId": "EpayRequest_GetEpayRequestsForMe",
        "parameters": [
          {
            "name": "applicantName",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicantPhoneNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "epayRequestStatus",
            "in": "query",
            "description": "obsoleted",
            "x-schema": {
              "$ref": "#/components/schemas/EpayRequestStatus"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Initiated",
                "Paid",
                "Cancelled",
                "Expired",
                "Viewed"
              ]
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "defaults to 0",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "states",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EpayRequestActualState"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EpayRequestForUserQuery"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{epayId}": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "summary": "Get epay request detail based on Id",
        "operationId": "EpayRequest_GetDetail",
        "parameters": [
          {
            "name": "epayId",
            "in": "path",
            "required": true,
            "description": "EpayRequest's Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestDetailApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{epayToken}/qrcode": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "summary": "Get QR code image file for epay request",
        "operationId": "EpayRequest_GetQrCode",
        "parameters": [
          {
            "name": "epayToken",
            "in": "path",
            "required": true,
            "description": "epay request token",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/EpayRequest/{userWalletId}/commission": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "summary": "Get comission amount for epay request amount",
        "operationId": "EpayRequest_GetEpayRequestCommissionAmount",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommissionAmountApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{userWalletId}": {
      "post": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_CreateNewEpayRequest",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "description": "User Wallet id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NewEpayRequestInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestDetailApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{userWalletId}/creators": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetCreatorUsersList",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "list of users who can create epayRequest. the first use is always the requested user if preseneted in list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserMinimalDto"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{epayId}/resend": {
      "post": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_ResendPayLinkToAudiences",
        "parameters": [
          {
            "name": "epayId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{epayId}/cancel": {
      "post": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_CancelRequest",
        "parameters": [
          {
            "name": "epayId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/audiences/recent": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetRecentAudiences",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{epayToken}/detail": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetDetail2",
        "parameters": [
          {
            "name": "epayToken",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestPublicInfoApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/EpayRequest/{epayToken}/pay/{userWalletId}": {
      "post": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_PayWithWallet",
        "parameters": [
          {
            "name": "epayToken",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestPayInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestPayInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestPayInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestPayInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WalletReceiptApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/count": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetCountOfLinksRequestedByUser",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AggregationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/report": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetReportOfLinksRequestedByUser",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/forMe/count": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetCountOfLinksTargetedUser",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AggregationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/forMe/report": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "operationId": "EpayRequest_GetReportOfLinksTargetedUser",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/{epayId}/task": {
      "post": {
        "tags": [
          "EpayRequest"
        ],
        "summary": "Create a new task for executing the actions of epay request [Resend/Cancel]\n[Deprecated, use 'epayrequest/{id}/cancel' and 'epayrequest/{id}/resend' instead]",
        "operationId": "EpayRequest_CreateTask",
        "parameters": [
          {
            "name": "epayId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestTaskInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestTaskInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestTaskInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestTaskInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/EpayRequest/pos/Qr/{accountNumber}": {
      "get": {
        "tags": [
          "EpayRequest"
        ],
        "summary": "[Deprecated, use 'account/{accountNumber}/qrcode' instead]",
        "operationId": "EpayRequest_GetPosLinkQr",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "subUserConId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/error": {
      "get": {
        "tags": [
          "Error"
        ],
        "operationId": "Error_Error",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/error/local": {
      "get": {
        "tags": [
          "Error"
        ],
        "operationId": "Error_LocalError",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/error/status/{code}": {
      "get": {
        "tags": [
          "Error"
        ],
        "operationId": "Error_StatusError",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/File": {
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Upload new file\n[Allowed files are images and pdf / Max Size: 3 MB]",
        "operationId": "File_Upload",
        "requestBody": {
          "$ref": "#/components/requestBodies/File_Upload"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FileApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/File/{fileGuid}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Download a file.",
        "operationId": "File_Download",
        "parameters": [
          {
            "name": "fileGuid",
            "in": "path",
            "required": true,
            "description": "file unique id",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/GroupTransfer/add": {
      "put": {
        "tags": [
          "GroupTransfer"
        ],
        "summary": "[for Business users only]",
        "operationId": "GroupTransfer_Validate",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferTargetValidationInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferTargetValidationInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferTargetValidationInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferTargetValidationInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/GroupTransfer/import": {
      "post": {
        "tags": [
          "GroupTransfer"
        ],
        "summary": "[for Business users only]",
        "operationId": "GroupTransfer_ValidateAll",
        "requestBody": {
          "$ref": "#/components/requestBodies/File_Upload"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/GroupTransfer/export": {
      "post": {
        "tags": [
          "GroupTransfer"
        ],
        "summary": "[for Business users only]",
        "operationId": "GroupTransfer_ExportToExcel",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GroupTransferTargetValidationQuery"
                }
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/GroupTransfer/transfer": {
      "post": {
        "tags": [
          "GroupTransfer"
        ],
        "summary": "[for Business users only]",
        "operationId": "GroupTransfer_GroupTransferMoney",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GroupTransferInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GroupTransferQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/GroupTransfer/commission": {
      "get": {
        "tags": [
          "GroupTransfer"
        ],
        "operationId": "GroupTransfer_GetCommissionAmount",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommissionAmountApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Integration": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Get detailed driver,taxi and fair amount information",
        "operationId": "Integration_GetTaxiDriverDetailInformation",
        "parameters": [
          {
            "name": "instituteCode",
            "in": "query",
            "description": "code of the corresponding institude",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "termainalId",
            "in": "query",
            "description": "code specific to each driver",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "detailed driver,taxi and fair amount information",
            "content": {
              "text/plain": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DriverInfoResult"
                    }
                  ],
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DriverInfoResult"
                    }
                  ],
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DriverInfoResult"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Integration/TaxiPayment": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Pay taxi fair amount",
        "operationId": "Integration_TaxiPurchase",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPurchaseInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPurchaseInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPurchaseInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPurchaseInput"
              }
            }
          },
          "description": "input variables like instituteCode,termainalId,fair amount ,and accountId",
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "payment reciept",
            "content": {
              "text/plain": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxiRecieptApiDto"
                    }
                  ],
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxiRecieptApiDto"
                    }
                  ],
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TaxiRecieptApiDto"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Kpi/Last": {
      "get": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_GetLastKpiByUserId",
        "parameters": [
          {
            "name": "kpiName",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "datePart",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DatePart"
              }
            }
          },
          {
            "name": "count",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "endPartial",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiResult"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Kpi/Current": {
      "get": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_GetCurrentKpiByUserId",
        "parameters": [
          {
            "name": "kpiName",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "datePart",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DatePart"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiResult"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Kpi": {
      "get": {
        "tags": [
          "Kpi"
        ],
        "operationId": "Kpi_GetPeriodKpiByUserId",
        "parameters": [
          {
            "name": "kpiName",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "start",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "datePart",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DatePart"
              }
            }
          },
          {
            "name": "startPartial",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "endPartial",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KpiResult"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Machine/RegisterUser": {
      "post": {
        "tags": [
          "Machine"
        ],
        "operationId": "Machine_RegisterUser",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/FullRegisterApiModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FullRegisterApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FullRegisterApiModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FullRegisterApiModel"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MachineSignUp"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Notification/ia": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get all Important Actions of current user.",
        "operationId": "Notification_GetImportantActions",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportantActionApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Notification/ia/{notifId}/dismiss": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Dismiss an Important Action forever.",
        "operationId": "Notification_DismissImportantAction",
        "parameters": [
          {
            "name": "notifId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Notification/notif": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Get Notifications of current user.\nMaximum 99 items will be returned.",
        "operationId": "Notification_GetNotifications",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Notification/unread": {
      "get": {
        "tags": [
          "Notification"
        ],
        "operationId": "Notification_GetUnreadCount",
        "parameters": [
          {
            "name": "channels",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NotificationChannel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnreadNotificationCountApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Plugin/{pluginId}": {
      "get": {
        "tags": [
          "Plugin"
        ],
        "operationId": "Plugin_GetInfo",
        "parameters": [
          {
            "name": "pluginId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PluginApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Pos/{accountNumber}": {
      "get": {
        "tags": [
          "Pos"
        ],
        "summary": "Get epay request detail",
        "operationId": "Pos_GetDetail",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "required": true,
            "description": "Account Number",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subUserConId",
            "in": "query",
            "description": "Subuser Connection Id",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PosLandingPageApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Pos/pay/{targetAccountNumber}/wallet": {
      "post": {
        "tags": [
          "Pos"
        ],
        "summary": "Pay POS link with Wallet",
        "operationId": "Pos_WalletPayment",
        "parameters": [
          {
            "name": "targetAccountNumber",
            "in": "path",
            "required": true,
            "description": "Target account number",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PosWalletPayInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PosWalletPayInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PosWalletPayInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PosWalletPayInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WalletReceiptApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Pos/pay/{targetAccountNumber}/online": {
      "post": {
        "tags": [
          "Pos"
        ],
        "summary": "Pay POS link Online",
        "operationId": "Pos_OnlinePayment",
        "parameters": [
          {
            "name": "clientId",
            "in": "header",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "targetAccountNumber",
            "in": "path",
            "required": true,
            "description": "Target account number",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PosOnlinePayInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PosOnlinePayInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PosOnlinePayInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PosOnlinePayInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestDetailApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Receipt/{epayToken}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get bank receipt by EPayRequest token\n[For anonymous users]\n[Deprecated, use 'receipt/bank/{epayTryId}' and 'receipt/bank/{epayTryId}' instead]",
        "operationId": "Receipt_GetBankReceipt",
        "parameters": [
          {
            "name": "epayToken",
            "in": "path",
            "required": true,
            "description": "EpayRequest's token to get receipt for",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankReceiptApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/Receipt/bank/{epayTryId}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get bank receipt by EPayTry id\n[For anonymous users]",
        "operationId": "Receipt_GetBankReceipt2",
        "parameters": [
          {
            "name": "epayTryId",
            "in": "path",
            "required": true,
            "description": "EpayTry's id to get receipt for",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BankReceiptApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Receipt/wallet/{epayToken}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get wallet receipt by EPayRequest token\n[For anonymous users]",
        "operationId": "Receipt_GetWalletReceipt",
        "parameters": [
          {
            "name": "epayToken",
            "in": "path",
            "required": true,
            "description": "EpayRequest's token to get receipt for",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WalletReceiptApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/ResellerUser": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get the Resellership info of current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetInfo",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResellerApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/introduced/filterData": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get filter data items to populate DropDowns\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetFilterData",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ReselledUserFilterData"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/introduced": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get the Users Introduced by current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetList",
        "parameters": [
          {
            "name": "searchInput",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isPerson",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "identityStatuses",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IdentityStatus"
              }
            }
          },
          {
            "name": "lastActivityFrom",
            "in": "query",
            "description": "YYYY-MM-DD",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "lastActivityTo",
            "in": "query",
            "description": "YYYY-MM-DD",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "registeredFrom",
            "in": "query",
            "description": "YYYY-MM-DD",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "registeredTo",
            "in": "query",
            "description": "YYYY-MM-DD",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderDesc",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReselledUserApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/introduced/{userId}/activity": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get the User activity\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetUserActivity",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ReselledUserActivityApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/commission/sum": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get sum of all commissions paid to current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetCommissionAmountSum",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AggregationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/commission/report": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get the time-based report of commissions paid to current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetCommissionAmountReport",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DateReportApiModelOfDecimal"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/links/count": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get count of all links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetGeneratedLinksCount",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AggregationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/links/report": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get time-based report of links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetGeneratedLinksReport",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DateReportApiModelOfInteger"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/links/paid/count": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get count of all paid links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetPaidLinksCount",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AggregationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/links/paid/report": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get time-based report of paid links generated by users, who are introduced by current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetPaidLinksReport",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DateReportApiModelOfInteger"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/transactions/count": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get count of all commission transactions, paid to current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetCommissionTransactionsCount",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AggregationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/transactions/report": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get time-based report of commission transactions, paid to current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetCommissionTransactionsReport",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DateReportApiModelOfInteger"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/introduced/count": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get count of all users reselled by current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetIntroducedUsersCount",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AggregationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/ResellerUser/dashboard/introduced/report": {
      "get": {
        "tags": [
          "ResellerUser"
        ],
        "summary": "Get time-based report of users reselled by current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "ResellerUser_GetIntroducedUsersReport",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "takeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "toYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DateReportApiModelOfInteger"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/Service/NewEpayRequest": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create an new [EpayRequest] with the given model.",
        "operationId": "Service_NewEpayRequest",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "ApiKey to authorize [User]",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "Id of [Terminal] to use",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestServiceInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestServiceInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestServiceInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EpayRequestServiceInput"
              }
            }
          },
          "description": "The request model to create",
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Payment Link and Request's Token",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestWcfResult"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Service/CheckEpayRequest": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Check the [EpayRequest] based on token",
        "operationId": "Service_CheckEpayRequest",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "ApiKey to authorize [User]",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Token of [EpayRequest] to check",
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Return [EpayRequest] status",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestCheckStatusResult"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Service/VerifyApiKey": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Verify the ApiKey for authorizing the [User]",
        "operationId": "Service_VerifyApiKey",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "ApiKey to authorize [User]",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "A flag represents if the given ApiKey for [User] is valid or not.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Service/NewDivideEpayRequest": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a Divided [EpayRequest] for the given model.",
        "operationId": "Service_NewDivideEpayRequest",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "ApiKey to authorize [User]",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "Id of [Terminal] to use.",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DivideEpayRequestServiceInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DivideEpayRequestServiceInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DivideEpayRequestServiceInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DivideEpayRequestServiceInput"
              }
            }
          },
          "description": "The request model containing [EpayRequest]'s data to create",
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestWcfResult"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Service/UnblockAmount": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Unblock Amount of an Divided[EpayRequest]",
        "operationId": "Service_UnblockAmount",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "ApiKey to authorize [User]",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestUnblockInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestUnblockInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestUnblockInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestUnblockInput"
              }
            }
          },
          "description": "The request model",
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Unblocked Amount",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DividedEpayRequestUnblockResult"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Service/CancelAmount": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Cancel Amount of an Divided[EpayRequest]",
        "operationId": "Service_CancelAmount",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "ApiKey to authorize [User]",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestCancelInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestCancelInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestCancelInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DividedEpayRequestCancelInput"
              }
            }
          },
          "description": "The request model",
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "Canceled Amount",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DividedEpayRequestCancelResult"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Service/CancelPayment": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Set [EPayRequest] status to 'Cancel' and cancel the payment",
        "operationId": "Service_CancelPayment",
        "parameters": [
          {
            "name": "apiKey",
            "in": "header",
            "description": "ApiKey to authorize [User]",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Token of [EPayRequest]",
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Returns [True] if operation was successful or throw exception if failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/Settings/init": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_CheckInitialAppState",
        "parameters": [
          {
            "name": "terminalId",
            "in": "header",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "terminalVersion",
            "in": "header",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InitApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Settings/log/switch": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_UpdateGlobalMinimumLogLevel",
        "requestBody": {
          "$ref": "#/components/requestBodies/LogEventLevel"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SettingApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "God"
            ]
          }
        ]
      }
    },
    "/Settings/log/switch/septapay": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_UpdateSeptaPayMinimumLogLevel",
        "requestBody": {
          "$ref": "#/components/requestBodies/LogEventLevel"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SettingApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/Settings/log/switch/serilog": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_UpdateSerilogMinimumLogLevel",
        "requestBody": {
          "$ref": "#/components/requestBodies/LogEventLevel"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SettingApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "God"
            ]
          }
        ]
      }
    },
    "/Settings/terminal/version": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "Settings_UpdateTerminalVersion",
        "parameters": [
          {
            "name": "clientId",
            "in": "header",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalVersionApiModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalVersionApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalVersionApiModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TerminalVersionApiModel"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "God"
            ]
          }
        ]
      }
    },
    "/SubDomain/{subDomainAddress}": {
      "get": {
        "tags": [
          "SubDomain"
        ],
        "summary": "Get info of a SubDomain by it's address.",
        "operationId": "SubDomain_GetByAddress",
        "parameters": [
          {
            "name": "clientId",
            "in": "header",
            "x-nullable": false,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "subDomainAddress",
            "in": "path",
            "required": true,
            "description": "The SubDomain part of the url.\n            ",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/SubDomain": {
      "get": {
        "tags": [
          "SubDomain"
        ],
        "summary": "Get the SubDomain of current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "SubDomain_GetByUserId",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "SubDomain"
        ],
        "summary": "Update the SubDomain of current Reseller user\n[Feature just allowed for Resellers]",
        "operationId": "SubDomain_UpdateSubDomain",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubDomainUpdateApiModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubDomainUpdateApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubDomainUpdateApiModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubDomainUpdateApiModel"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              },
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              },
              "text/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubDomainApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Reseller"
            ]
          }
        ]
      }
    },
    "/SubUser/connection": {
      "get": {
        "tags": [
          "SubUser"
        ],
        "summary": "Get the connections\n[Feature just allowed for SubUsers]\n[Deprecated. use 'user/connection' instead]",
        "operationId": "SubUser_GetConnections",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessUserConnectionApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/SubUser/connection/{connectionId}": {
      "delete": {
        "tags": [
          "SubUser"
        ],
        "summary": "Disconnect business user connection\n[Feature just allowed for SubUsers]\n[Needs secure login]\n[Deprecated, use 'user/connection/{connectionId}' instead]",
        "operationId": "SubUser_DisconnectFromBusinessUser",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "connection id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BusinessUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/SubUser/account/{userWalletId}": {
      "get": {
        "tags": [
          "SubUser"
        ],
        "summary": "Get permission details of an Account\n[Feature just allowed for SubUsers]",
        "operationId": "SubUser_GetSubUserAccountDetail",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserAccountDetailQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/SubUser/account/{userWalletId}/notification": {
      "post": {
        "tags": [
          "SubUser"
        ],
        "operationId": "SubUser_SetNotificationStatus",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "description": "UserWallet's Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SubUserNotificationStatusInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/SubUser/notification/{userWalletId}": {
      "post": {
        "tags": [
          "SubUser"
        ],
        "operationId": "SubUser_SetNotificationStatus_Deprecated",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "description": "UserWallet's Id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SubUserNotificationStatusInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transaction": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_GetTransactions",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "transactionType",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Debt",
                "Credit"
              ]
            }
          },
          {
            "name": "operationType",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionOperationType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Unknown",
                "Normal",
                "System",
                "DomainCommission",
                "ResellerCommission",
                "Block",
                "Unblock",
                "Refund",
                "NoCommissionRemainGift",
                "RemainGift",
                "DomainBankBatchTransfer",
                "SettlementBatchTransferItem",
                "Synchronization",
                "BlockchainWithdrawInternalTransfer",
                "BlockchainWithdrawUserWallet",
                "BlockchainIncomingTransaction",
                "BlockchainWithdrawUserWalletOffchain",
                "BlockchainFee"
              ]
            }
          },
          {
            "name": "amountFrom",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "amountTo",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "deprecated. use 'take' instead.",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "logicalActions",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogicalActionType"
                  }
                ],
                "nullable": true
              }
            }
          },
          {
            "name": "transactionTypes",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionType"
                  }
                ],
                "nullable": true
              }
            }
          },
          {
            "name": "operationTypes",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionOperationType"
                  }
                ],
                "nullable": true
              }
            }
          },
          {
            "name": "voucherTypes",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VoucherOperationType"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransactionApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transaction/excel": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_GetTransactionsAsExcel",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "transactionType",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Debt",
                "Credit"
              ]
            }
          },
          {
            "name": "operationType",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionOperationType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Unknown",
                "Normal",
                "System",
                "DomainCommission",
                "ResellerCommission",
                "Block",
                "Unblock",
                "Refund",
                "NoCommissionRemainGift",
                "RemainGift",
                "DomainBankBatchTransfer",
                "SettlementBatchTransferItem",
                "Synchronization",
                "BlockchainWithdrawInternalTransfer",
                "BlockchainWithdrawUserWallet",
                "BlockchainIncomingTransaction",
                "BlockchainWithdrawUserWalletOffchain",
                "BlockchainFee"
              ]
            }
          },
          {
            "name": "amountFrom",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "amountTo",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "logicalActions",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LogicalActionType"
                  }
                ],
                "nullable": true
              }
            }
          },
          {
            "name": "transactionTypes",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionType"
                  }
                ],
                "nullable": true
              }
            }
          },
          {
            "name": "operationTypes",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransactionOperationType"
                  }
                ],
                "nullable": true
              }
            }
          },
          {
            "name": "voucherTypes",
            "in": "query",
            "x-nullable": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VoucherOperationType"
                  }
                ],
                "nullable": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transaction/{transactionId}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get a Transaction by it's Id\n[Needs secure login]",
        "operationId": "Transaction_GetTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TransactionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transaction/report": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_GetTransactionsReport",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Debt",
                "Credit"
              ]
            }
          },
          {
            "name": "operationType",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionOperationType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Unknown",
                "Normal",
                "System",
                "DomainCommission",
                "ResellerCommission",
                "Block",
                "Unblock",
                "Refund",
                "NoCommissionRemainGift",
                "RemainGift",
                "DomainBankBatchTransfer",
                "SettlementBatchTransferItem",
                "Synchronization",
                "BlockchainWithdrawInternalTransfer",
                "BlockchainWithdrawUserWallet",
                "BlockchainIncomingTransaction",
                "BlockchainWithdrawUserWalletOffchain",
                "BlockchainFee"
              ]
            }
          },
          {
            "name": "businessCategoryId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transaction/report/all": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "Transaction_GetAllTransactionsReport",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Debt",
                "Credit"
              ]
            }
          },
          {
            "name": "operationType",
            "in": "query",
            "x-schema": {
              "$ref": "#/components/schemas/TransactionOperationType"
            },
            "x-nullable": true,
            "schema": {
              "type": "string",
              "enum": [
                "Unknown",
                "Normal",
                "System",
                "DomainCommission",
                "ResellerCommission",
                "Block",
                "Unblock",
                "Refund",
                "NoCommissionRemainGift",
                "RemainGift",
                "DomainBankBatchTransfer",
                "SettlementBatchTransferItem",
                "Synchronization",
                "BlockchainWithdrawInternalTransfer",
                "BlockchainWithdrawUserWallet",
                "BlockchainIncomingTransaction",
                "BlockchainWithdrawUserWalletOffchain",
                "BlockchainFee"
              ]
            }
          },
          {
            "name": "businessCategoryId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeDays",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeMonths",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TakeYears",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToMonth",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ToYear",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AllTransactionsReportApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transfer/search": {
      "get": {
        "tags": [
          "Transfer"
        ],
        "operationId": "Transfer_Search",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "accountNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact",
            "in": "query",
            "description": "Phone number or email address",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountInfoApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transfer/recent": {
      "get": {
        "tags": [
          "Transfer"
        ],
        "summary": "Get recent money transfers",
        "operationId": "Transfer_GetRecent",
        "parameters": [
          {
            "name": "take",
            "in": "query",
            "description": "defaults to 10",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TransferMoneyApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transfer/{userWalletId}/commission": {
      "get": {
        "tags": [
          "Transfer"
        ],
        "summary": "Get commission amount for transfer money amount",
        "operationId": "Transfer_GetCommission",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommissionAmountApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/Transfer/{userWalletId}": {
      "post": {
        "tags": [
          "Transfer"
        ],
        "summary": "Transfer money",
        "operationId": "Transfer_TransferMoney",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TransferMoneyInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TransferMoneyApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserBank": {
      "get": {
        "tags": [
          "UserBank"
        ],
        "summary": "Get user banks\n[Feature is not allowed for sub users.]",
        "operationId": "UserBank_GetAll",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBankApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "UserBank"
        ],
        "summary": "Create a new user bank\n[Feature is not allowed for sub users]\n[Needs secure login]",
        "operationId": "UserBank_Create",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBankInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserBankApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserBank/ready": {
      "get": {
        "tags": [
          "UserBank"
        ],
        "summary": "Get available user banks\n[Feature is not allowed for sub users.]",
        "operationId": "UserBank_GetApproveds",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBankApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserBank/{userBankId}": {
      "get": {
        "tags": [
          "UserBank"
        ],
        "summary": "get user bank detail\n[Needs secure login]",
        "operationId": "UserBank_GetDetail",
        "parameters": [
          {
            "name": "userBankId",
            "in": "path",
            "required": true,
            "description": "User bank id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserBankDetailApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "UserBank"
        ],
        "summary": "Edit user bank\n[Needs secure login]",
        "operationId": "UserBank_Update",
        "parameters": [
          {
            "name": "userBankId",
            "in": "path",
            "required": true,
            "description": "User bank id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBankInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserBankApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserBank/{userBankId}/changeVisibility": {
      "put": {
        "tags": [
          "UserBank"
        ],
        "summary": "Change user bank show-in-list property\n[Needs secure login]",
        "operationId": "UserBank_ChangeVisibility",
        "parameters": [
          {
            "name": "userBankId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserBankChangeVisibilityInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBankChangeVisibilityInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBankChangeVisibilityInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserBankChangeVisibilityInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get [normal/sub/business] user profile detail",
        "operationId": "User_Get",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserDetailQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit profile [state, city, address]\n[Feature is not allowed for business users]\n[Needs secure login]",
        "operationId": "User_EditUserProfile",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserDetailQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/contact/{input}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetContact",
        "parameters": [
          {
            "name": "input",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ContactApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/changeAvatar": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Change user avatar\n[Needs secure login]",
        "operationId": "User_EditUserProfileAvatar",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileAvatarInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileAvatarInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileAvatarInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileAvatarInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/changePassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change user password",
        "operationId": "User_ChangePassword",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/me": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile summary",
        "operationId": "User_GetMe",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserMeQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/workspace": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user work spaces",
        "operationId": "User_GetUserworkspaces",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserWorkspaceQuery"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/identityRequest": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get last national id verification request [Feature is not allowed for sub users]",
        "operationId": "User_GetLastIdentityRequest",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserIdentityRequestQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new national id verification request [Feature is allowed for normal users noly]",
        "operationId": "User_CreateNewUserIdentityRequest",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserIdentityRequestInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserIdentityRequestInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserIdentityRequestInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserIdentityRequestInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserDetailQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/upgradeToBusinessRequest": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Last Request for upgrade account to the business [Feature is allowed for normal users only]",
        "operationId": "User_GetLastUpgradeToBusinessRequest",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpgradeToBusinessApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Request for upgrade account to the business [Feature is allowed for normal users only]",
        "operationId": "User_CreateNewUpgradeToBusinessRequest",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeToBusinessUserInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeToBusinessUserInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeToBusinessUserInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeToBusinessUserInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpgradeToBusinessApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/invitation": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get business user invitations for me [Feature is not allowed for sub users]",
        "operationId": "User_GetInvitations",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubUserInvitationApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/invitation/{invitationToken}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get business user invitations for me [Feature is not allowed for sub users]",
        "operationId": "User_GetInvitation",
        "parameters": [
          {
            "name": "invitationToken",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubUserInvitationApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/invitation/{invitationToken}/accept": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "accept an Invitation and cerate a SubUserConnection.\n[Feature is not allowed for sub users]",
        "operationId": "User_AcceptInvitation",
        "parameters": [
          {
            "name": "invitationToken",
            "in": "path",
            "required": true,
            "description": "invitation token",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/invitation/{invitationToken}/reject": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "reject an Invitation.\n[Feature is not allowed for sub users]",
        "operationId": "User_RejectInvitation",
        "parameters": [
          {
            "name": "invitationToken",
            "in": "path",
            "required": true,
            "description": "invitation token",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/invitation/{invitationId}/task": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new task for executing the actions of the business user invitation [Accept/Reject]\n[Feature is not allowed for sub users]\n[Deprecated, use 'user/invitation/{invitationToken}/accept' and 'user/invitation/{invitationToken}/reject' instead.]",
        "operationId": "User_CreateInvitationTask",
        "parameters": [
          {
            "name": "invitationId",
            "in": "path",
            "required": true,
            "description": "invitation id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubuserInvitationTaskInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubuserInvitationTaskInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubuserInvitationTaskInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubuserInvitationTaskInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/connection": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the connections [Feature is allowed for normal users noly]",
        "operationId": "User_GetConnections",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BusinessUserConnectionApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/User/connection/{connectionId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Disconnect business user connection\n[Feature just allowed for normal users]\n[Needs secure login]",
        "operationId": "User_DisconnectFromBusinessUser",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "connection id",
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BusinessUserConnectionApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserPlugin": {
      "get": {
        "tags": [
          "UserPlugin"
        ],
        "operationId": "UserPlugin_Get",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPluginDetailApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/UserPlugin/{userPluginId}/ChangeStatus": {
      "put": {
        "tags": [
          "UserPlugin"
        ],
        "operationId": "UserPlugin_ChangeStatus",
        "parameters": [
          {
            "name": "userPluginId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPluginTogggleApiModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPluginTogggleApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPluginTogggleApiModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPluginTogggleApiModel"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserPluginApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_Get",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WalletDisplayApiModel"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_Create",
        "requestBody": {
          "$ref": "#/components/requestBodies/AccountCreationApiModel"
        },
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_GetDetail",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WalletDetailApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_Update",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AccountCreationApiModel"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WalletDisplayApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/notification": {
      "put": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_SetNotificationStatus",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSettingNotificationStatusApiModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSettingNotificationStatusApiModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSettingNotificationStatusApiModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSettingNotificationStatusApiModel"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/balance": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "summary": "Get user account balance",
        "operationId": "UserWallet_GetBalance",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountBalanceApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/permittedsubusers": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_GetAccountPermittedSubUsers",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountPermittedSubUserQuery"
                  },
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Business"
            ]
          }
        ]
      }
    },
    "/UserWallet/{accountNumber}/qrcode": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_GetPosLinkQr",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "required": true,
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          },
          {
            "name": "subUserConId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/UserWallet/{userWalletId}/charge": {
      "post": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_NewChargeRequest",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NewChargeRequestInput"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewChargeRequestInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewChargeRequestInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewChargeRequestInput"
              }
            }
          },
          "required": true,
          "x-nullable": false
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NewChargeRequestResultQuery"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/settlementRequest/comission": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_GetSettlementRequestComissionAmount",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommissionAmountApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/epayRequest/comission": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_GetEpayRequestCommissionAmount",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommissionAmountApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/epayRequest": {
      "post": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_NewEpayRequest",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NewEpayRequestInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EpayRequestDetailApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/search": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_Search",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          },
          {
            "name": "userWalletId",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "accountNumber",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contact",
            "in": "query",
            "x-nullable": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountInfoApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/transferMoney/commission": {
      "get": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_GetTransferMoneyCommissionAmount",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "x-nullable": false,
            "schema": {
              "type": "number",
              "format": "decimal"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommissionAmountApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/UserWallet/{userWalletId}/transferMoney": {
      "post": {
        "tags": [
          "UserWallet"
        ],
        "operationId": "UserWallet_TransferMoney",
        "parameters": [
          {
            "name": "userWalletId",
            "in": "path",
            "required": true,
            "x-nullable": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/TransferMoneyInput"
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TransferMoneyApiModel"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/CspReport/Log": {
      "post": {
        "tags": [
          "CspReport"
        ],
        "operationId": "CspReport_Log",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://stage.poolkhord.com/hapi/legacy"
    }
  ],
  "components": {
    "requestBodies": {
      "TransferMoneyInput": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/TransferMoneyInput"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TransferMoneyInput"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/TransferMoneyInput"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/TransferMoneyInput"
            }
          }
        },
        "required": true,
        "x-nullable": false
      },
      "NewEpayRequestInput": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/NewEpayRequestInput"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewEpayRequestInput"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/NewEpayRequestInput"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/NewEpayRequestInput"
            }
          }
        },
        "required": true,
        "x-nullable": false
      },
      "File_Upload": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "format": "binary",
                  "x-nullable": true
                }
              }
            }
          }
        }
      },
      "LogEventLevel": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/LogEventLevel"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LogEventLevel"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/LogEventLevel"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/LogEventLevel"
            }
          }
        },
        "required": true,
        "x-nullable": false
      },
      "SubUserNotificationStatusInput": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/SubUserNotificationStatusInput"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SubUserNotificationStatusInput"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/SubUserNotificationStatusInput"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/SubUserNotificationStatusInput"
            }
          }
        },
        "required": true,
        "x-nullable": false
      },
      "UserBankInput": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/UserBankInput"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserBankInput"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/UserBankInput"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/UserBankInput"
            }
          }
        },
        "required": true,
        "x-nullable": false
      },
      "AccountCreationApiModel": {
        "content": {
          "application/json-patch+json": {
            "schema": {
              "$ref": "#/components/schemas/AccountCreationApiModel"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AccountCreationApiModel"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/AccountCreationApiModel"
            }
          },
          "application/*+json": {
            "schema": {
              "$ref": "#/components/schemas/AccountCreationApiModel"
            }
          }
        },
        "required": true,
        "x-nullable": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "description": "Swagger Api",
        "in": "header",
        "flows": {
          "password": {
            "tokenUrl": "https://localhost:7600/connect/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "LogicalActionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "EpayRequest",
          "TransferMoney",
          "AccountChargeRequest",
          "ServiceBill",
          "ServiceMobileCharge",
          "POS",
          "ShareAndBlockRequest",
          "ShareRequest",
          "Settlement",
          "GroupTransferMoney",
          "ShareAndUnblock",
          "Refund",
          "PayCommand",
          "Gift",
          "TaxiFairPayment",
          "HitoBitFee"
        ],
        "enum": [
          "EpayRequest",
          "TransferMoney",
          "AccountChargeRequest",
          "ServiceBill",
          "ServiceMobileCharge",
          "POS",
          "ShareAndBlockRequest",
          "ShareRequest",
          "Settlement",
          "GroupTransferMoney",
          "ShareAndUnblock",
          "Refund",
          "PayCommand",
          "Gift",
          "TaxiFairPayment",
          "HitoBitFee"
        ]
      },
      "TotpLoginResult": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RequestTotpInput": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterNewUserQuery": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PlatformType": {
        "type": "string",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Unknown",
          "Server",
          "Android",
          "iOS",
          "Device",
          "Browser",
          "PWA",
          "Web",
          "Windows",
          "Linux",
          "macOS",
          "Desktop"
        ],
        "enum": [
          "Unknown",
          "Server",
          "Android",
          "iOS",
          "Device",
          "Browser",
          "PWA",
          "Web",
          "Windows",
          "Linux",
          "macOS",
          "Desktop"
        ]
      },
      "RegisterApiModel": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "deviceBrandName": {
            "type": "string",
            "nullable": true
          },
          "deviceOsVersion": {
            "type": "string",
            "nullable": true
          },
          "deviceToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "VerifyPhoneNumberInput": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "verifyCode": {
            "type": "string",
            "nullable": true
          },
          "subDomainId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "SetUserBasicInfoInput": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "introducerCode": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ForgetPasswordQuery": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserForgetPasswordInput": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserVerifyForgetPasswordInput": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "verifyCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BankApiModel": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BusinessCategoryApiModel": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/BusinessType"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BusinessType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Ads",
          "Investment",
          "Production",
          "Trade",
          "Software"
        ],
        "enum": [
          "Ads",
          "Investment",
          "Production",
          "Trade",
          "Software"
        ]
      },
      "SubUserConnectionApiModel": {
        "type": "object",
        "required": [
          "invitationId",
          "requestDateTime",
          "status",
          "subUserConnectionStatus"
        ],
        "properties": {
          "invitationId": {
            "type": "integer",
            "format": "int64"
          },
          "connectDate": {
            "type": "string",
            "nullable": true
          },
          "connectDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disconnectDate": {
            "type": "string",
            "nullable": true
          },
          "disconnectDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requestDate": {
            "type": "string",
            "nullable": true
          },
          "requestDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "removeDate": {
            "type": "string",
            "nullable": true
          },
          "removeDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subUserAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "subUserTitle": {
            "type": "string",
            "nullable": true
          },
          "subUserContact": {
            "type": "string",
            "nullable": true
          },
          "subUserPositionTitle": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/SubUserConnectionStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "subUserConnectionStatus": {
            "description": "[Deprecated, use 'Status' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Status' instead,",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUserConnectionStatus"
              }
            ]
          },
          "connectionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SubUserConnectionStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Pending",
          "Rejected",
          "Connected",
          "Disconnected",
          "Deleted"
        ],
        "enum": [
          "Pending",
          "Rejected",
          "Connected",
          "Disconnected",
          "Deleted"
        ]
      },
      "SendConnectionRequestInput": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EditConnectionInfoInput": {
        "type": "object",
        "properties": {
          "position": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubUserPermissionApiModel": {
        "type": "object",
        "required": [
          "userWalletId",
          "totalBalance",
          "realBalance",
          "canAccessToAccount",
          "canReceiveMoney",
          "canSeeEpayRequests",
          "canTransferMoney",
          "canGroupTransferMoney",
          "canSeeTransactions",
          "canRequestSettlement",
          "canChargeAccount",
          "canSeeSettlementRequests",
          "canAssistantsCreatesEpayRequest"
        ],
        "properties": {
          "userWalletId": {
            "type": "integer",
            "format": "int64"
          },
          "accountTitle": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "totalBalance": {
            "type": "number",
            "format": "decimal"
          },
          "realBalance": {
            "type": "number",
            "format": "decimal"
          },
          "canAccessToAccount": {
            "type": "boolean"
          },
          "canReceiveMoney": {
            "type": "boolean"
          },
          "canSeeEpayRequests": {
            "type": "boolean"
          },
          "canTransferMoney": {
            "type": "boolean"
          },
          "canGroupTransferMoney": {
            "type": "boolean"
          },
          "canSeeTransactions": {
            "type": "boolean"
          },
          "canRequestSettlement": {
            "type": "boolean"
          },
          "canChargeAccount": {
            "type": "boolean"
          },
          "canSeeSettlementRequests": {
            "type": "boolean"
          },
          "canAssistantsCreatesEpayRequest": {
            "type": "boolean"
          }
        }
      },
      "SetAccountAccessForSubUserInput": {
        "type": "object",
        "properties": {
          "userWalletId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "EditSubUserPermissionInput": {
        "type": "object",
        "properties": {
          "subUserPermissionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUserPermissionType"
              }
            ],
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "SubUserPermissionType": {
        "type": "string",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Default",
          "CanReceiveMoney",
          "CanSeeEpayRequests",
          "CanTransferMoney",
          "CanSeeTransactions",
          "CanRequestSettlement",
          "CanChargeAccount",
          "CanSeeSettlementRequests",
          "CanGroupTransferMoney",
          "CanAssistantsCreatesEpayRequest"
        ],
        "enum": [
          "Default",
          "CanReceiveMoney",
          "CanSeeEpayRequests",
          "CanTransferMoney",
          "CanSeeTransactions",
          "CanRequestSettlement",
          "CanChargeAccount",
          "CanSeeSettlementRequests",
          "CanGroupTransferMoney",
          "CanAssistantsCreatesEpayRequest"
        ]
      },
      "SubUserActivityApiModel": {
        "type": "object",
        "required": [
          "paidEpayRequestCount",
          "paidEpayRequestAmount",
          "accountChargeRequestCount",
          "accountChargeRequestAmount",
          "settlementRequestCount",
          "settlementRequestAmount"
        ],
        "properties": {
          "paidEpayRequestCount": {
            "type": "integer",
            "format": "int32"
          },
          "paidEpayRequestAmount": {
            "type": "number",
            "format": "decimal"
          },
          "accountChargeRequestCount": {
            "type": "integer",
            "format": "int32"
          },
          "accountChargeRequestAmount": {
            "type": "number",
            "format": "decimal"
          },
          "settlementRequestCount": {
            "type": "integer",
            "format": "int32"
          },
          "settlementRequestAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "EpayRequestApiModel": {
        "type": "object",
        "required": [
          "id",
          "createDateTime",
          "expireDateTime",
          "amount",
          "userWalletId",
          "status",
          "epayRequestStatus"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createDate": {
            "type": "string",
            "nullable": true
          },
          "createDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "expireDate": {
            "type": "string",
            "nullable": true
          },
          "expireDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "payDate": {
            "type": "string",
            "nullable": true
          },
          "payDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userWalletId": {
            "type": "integer",
            "format": "int64"
          },
          "userAccountName": {
            "type": "string",
            "nullable": true
          },
          "paymentLink": {
            "type": "string",
            "nullable": true
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "qrCodeLink": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EpayRequestActualState"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "targetDisplayName": {
            "type": "string",
            "nullable": true
          },
          "assistantUserId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "assistantDisplayName": {
            "type": "string",
            "nullable": true
          },
          "assistantPositionTitle": {
            "type": "string",
            "nullable": true
          },
          "epayRequestStatus": {
            "description": "[Deprecated, use 'Status' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Status' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EpayRequestStatus"
              }
            ]
          },
          "epayRequestAudience": {
            "type": "array",
            "description": "[Deprecated, don't use EpayRequestAudience]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Don't use EpayRequestAudience.",
            "items": {
              "$ref": "#/components/schemas/EPayRequestAudienceInput"
            },
            "nullable": true
          }
        }
      },
      "EpayRequestActualState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Initiated",
          "Paid",
          "Cancelled",
          "Expired"
        ],
        "enum": [
          "Initiated",
          "Paid",
          "Cancelled",
          "Expired"
        ]
      },
      "EpayRequestStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Initiated",
          "Paid",
          "Cancelled",
          "Expired",
          "Viewed"
        ],
        "enum": [
          "Initiated",
          "Paid",
          "Cancelled",
          "Expired",
          "Viewed"
        ]
      },
      "EPayRequestAudienceInput": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EpayRequestForUserQuery": {
        "type": "object",
        "required": [
          "id",
          "createDateTime",
          "expireDateTime",
          "amount",
          "canBeCanceled",
          "status",
          "epayRequestStatus"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "[Deprecated, use 'Token' for EPays that created by others]",
            "format": "int64",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Token' for EPays that created by others."
          },
          "applicantName": {
            "type": "string",
            "description": "[Deprecated, use 'UserDisplayName' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'UserDisplayName' instead.",
            "nullable": true
          },
          "userAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "nullable": true
          },
          "createDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "expireDate": {
            "type": "string",
            "nullable": true
          },
          "expireDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "canBeCanceled": {
            "type": "boolean",
            "description": "[Deprecated, don't use this property anymore]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Don't use this property anymore."
          },
          "paymentUrl": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EpayRequestActualState"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "epayRequestStatus": {
            "description": "[Deprecated, use 'Status' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Status' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EpayRequestStatus"
              }
            ]
          }
        }
      },
      "EpayRequestDetailApiModel": {
        "type": "object",
        "required": [
          "id",
          "createDateTime",
          "amount",
          "userWalletId",
          "expireDateTime",
          "getCommissionFromPayer",
          "getComissionByPayer",
          "commissionAmount",
          "comissionAmount",
          "epayRequestStatus",
          "status"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "createDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "pluginName": {
            "type": "string",
            "nullable": true
          },
          "pluginId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "userWalletId": {
            "type": "integer",
            "format": "int64"
          },
          "userAccountName": {
            "type": "string",
            "nullable": true
          },
          "expireDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "getCommissionFromPayer": {
            "type": "boolean"
          },
          "assistantUserId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "assistantDisplayName": {
            "type": "string",
            "nullable": true
          },
          "getComissionByPayer": {
            "type": "boolean",
            "description": "[Deprecated, use 'GetCommissionFromPayer' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'GetCommissionFromPayer' instead."
          },
          "commissionAmount": {
            "type": "number",
            "format": "decimal"
          },
          "comissionAmount": {
            "type": "number",
            "description": "[Deprecated, use 'CommissionAmount' instead]",
            "format": "decimal",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'CommissionAmount' instead."
          },
          "paymentLink": {
            "type": "string",
            "nullable": true
          },
          "publicLink": {
            "type": "string",
            "nullable": true
          },
          "qrCodeLink": {
            "type": "string",
            "nullable": true
          },
          "epayRequestStatus": {
            "description": "[Deprecated, use 'Status' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Status' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/EpayRequestStatus"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/EpayRequestActualState"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "payDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "audiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactApiModel"
            },
            "nullable": true
          },
          "epayRequestAudience": {
            "type": "array",
            "description": "[Deprecated, use 'Audiences' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Audiences' instead.",
            "items": {
              "$ref": "#/components/schemas/ContactApiModel"
            },
            "nullable": true
          },
          "pluginProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EPayPluginSpecificApiModel"
            },
            "nullable": true
          },
          "epayRequestPluginSpecific": {
            "type": "array",
            "description": "[Deprecated, use 'PluginProperties' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'PluginProperties' instead.",
            "items": {
              "$ref": "#/components/schemas/EPayPluginSpecificApiModel"
            },
            "nullable": true
          }
        }
      },
      "ContactApiModel": {
        "type": "object",
        "required": [
          "id",
          "audienceType"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true
          },
          "audienceType": {
            "$ref": "#/components/schemas/UserIdentifierType"
          },
          "audienceTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "userProfileImageLink": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserIdentifierType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Default",
          "PhoneNumber",
          "Email",
          "CustomerNumber",
          "AccountNumber"
        ],
        "enum": [
          "Default",
          "PhoneNumber",
          "Email",
          "CustomerNumber",
          "AccountNumber"
        ]
      },
      "EPayPluginSpecificApiModel": {
        "type": "object",
        "properties": {
          "persianName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "pluginPropertyName": {
            "type": "string",
            "description": "[Deprecated, use 'Id' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Id' instead.",
            "nullable": true
          },
          "pluginPropertyPersianName": {
            "type": "string",
            "description": "[Deprecated, use 'PersianName' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'PersianName' instead.",
            "nullable": true
          },
          "pluginPropertyId": {
            "type": "string",
            "description": "[Deprecated, don't use this property anymore, it is always null]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Don't use this property anymore, it is always null.",
            "nullable": true
          }
        }
      },
      "CommissionAmountApiModel": {
        "type": "object",
        "required": [
          "comissionAmount",
          "commissionAmount",
          "requestAmount",
          "totalAmount"
        ],
        "properties": {
          "comissionAmount": {
            "type": "number",
            "description": "[Deprecated, use 'CommissionAmount' instead]",
            "format": "decimal",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use CommissionAmount instead."
          },
          "commissionAmount": {
            "type": "number",
            "description": "کارمزد",
            "format": "decimal"
          },
          "requestAmount": {
            "type": "number",
            "description": "مبلغ اصلی",
            "format": "decimal"
          },
          "totalAmount": {
            "type": "number",
            "description": "جمع مبلغ اصلی و کارمزد",
            "format": "decimal"
          }
        }
      },
      "NewEpayRequestInput": {
        "type": "object",
        "required": [
          "amount",
          "expireDays",
          "isAutoConfirm",
          "callbackType"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "description": "مبلغ شارژ",
            "format": "decimal"
          },
          "expireDays": {
            "type": "integer",
            "description": "تاریخ انتقضا لینک ایجاد شده",
            "format": "int32"
          },
          "isAutoConfirm": {
            "type": "boolean",
            "description": "انتقال مستقیم به درگاه\n "
          },
          "callbackUrl": {
            "type": "string",
            "description": "آدرس بازگشت بعد از پرداخت",
            "nullable": true
          },
          "callbackType": {
            "description": "نوع ارجاع در هنگام ایجاد درخواست",
            "allOf": [
              {
                "$ref": "#/components/schemas/CallbackType"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "توضحیات درخواست (بابت)",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "description": "شماره فاکتور",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "تاریخ فاکتور",
            "format": "date-time",
            "nullable": true
          },
          "audiences": {
            "type": "array",
            "description": "اطلاعات پرداخت کننده / ها",
            "items": {
              "$ref": "#/components/schemas/EPayRequestAudienceInput"
            },
            "nullable": true
          },
          "pluginId": {
            "type": "integer",
            "description": "...",
            "format": "int32",
            "nullable": true
          },
          "pluginSpecifics": {
            "type": "array",
            "description": "...",
            "items": {
              "$ref": "#/components/schemas/EpayRequestPluginSpecificInput"
            },
            "nullable": true
          },
          "getComissionByPayer": {
            "type": "boolean",
            "description": "نحوه دریافت کارمزد",
            "nullable": true
          },
          "assisstantUserId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "CallbackType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "Redirect",
          "RedirectWithPost",
          "Call"
        ],
        "enum": [
          "None",
          "Redirect",
          "RedirectWithPost",
          "Call"
        ]
      },
      "EpayRequestPluginSpecificInput": {
        "type": "object",
        "properties": {
          "pluginPropertyId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserMinimalDto": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "positionTitle": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EpayRequestPublicInfoApiModel": {
        "type": "object",
        "required": [
          "amount",
          "expireDate",
          "status"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "expireDate": {
            "type": "string",
            "format": "date-time"
          },
          "expireDateDisplay": {
            "type": "string",
            "nullable": true
          },
          "paymentUrl": {
            "type": "string",
            "nullable": true
          },
          "payerName": {
            "type": "string",
            "nullable": true
          },
          "payDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "payDateDisplay": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EpayRequestStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "userAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "userAvatarUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WalletReceiptApiModel": {
        "type": "object",
        "required": [
          "amount",
          "commissionAmount",
          "createDate",
          "payerAccountId"
        ],
        "properties": {
          "operationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "voucherId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "commissionAmount": {
            "type": "number",
            "format": "decimal"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sharerUrl": {
            "type": "string",
            "nullable": true
          },
          "payerAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "payerAccountName": {
            "type": "string",
            "nullable": true
          },
          "payerAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "creatorUserDisplayName": {
            "type": "string",
            "nullable": true
          },
          "creatorUserAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "targetAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "targetAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "targetUserDisplayName": {
            "type": "string",
            "nullable": true
          },
          "targetUserAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EpayRequestPayInput": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AggregationApiModel": {
        "type": "object",
        "required": [
          "count",
          "sum"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "sum": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "ReportApiModel": {
        "type": "object",
        "required": [
          "key",
          "day",
          "dayOfWeek",
          "month",
          "year",
          "count",
          "sum"
        ],
        "properties": {
          "key": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "type": "integer",
            "format": "int32"
          },
          "dayName": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "monthName": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "yearShort": {
            "type": "string",
            "description": "سال دو رقمی",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "sum": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "EpayRequestTaskInput": {
        "type": "object",
        "required": [
          "epayRequestTaskType"
        ],
        "properties": {
          "epayRequestTaskType": {
            "$ref": "#/components/schemas/EpayRequestTaskType"
          }
        }
      },
      "EpayRequestTaskType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Resend",
          "Cancel"
        ],
        "enum": [
          "Resend",
          "Cancel"
        ]
      },
      "FileApiModel": {
        "type": "object",
        "required": [
          "uniqueId",
          "fileSize"
        ],
        "properties": {
          "uniqueId": {
            "type": "string",
            "format": "guid"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GroupTransferTargetValidationQuery": {
        "type": "object",
        "required": [
          "amount",
          "userCustomerNumber",
          "identifierType",
          "status"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "userPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "userCustomerNumber": {
            "type": "integer",
            "format": "int64"
          },
          "identifierType": {
            "$ref": "#/components/schemas/UserIdentifierType"
          },
          "identifierTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/GroupTransferTargetStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "[Deprecated, use 'StatusDisplay' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'StatusDisplay' instead.",
            "nullable": true
          }
        }
      },
      "GroupTransferTargetStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "InvalidIdentifier",
          "Ok",
          "Unregistered",
          "BlockedAccount",
          "InvalidAmount"
        ],
        "enum": [
          "InvalidIdentifier",
          "Ok",
          "Unregistered",
          "BlockedAccount",
          "InvalidAmount"
        ]
      },
      "GroupTransferTargetValidationInput": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "description": "PhoneNumber or Account Number",
            "nullable": true
          }
        }
      },
      "GroupTransferQuery": {
        "type": "object",
        "required": [
          "amount",
          "voucherId",
          "createDate"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userAccountName": {
            "type": "string",
            "nullable": true
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "voucherId": {
            "type": "integer",
            "format": "int64"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDateDisplay": {
            "type": "string",
            "nullable": true
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupTransferTargetQuery"
            },
            "nullable": true
          }
        }
      },
      "GroupTransferTargetQuery": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "userPhoneNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GroupTransferInput": {
        "type": "object",
        "required": [
          "userWalletId",
          "totalAmount"
        ],
        "properties": {
          "userWalletId": {
            "type": "integer",
            "format": "int64"
          },
          "totalAmount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupTransferTargetInput"
            },
            "nullable": true
          }
        }
      },
      "GroupTransferTargetInput": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DriverInfoResult": {
        "type": "object",
        "required": [
          "barcodType"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "barcodType": {
            "type": "integer"
          },
          "barcodTypeDescription": {
            "type": "string",
            "nullable": true
          },
          "identificationCode": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "identificationDesc": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxiPriceOutput"
            },
            "nullable": true
          },
          "customData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxiInfoOutput"
              }
            ],
            "nullable": true
          }
        }
      },
      "TaxiPriceOutput": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "currency": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TaxiInfoOutput": {
        "type": "object",
        "required": [
          "carTypeCode",
          "lineCode"
        ],
        "properties": {
          "carTypeCode": {
            "type": "integer"
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "lineCode": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleType": {
            "type": "string",
            "nullable": true
          },
          "vehicleColor": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "destination": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TaxiRecieptApiDto": {
        "type": "object",
        "required": [
          "amount",
          "taxiProvider",
          "dateTime",
          "sepidResponse"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "taxiProvider": {
            "$ref": "#/components/schemas/TaxiPaymentProvider"
          },
          "taxiProviderDisplay": {
            "type": "string",
            "nullable": true
          },
          "accountName": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "sepidResponse": {
            "$ref": "#/components/schemas/SepidResponseType"
          },
          "sepidResponseDisplay": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TaxiPaymentProvider": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Sepid",
          "Simorgh"
        ],
        "enum": [
          "Sepid",
          "Simorgh"
        ]
      },
      "SepidResponseType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Succesful",
          "Unsuccesful"
        ],
        "enum": [
          "Succesful",
          "Unsuccesful"
        ]
      },
      "ClientPurchaseInput": {
        "type": "object",
        "required": [
          "amount",
          "instituteCode",
          "userWalletId"
        ],
        "properties": {
          "driverCode": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "instituteCode": {
            "type": "integer",
            "format": "int32"
          },
          "userWalletId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "KpiResult": {
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "kpiName": {
            "type": "string",
            "nullable": true
          },
          "datePart": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DatePart"
              }
            ],
            "nullable": true
          },
          "targetIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KpiResultValue"
            },
            "nullable": true
          }
        }
      },
      "DatePart": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Minute",
          "Hour",
          "Day",
          "Week",
          "Month",
          "Year",
          "All"
        ],
        "enum": [
          "Minute",
          "Hour",
          "Day",
          "Week",
          "Month",
          "Year",
          "All"
        ]
      },
      "KpiResultValue": {
        "type": "object",
        "required": [
          "extractedTime",
          "startPoint",
          "endPoint",
          "value"
        ],
        "properties": {
          "extractedTime": {
            "type": "string",
            "format": "date-time"
          },
          "startPoint": {
            "type": "string",
            "format": "date-time"
          },
          "endPoint": {
            "type": "string",
            "format": "date-time"
          },
          "targetId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "MachineSignUp": {
        "type": "object",
        "required": [
          "customerNumber"
        ],
        "properties": {
          "customerNumber": {
            "type": "integer",
            "format": "int64"
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FullRegisterApiModel": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "introducerCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ImportantActionApiModel": {
        "type": "object",
        "required": [
          "id",
          "createTime",
          "type",
          "level",
          "closeable",
          "dismissible",
          "isSeen"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/NotificationModelType"
          },
          "typeDisplay": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/NotificationLevel"
          },
          "levelDisplay": {
            "type": "string",
            "nullable": true
          },
          "closeable": {
            "type": "boolean"
          },
          "dismissible": {
            "type": "boolean"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "dataId": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "isSeen": {
            "type": "boolean"
          }
        }
      },
      "NotificationModelType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Default",
          "EPayRequestUnpaid",
          "EPayRequestPaid",
          "UserIdentityUnknown",
          "UserIdentityApproved",
          "UserIdentityRejected",
          "UpgradeToBusinessApproved",
          "UpgradeToBusinessRejected",
          "UserBankApproved",
          "UserBankRejected",
          "SubUserConnectionCreated",
          "SubUserInvitationRejected",
          "SubUserInvitationSent",
          "MoneyDeposit",
          "MoneyWithdrawal",
          "SubUserDisconnectedByBusiness",
          "SubUserDisconnectedBySubUser",
          "Activities",
          "TradeNotification",
          "HitoBitNews",
          "SystemMessages"
        ],
        "enum": [
          "Default",
          "EPayRequestUnpaid",
          "EPayRequestPaid",
          "UserIdentityUnknown",
          "UserIdentityApproved",
          "UserIdentityRejected",
          "UpgradeToBusinessApproved",
          "UpgradeToBusinessRejected",
          "UserBankApproved",
          "UserBankRejected",
          "SubUserConnectionCreated",
          "SubUserInvitationRejected",
          "SubUserInvitationSent",
          "MoneyDeposit",
          "MoneyWithdrawal",
          "SubUserDisconnectedByBusiness",
          "SubUserDisconnectedBySubUser",
          "Activities",
          "TradeNotification",
          "HitoBitNews",
          "SystemMessages"
        ]
      },
      "NotificationLevel": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Default",
          "Success",
          "Info",
          "Warning",
          "Danger"
        ],
        "enum": [
          "Unknown",
          "Default",
          "Success",
          "Info",
          "Warning",
          "Danger"
        ]
      },
      "NotificationApiModel": {
        "type": "object",
        "required": [
          "createTime",
          "type",
          "level",
          "isSeen"
        ],
        "properties": {
          "createTime": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/NotificationModelType"
          },
          "typeDisplay": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "$ref": "#/components/schemas/NotificationLevel"
          },
          "levelDisplay": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "dataId": {
            "type": "string",
            "nullable": true
          },
          "isSeen": {
            "type": "boolean"
          }
        }
      },
      "UnreadNotificationCountApiModel": {
        "type": "object",
        "required": [
          "userId",
          "unreadCount",
          "channel"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "channel": {
            "$ref": "#/components/schemas/NotificationChannel"
          }
        }
      },
      "NotificationChannel": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Notification",
          "ImportantAction",
          "SMS",
          "Email",
          "FCM",
          "SignalR"
        ],
        "enum": [
          "Notification",
          "ImportantAction",
          "SMS",
          "Email",
          "FCM",
          "SignalR"
        ]
      },
      "PluginApiModel": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "amountCalculationExpression": {
            "type": "string",
            "nullable": true
          },
          "logoFileName": {
            "type": "string",
            "nullable": true
          },
          "logoFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "logoFileUrl": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginPropertyApiModel"
            },
            "nullable": true
          }
        }
      },
      "PluginPropertyApiModel": {
        "type": "object",
        "required": [
          "fieldType",
          "isRequired",
          "isFilterable"
        ],
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "fieldType": {
            "$ref": "#/components/schemas/FieldDisplayType"
          },
          "isRequired": {
            "type": "boolean"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "currencyName": {
            "type": "string",
            "nullable": true
          },
          "isFilterable": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FieldDisplayType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "String",
          "Text",
          "Currency",
          "Integer",
          "Float",
          "Boolean",
          "List"
        ],
        "enum": [
          "String",
          "Text",
          "Currency",
          "Integer",
          "Float",
          "Boolean",
          "List"
        ]
      },
      "PosLandingPageApiModel": {
        "type": "object",
        "required": [
          "domainId",
          "userId"
        ],
        "properties": {
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "domainEnglishName": {
            "type": "string",
            "nullable": true
          },
          "domainPersianName": {
            "type": "string",
            "nullable": true
          },
          "domainLogoFileName": {
            "type": "string",
            "nullable": true
          },
          "domainLogoFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "domainLogoFileUrl": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "getCommissionFromPayer": {
            "type": "boolean",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "userAvatarFileName": {
            "type": "string",
            "nullable": true
          },
          "userAvatarFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "userAvatarFileUrl": {
            "type": "string",
            "nullable": true
          },
          "subUserId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "subUserDisplayName": {
            "type": "string",
            "nullable": true
          },
          "subUserAvatarFileName": {
            "type": "string",
            "nullable": true
          },
          "subUserAvatarFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "subUserAvatarFileUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PosWalletPayInput": {
        "type": "object",
        "required": [
          "userWalletId",
          "amount"
        ],
        "properties": {
          "userWalletId": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PosOnlinePayInput": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "subuserId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "callBackUrl": {
            "type": "string",
            "nullable": true
          },
          "callbackType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CallbackType"
              }
            ],
            "nullable": true
          }
        }
      },
      "BankReceiptApiModel": {
        "type": "object",
        "required": [
          "amount",
          "commissionAmount",
          "createDate",
          "type",
          "failed"
        ],
        "properties": {
          "operationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "voucherId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "commissionAmount": {
            "type": "number",
            "format": "decimal"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDateDisplay": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "shareUrl": {
            "type": "string",
            "nullable": true
          },
          "payerAccountId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "payerAccountName": {
            "type": "string",
            "nullable": true
          },
          "payerAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "creatorUserDisplayName": {
            "type": "string",
            "nullable": true
          },
          "creatorUserAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "targetAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "targetUserDisplayName": {
            "type": "string",
            "nullable": true
          },
          "targetAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/EpayRequestType"
          },
          "typeDisplay": {
            "type": "string",
            "nullable": true
          },
          "failed": {
            "type": "boolean"
          },
          "failureMessage": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EpayRequestType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Link",
          "POS",
          "Divide",
          "DivideWithBlock",
          "Charge",
          "IPG"
        ],
        "enum": [
          "Link",
          "POS",
          "Divide",
          "DivideWithBlock",
          "Charge",
          "IPG"
        ]
      },
      "ResellerApiModel": {
        "type": "object",
        "required": [
          "startDate",
          "endDate",
          "isActive",
          "commissionId",
          "commissionType",
          "hasSubDomain"
        ],
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "startDateDisplay": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDateDisplay": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "commissionId": {
            "type": "integer",
            "format": "int32"
          },
          "commissionDisplay": {
            "type": "string",
            "nullable": true
          },
          "commissionName": {
            "type": "string",
            "nullable": true
          },
          "commissionType": {
            "$ref": "#/components/schemas/ComissionType"
          },
          "commissionTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "commissionPercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "commissionFixedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "commissionMaxValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "introduceLink": {
            "type": "string",
            "nullable": true
          },
          "hasSubDomain": {
            "type": "boolean"
          }
        }
      },
      "ComissionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Percentage",
          "Fixed"
        ],
        "enum": [
          "Percentage",
          "Fixed"
        ]
      },
      "ReselledUserFilterData": {
        "type": "object",
        "properties": {
          "identityStatuses": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DropDownResultOfIdentityStatus"
              }
            ],
            "nullable": true
          }
        }
      },
      "DropDownResultOfIdentityStatus": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DropDownResultItemOfIdentityStatus"
            },
            "nullable": true
          }
        }
      },
      "DropDownResultItemOfIdentityStatus": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IdentityStatus"
          },
          "display": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IdentityStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "WatingForCheck",
          "Checking",
          "EditingRequired",
          "Approved",
          "Rejected"
        ],
        "enum": [
          "None",
          "WatingForCheck",
          "Checking",
          "EditingRequired",
          "Approved",
          "Rejected"
        ]
      },
      "ReselledUserApiModel": {
        "type": "object",
        "required": [
          "userId",
          "isPerson",
          "identityStatus",
          "isActive",
          "userStatus",
          "ipgStatus",
          "isBussinessUser"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "nullable": true
          },
          "isPerson": {
            "type": "boolean"
          },
          "identityStatus": {
            "$ref": "#/components/schemas/IdentityStatus"
          },
          "identityStatusDisplay": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "lastActivityDate": {
            "type": "string",
            "nullable": true
          },
          "userStatus": {
            "$ref": "#/components/schemas/UserStatus"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "ipgStatus": {
            "$ref": "#/components/schemas/IPGStatus"
          },
          "ipgStatusDisplay": {
            "type": "string",
            "nullable": true
          },
          "isBussinessUser": {
            "type": "boolean"
          }
        }
      },
      "UserStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "NotVerified",
          "VerifiedButNotCompleted",
          "Active",
          "TemporaryBlocked",
          "AutoPasswordGenerated"
        ],
        "enum": [
          "None",
          "NotVerified",
          "VerifiedButNotCompleted",
          "Active",
          "TemporaryBlocked",
          "AutoPasswordGenerated"
        ]
      },
      "IPGStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NotRequested"
        ],
        "enum": [
          "NotRequested"
        ]
      },
      "ReselledUserActivityApiModel": {
        "type": "object",
        "required": [
          "commissionsPaidToResellerCount",
          "commissionsPaidToResellerSum",
          "generatedLinks",
          "paidGeneratedLinks"
        ],
        "properties": {
          "commissionsPaidToResellerCount": {
            "type": "integer",
            "format": "int32"
          },
          "commissionsPaidToResellerSum": {
            "type": "number",
            "format": "decimal"
          },
          "generatedLinks": {
            "type": "integer",
            "format": "int32"
          },
          "paidGeneratedLinks": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DateReportApiModelOfDecimal": {
        "type": "object",
        "required": [
          "key",
          "value",
          "day",
          "month",
          "year"
        ],
        "properties": {
          "key": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "decimal"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayName": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "monthName": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DateReportApiModelOfInteger": {
        "type": "object",
        "required": [
          "key",
          "value",
          "day",
          "month",
          "year"
        ],
        "properties": {
          "key": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayName": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "monthName": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EpayRequestWcfResult": {
        "type": "object",
        "properties": {
          "requestToken": {
            "type": "string",
            "nullable": true
          },
          "paymentUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EpayRequestServiceInput": {
        "type": "object",
        "required": [
          "userId",
          "amount",
          "invoiceDate",
          "expiresAfterDays",
          "isAutoRedirect",
          "domainId",
          "clientId",
          "userAccountId",
          "isAutoConfirm",
          "callbackType",
          "getComissionFromPayer"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid",
            "minLength": 1
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAfterDays": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "callbackUrl": {
            "type": "string",
            "nullable": true
          },
          "isAutoRedirect": {
            "type": "boolean"
          },
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "clientId": {
            "type": "string",
            "format": "guid"
          },
          "userAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "isAutoConfirm": {
            "type": "boolean"
          },
          "callbackType": {
            "$ref": "#/components/schemas/CallbackType"
          },
          "audiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EPayRequestAudienceInput"
            },
            "nullable": true
          },
          "getComissionFromPayer": {
            "type": "boolean"
          }
        }
      },
      "EpayRequestCheckStatusResult": {
        "type": "object",
        "required": [
          "requestStatus"
        ],
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/EpayRequestStatus"
          },
          "bankReferenceId": {
            "type": "string",
            "nullable": true
          },
          "verifyDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "DivideEpayRequestServiceInput": {
        "type": "object",
        "required": [
          "amount",
          "invoiceDate",
          "expiresAfterDays",
          "isAutoRedirect",
          "isBlocking"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "divisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DivideEpayRequestShareModel"
            },
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAfterDays": {
            "type": "integer"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "callBackUrl": {
            "type": "string",
            "nullable": true
          },
          "isAutoRedirect": {
            "type": "boolean"
          },
          "isBlocking": {
            "type": "boolean"
          }
        }
      },
      "DivideEpayRequestShareModel": {
        "type": "object",
        "required": [
          "amount",
          "dividerAmount"
        ],
        "properties": {
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "dividerAmount": {
            "type": "number",
            "format": "decimal"
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DividedEpayRequestUnblockResult": {
        "type": "object",
        "required": [
          "unblockedAmount"
        ],
        "properties": {
          "unblockedAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "DividedEpayRequestUnblockInput": {
        "type": "object",
        "required": [
          "dividerAmount",
          "userAmount"
        ],
        "properties": {
          "paymentToken": {
            "type": "string",
            "nullable": true
          },
          "userApiKey": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "dividerAmount": {
            "type": "number",
            "format": "decimal"
          },
          "userAmount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DividedEpayRequestCancelResult": {
        "type": "object",
        "required": [
          "cancelledAmount"
        ],
        "properties": {
          "cancelledAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "DividedEpayRequestCancelInput": {
        "type": "object",
        "required": [
          "dividerAmount",
          "userAmount"
        ],
        "properties": {
          "paymentToken": {
            "type": "string",
            "nullable": true
          },
          "userApiKey": {
            "type": "string",
            "nullable": true
          },
          "invoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "dividerAmount": {
            "type": "number",
            "format": "decimal"
          },
          "userAmount": {
            "type": "number",
            "format": "decimal"
          },
          "shebaNo": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "InitApiModel": {
        "type": "object",
        "required": [
          "versionState"
        ],
        "properties": {
          "versionState": {
            "$ref": "#/components/schemas/TerminalVersionState"
          },
          "versionStateDisplay": {
            "type": "string",
            "nullable": true
          },
          "appDownloadLink": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TerminalVersionState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Default",
          "UpToDate",
          "Supported",
          "Deprecated"
        ],
        "enum": [
          "Default",
          "UpToDate",
          "Supported",
          "Deprecated"
        ]
      },
      "SettingApiModel": {
        "type": "object",
        "properties": {
          "logSetting": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LogSetting"
              }
            ],
            "nullable": true
          }
        }
      },
      "LogSetting": {
        "type": "object",
        "required": [
          "serilogLogLevel",
          "septaPayLogLevel",
          "globalLogLevel"
        ],
        "properties": {
          "serilogLogLevel": {
            "$ref": "#/components/schemas/LogEventLevel"
          },
          "septaPayLogLevel": {
            "$ref": "#/components/schemas/LogEventLevel"
          },
          "globalLogLevel": {
            "$ref": "#/components/schemas/LogEventLevel"
          }
        }
      },
      "LogEventLevel": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Verbose",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Fatal"
        ],
        "enum": [
          "Verbose",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Fatal"
        ]
      },
      "TerminalVersionApiModel": {
        "type": "object",
        "properties": {
          "currentVersion": {
            "type": "string",
            "nullable": true
          },
          "minimumVersion": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubDomainApiModel": {
        "type": "object",
        "required": [
          "domainId",
          "resellerUserId",
          "isActive"
        ],
        "properties": {
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "persianName": {
            "type": "string",
            "nullable": true
          },
          "englishName": {
            "type": "string",
            "nullable": true
          },
          "subDomainAddress": {
            "type": "string",
            "nullable": true
          },
          "resellerUserId": {
            "type": "string",
            "format": "guid"
          },
          "isActive": {
            "type": "boolean"
          },
          "logoFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "logoFileName": {
            "type": "string",
            "nullable": true
          },
          "logoFileUrl": {
            "type": "string",
            "nullable": true
          },
          "domainPersianName": {
            "type": "string",
            "nullable": true
          },
          "domainEnglishName": {
            "type": "string",
            "nullable": true
          },
          "resellerUserDisplayName": {
            "type": "string",
            "nullable": true
          },
          "about": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubDomainUpdateApiModel": {
        "type": "object",
        "properties": {
          "logoFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "about": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BusinessUserConnectionApiModel": {
        "type": "object",
        "required": [
          "businessId",
          "status",
          "subUserConnectionStatus"
        ],
        "properties": {
          "businessId": {
            "type": "string",
            "format": "guid"
          },
          "businessAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "positionTitle": {
            "type": "string",
            "nullable": true
          },
          "connectDate": {
            "type": "string",
            "nullable": true
          },
          "connectDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disconnectDate": {
            "type": "string",
            "nullable": true
          },
          "disconnectDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/SubUserConnectionStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "subUserConnectionStatus": {
            "description": "[Deprecated, use 'Status' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Status' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUserConnectionStatus"
              }
            ]
          },
          "connectionId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "SubUserAccountDetailQuery": {
        "type": "object",
        "required": [
          "id",
          "accountStatus",
          "isActive",
          "notificationEnabled",
          "posScanCount",
          "posPaidCount",
          "canReceiveMoney",
          "canTransferMoney",
          "canSeeEpayRequests",
          "canSeeTransactions",
          "canRequestSettlement",
          "canChargeAccount",
          "canSeeSettlementRequests",
          "canAssistantsCreatesEpayRequest"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountStatus": {
            "$ref": "#/components/schemas/AccountStatus"
          },
          "accountStatusDisplay": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "accountQrCodeUrl": {
            "type": "string",
            "nullable": true
          },
          "notificationEnabled": {
            "type": "boolean"
          },
          "posScanCount": {
            "type": "integer",
            "format": "int32"
          },
          "posPaidCount": {
            "type": "integer",
            "format": "int32"
          },
          "posLinkUrl": {
            "type": "string",
            "nullable": true
          },
          "canReceiveMoney": {
            "type": "boolean"
          },
          "canTransferMoney": {
            "type": "boolean"
          },
          "canSeeEpayRequests": {
            "type": "boolean"
          },
          "canSeeTransactions": {
            "type": "boolean"
          },
          "canRequestSettlement": {
            "type": "boolean"
          },
          "canChargeAccount": {
            "type": "boolean"
          },
          "canSeeSettlementRequests": {
            "type": "boolean"
          },
          "canAssistantsCreatesEpayRequest": {
            "type": "boolean"
          }
        }
      },
      "AccountStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Block",
          "OK"
        ],
        "enum": [
          "Block",
          "OK"
        ]
      },
      "SubUserNotificationStatusInput": {
        "type": "object",
        "required": [
          "notificationEnabled"
        ],
        "properties": {
          "notificationEnabled": {
            "type": "boolean"
          }
        }
      },
      "TransactionApiModel": {
        "type": "object",
        "required": [
          "id",
          "accountId",
          "amount",
          "createDateTime",
          "remain",
          "transactionType",
          "transactionOperationType",
          "voucherId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "accountId": {
            "type": "integer",
            "format": "int64"
          },
          "accountTitle": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "createDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "remain": {
            "type": "number",
            "format": "decimal"
          },
          "logicalAction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LogicalActionType"
              }
            ],
            "nullable": true
          },
          "logicalActionDisplay": {
            "type": "string",
            "nullable": true
          },
          "voucherType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VoucherOperationType"
              }
            ],
            "nullable": true
          },
          "voucherTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "transactionTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "transactionOperationType": {
            "$ref": "#/components/schemas/TransactionOperationType"
          },
          "transactionOperationTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "targetBusinessCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "targetBusinessCategoryName": {
            "type": "string",
            "nullable": true
          },
          "followupId": {
            "type": "string",
            "nullable": true
          },
          "voucherId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VoucherOperationType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "EPayViaBankWithCommissionByPayer",
          "EPayViaBankWithCommissionByUser",
          "EPayViaPSPWithCommissionByPayer",
          "EPayViaPSPWithCommissionByUser",
          "EPayViaWalletWithCommissionByPayer",
          "EPayViaWalletWithCommissionByUser",
          "TransferMoney",
          "ChargeWallet",
          "ServiceBill",
          "ServiceMobileCharge",
          "POSViaBank",
          "POSViaWallet",
          "ShareAndBlockRequest",
          "ShareRequest",
          "SettlementAuto",
          "SettlementManual",
          "SettlementSuspected",
          "GroupTransferMoney",
          "ShareAndUnblock",
          "RefundWithSystemPayer",
          "RefundWithAnonymousPayer",
          "PayCommand",
          "GiftForReferrer",
          "GiftForNoCommissionRemain",
          "Sepid",
          "BatchTransferItem",
          "AbstractProviderSynchronization",
          "BlockchainWithdrawInternalTransfer",
          "BlockchainWithdrawUserWallet",
          "BlockchainIncomingTransaction",
          "BlockchainWithdrawUserWalletOnChain"
        ],
        "enum": [
          "Unknown",
          "EPayViaBankWithCommissionByPayer",
          "EPayViaBankWithCommissionByUser",
          "EPayViaPSPWithCommissionByPayer",
          "EPayViaPSPWithCommissionByUser",
          "EPayViaWalletWithCommissionByPayer",
          "EPayViaWalletWithCommissionByUser",
          "TransferMoney",
          "ChargeWallet",
          "ServiceBill",
          "ServiceMobileCharge",
          "POSViaBank",
          "POSViaWallet",
          "ShareAndBlockRequest",
          "ShareRequest",
          "SettlementAuto",
          "SettlementManual",
          "SettlementSuspected",
          "GroupTransferMoney",
          "ShareAndUnblock",
          "RefundWithSystemPayer",
          "RefundWithAnonymousPayer",
          "PayCommand",
          "GiftForReferrer",
          "GiftForNoCommissionRemain",
          "Sepid",
          "BatchTransferItem",
          "AbstractProviderSynchronization",
          "BlockchainWithdrawInternalTransfer",
          "BlockchainWithdrawUserWallet",
          "BlockchainIncomingTransaction",
          "BlockchainWithdrawUserWalletOnChain"
        ]
      },
      "TransactionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Debt",
          "Credit"
        ],
        "enum": [
          "Debt",
          "Credit"
        ]
      },
      "TransactionOperationType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Normal",
          "System",
          "DomainCommission",
          "ResellerCommission",
          "Block",
          "Unblock",
          "Refund",
          "NoCommissionRemainGift",
          "RemainGift",
          "DomainBankBatchTransfer",
          "SettlementBatchTransferItem",
          "Synchronization",
          "BlockchainWithdrawInternalTransfer",
          "BlockchainWithdrawUserWallet",
          "BlockchainIncomingTransaction",
          "BlockchainWithdrawUserWalletOffchain",
          "BlockchainFee"
        ],
        "enum": [
          "Unknown",
          "Normal",
          "System",
          "DomainCommission",
          "ResellerCommission",
          "Block",
          "Unblock",
          "Refund",
          "NoCommissionRemainGift",
          "RemainGift",
          "DomainBankBatchTransfer",
          "SettlementBatchTransferItem",
          "Synchronization",
          "BlockchainWithdrawInternalTransfer",
          "BlockchainWithdrawUserWallet",
          "BlockchainIncomingTransaction",
          "BlockchainWithdrawUserWalletOffchain",
          "BlockchainFee"
        ]
      },
      "AllTransactionsReportApiModel": {
        "type": "object",
        "properties": {
          "credits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportApiModel"
            },
            "nullable": true
          },
          "debits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportApiModel"
            },
            "nullable": true
          }
        }
      },
      "AccountInfoApiModel": {
        "type": "object",
        "required": [
          "userWalletId"
        ],
        "properties": {
          "userWalletId": {
            "type": "integer",
            "format": "int64"
          },
          "accountOwnerTitle": {
            "type": "string",
            "nullable": true
          },
          "accountOwnerAvatarUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TransferMoneyApiModel": {
        "type": "object",
        "required": [
          "voucherId",
          "amount",
          "commissionAmount",
          "domainCommissionAmount",
          "createDateTime",
          "payerAccountId",
          "targetAccountId",
          "userAccountId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "[Deprecated, use 'OperationId' instead]",
            "format": "int64",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'OperationId' instead.",
            "nullable": true
          },
          "operationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "voucherId": {
            "type": "integer",
            "format": "int64"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "commissionAmount": {
            "type": "number",
            "format": "decimal"
          },
          "domainCommissionAmount": {
            "type": "number",
            "description": "[Deprecated, use 'CommissionAmount' instead]",
            "format": "decimal",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'CommissionAmount' instead."
          },
          "createDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "payerAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "payerAccountName": {
            "type": "string",
            "nullable": true
          },
          "payerAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "targetAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "targetAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "targetUserDisplayName": {
            "type": "string",
            "nullable": true
          },
          "targetUserAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "userAccountId": {
            "type": "integer",
            "description": "[Deprecated, use 'PayerAccountId' instead]",
            "format": "int64",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'PayerAccountId' instead."
          },
          "userAccountName": {
            "type": "string",
            "description": "[Deprecated, use 'PayerAccountName' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'PayerAccountName' instead.",
            "nullable": true
          }
        }
      },
      "TransferMoneyInput": {
        "type": "object",
        "required": [
          "amount",
          "targetUserAccountId"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "targetUserAccountId": {
            "type": "integer",
            "format": "int64"
          },
          "targetIdentifier": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserBankApiModel": {
        "type": "object",
        "required": [
          "id",
          "businessShareType",
          "identityType",
          "bankId",
          "status",
          "isVisible"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "businessShareType": {
            "$ref": "#/components/schemas/BusinessShareType"
          },
          "businessShareTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "identityType": {
            "description": "[Deprecated, use 'BusinessShareType' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'BusinessShareType' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessShareType"
              }
            ]
          },
          "bankId": {
            "type": "integer",
            "format": "int32"
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "bankLogo": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "shebaNo": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/IdentityStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "rejectCause": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserBankRejectCause"
              }
            ],
            "nullable": true
          },
          "rejectCauseDisplay": {
            "type": "string",
            "nullable": true
          },
          "rejectCauseDescription": {
            "type": "string",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "description": "[Deprecated, use 'RejectCauseDescription' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'RejectCauseDescription' instead.",
            "nullable": true
          },
          "isVisible": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BusinessShareType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Person",
          "PrivateStock",
          "PublicStock",
          "Limited",
          "GeneralPartnership",
          "Institute",
          "Cooperative"
        ],
        "enum": [
          "Person",
          "PrivateStock",
          "PublicStock",
          "Limited",
          "GeneralPartnership",
          "Institute",
          "Cooperative"
        ]
      },
      "UserBankRejectCause": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "DocumentsLack",
          "DocumentsMismatch",
          "Etc"
        ],
        "enum": [
          "DocumentsLack",
          "DocumentsMismatch",
          "Etc"
        ]
      },
      "UserBankDetailApiModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserBankApiModel"
          },
          {
            "type": "object",
            "properties": {
              "nationalCode": {
                "type": "string",
                "nullable": true
              },
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocumentApiModel"
                },
                "nullable": true
              }
            }
          }
        ]
      },
      "DocumentApiModel": {
        "type": "object",
        "required": [
          "uniqueId",
          "fileSize",
          "fileType",
          "fileTypes",
          "createDate",
          "contentType",
          "documentContentType"
        ],
        "properties": {
          "uniqueId": {
            "type": "string",
            "format": "guid"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64"
          },
          "fileType": {
            "$ref": "#/components/schemas/FileTypes"
          },
          "fileTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "fileTypes": {
            "description": "[Deprecated, use 'FileType' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'FileType' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FileTypes"
              }
            ]
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "contentType": {
            "$ref": "#/components/schemas/DocumentContentType"
          },
          "contentTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "documentContentType": {
            "description": "[Deprecated, use 'ContentType' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'ContentType' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentContentType"
              }
            ]
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FileTypes": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Other",
          "Image",
          "Pdf"
        ],
        "enum": [
          "Other",
          "Image",
          "Pdf"
        ]
      },
      "DocumentContentType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Other",
          "UserBankVerification",
          "IdentityCard",
          "BusinessStatute",
          "BusinessLatestChangesAnnouncement",
          "BusinessOwnersIdentityCards",
          "BusinessOwnersBirthCertificates"
        ],
        "enum": [
          "Other",
          "UserBankVerification",
          "IdentityCard",
          "BusinessStatute",
          "BusinessLatestChangesAnnouncement",
          "BusinessOwnersIdentityCards",
          "BusinessOwnersBirthCertificates"
        ]
      },
      "UserBankInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "identityType": {
            "description": "[Deprecated, use 'BusinessShareType' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'BusinessShareType' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessShareType"
              }
            ],
            "nullable": true
          },
          "businessShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessShareType"
              }
            ],
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "bankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "shebaNo": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentInput"
            },
            "nullable": true
          },
          "isVisible": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "DocumentInput": {
        "type": "object",
        "required": [
          "fileUniqueId",
          "documentContentType"
        ],
        "properties": {
          "fileUniqueId": {
            "type": "string",
            "format": "guid"
          },
          "documentContentType": {
            "$ref": "#/components/schemas/DocumentContentType"
          }
        }
      },
      "UserBankChangeVisibilityInput": {
        "type": "object",
        "properties": {
          "isVisible": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "UserDetailQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserMeQuery"
          },
          {
            "type": "object",
            "properties": {
              "nationalCode": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "address": {
                "type": "string",
                "nullable": true
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "phoneNumber": {
                "type": "string",
                "nullable": true
              },
              "introducedBySubDomain": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserMeQuery": {
        "type": "object",
        "required": [
          "userId",
          "identityStatus",
          "isBusinessUser",
          "isResellerUser",
          "isSubUser",
          "shareCode"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "profileImageLink": {
            "type": "string",
            "nullable": true
          },
          "identityStatus": {
            "$ref": "#/components/schemas/IdentityStatus"
          },
          "identityStatusDisplay": {
            "type": "string",
            "nullable": true
          },
          "isBusinessUser": {
            "type": "boolean"
          },
          "isResellerUser": {
            "type": "boolean"
          },
          "isSubUser": {
            "type": "boolean"
          },
          "shareCode": {
            "type": "integer",
            "format": "int64"
          },
          "referredBy": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "businessUserId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "birthDateDisplay": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ],
            "nullable": true
          },
          "genderDisplay": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Gender": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Male",
          "Female"
        ],
        "enum": [
          "Unknown",
          "Male",
          "Female"
        ]
      },
      "UserProfileInput": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ],
            "nullable": true
          }
        }
      },
      "UserProfileAvatarInput": {
        "type": "object",
        "properties": {
          "fileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "UserChangePasswordInput": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserWorkspaceQuery": {
        "type": "object",
        "required": [
          "businessUserId",
          "workspaceType"
        ],
        "properties": {
          "businessUserId": {
            "type": "string",
            "format": "guid"
          },
          "businessAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "positionTitle": {
            "type": "string",
            "nullable": true
          },
          "workspaceType": {
            "$ref": "#/components/schemas/WorkspaceType"
          }
        }
      },
      "WorkspaceType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "User",
          "SubUser"
        ],
        "enum": [
          "User",
          "SubUser"
        ]
      },
      "UserIdentityRequestQuery": {
        "type": "object",
        "required": [
          "status",
          "userIdentityRequestStatus"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/IdentityStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "userIdentityRequestStatus": {
            "description": "[Deprecated, use 'Status' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Status' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityStatus"
              }
            ]
          },
          "rejectCause": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserIdentityRejectCause"
              }
            ],
            "nullable": true
          },
          "rejectCauseDisplay": {
            "type": "string",
            "nullable": true
          },
          "rejectCauseDescription": {
            "type": "string",
            "nullable": true
          },
          "userIdentityRequestStatusDescription": {
            "type": "string",
            "description": "[Deprecated, use 'RejectCauseDescription' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'RejectCauseDescription' instead.",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentApiModel"
            },
            "nullable": true
          }
        }
      },
      "UserIdentityRejectCause": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "DocumentsLack",
          "DocumentsMismatch",
          "DocumentsRejected",
          "Etc"
        ],
        "enum": [
          "DocumentsLack",
          "DocumentsMismatch",
          "DocumentsRejected",
          "Etc"
        ]
      },
      "NewUserIdentityRequestInput": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nationalCode": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentInput"
            },
            "nullable": true
          }
        }
      },
      "UpgradeToBusinessApiModel": {
        "type": "object",
        "required": [
          "businessType",
          "userIdentityType",
          "businessShareType",
          "status",
          "upgradeToBusinessRequestStatus"
        ],
        "properties": {
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "businessLogoImageLink": {
            "type": "string",
            "nullable": true
          },
          "businessLogoImageUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "organizationNationalCode": {
            "type": "string",
            "nullable": true
          },
          "businessType": {
            "$ref": "#/components/schemas/BusinessType"
          },
          "businessTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "userIdentityType": {
            "description": "[Deprecated, use 'BusinessShareType' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'BusinessShareType' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessShareType"
              }
            ]
          },
          "businessShareType": {
            "$ref": "#/components/schemas/BusinessShareType"
          },
          "businessShareTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/IdentityStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "rejectCause": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpgradeToBusinessRejectCause"
              }
            ],
            "nullable": true
          },
          "rejectCauseDisplay": {
            "type": "string",
            "nullable": true
          },
          "rejectCauseDescription": {
            "type": "string",
            "nullable": true
          },
          "upgradeToBusinessRequestStatus": {
            "description": "[Deprecated, use 'Status' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'Status' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentityStatus"
              }
            ]
          },
          "upgradeToBusinessRequestStatusDescription": {
            "type": "string",
            "description": "[Deprecated, use 'RejectCauseDescription' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'RejectCauseDescription' instead.",
            "nullable": true
          },
          "managerName": {
            "type": "string",
            "nullable": true
          },
          "managerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "webSiteUrl": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "personNationalCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentApiModel"
            },
            "nullable": true
          }
        }
      },
      "UpgradeToBusinessRejectCause": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "DocumentsLack",
          "DocumentsMismatch",
          "Other"
        ],
        "enum": [
          "DocumentsLack",
          "DocumentsMismatch",
          "Other"
        ]
      },
      "UpgradeToBusinessUserInput": {
        "type": "object",
        "properties": {
          "logoFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "organizationNationalCode": {
            "type": "string",
            "nullable": true
          },
          "businessType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessType"
              }
            ],
            "nullable": true
          },
          "businessShareType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessShareType"
              }
            ],
            "nullable": true
          },
          "userIdentityType": {
            "description": "[Deprecated, use 'BusinessShareType' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'BusinessShareType' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BusinessShareType"
              }
            ],
            "nullable": true
          },
          "managerName": {
            "type": "string",
            "nullable": true
          },
          "managerPhoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "faxNumber": {
            "type": "string",
            "nullable": true
          },
          "webSiteUrl": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentInput"
            },
            "nullable": true
          }
        }
      },
      "SubUserInvitationApiModel": {
        "type": "object",
        "required": [
          "invitationId",
          "invitationDate"
        ],
        "properties": {
          "invitationId": {
            "type": "integer",
            "description": "[Deprecated, use 'InvitationToken' to call new endpoints]",
            "format": "int64",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'InvitationToken' to call new endpoints."
          },
          "businessUserAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "businessUserTitle": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "invitationDate": {
            "type": "string",
            "format": "date-time"
          },
          "invitationToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubuserInvitationTaskInput": {
        "type": "object",
        "required": [
          "subuserInvitationTaskType"
        ],
        "properties": {
          "subuserInvitationTaskType": {
            "$ref": "#/components/schemas/SubuserInvitationTaskType"
          }
        }
      },
      "SubuserInvitationTaskType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Accept",
          "Reject"
        ],
        "enum": [
          "Accept",
          "Reject"
        ]
      },
      "UserPluginDetailApiModel": {
        "type": "object",
        "required": [
          "id",
          "isActive",
          "userId",
          "pluginId"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "isActive": {
            "type": "boolean"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "pluginId": {
            "type": "integer",
            "format": "int32"
          },
          "pluginName": {
            "type": "string",
            "nullable": true
          },
          "pluginConfig": {
            "type": "string",
            "nullable": true
          },
          "pluginAmountCalculationExpression": {
            "type": "string",
            "nullable": true
          },
          "pluginLogoFileName": {
            "type": "string",
            "nullable": true
          },
          "pluginLogoFileUniqueId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "pluginLogoFileUrl": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PluginPropertyApiModel"
            },
            "nullable": true
          }
        }
      },
      "UserPluginApiModel": {
        "type": "object",
        "required": [
          "id",
          "userId",
          "isActive"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "userDisplayName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "pluginConfig": {
            "type": "string",
            "nullable": true
          },
          "pluginName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserPluginTogggleApiModel": {
        "type": "object",
        "required": [
          "isActive"
        ],
        "properties": {
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "WalletDisplayApiModel": {
        "type": "object",
        "required": [
          "id",
          "isActive",
          "automaticSettlement",
          "getComissionFromPayer",
          "totalBalance",
          "realBalance"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "automaticSettlement": {
            "type": "boolean"
          },
          "intermediateUserBankBankId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "intermediateUserBankBankName": {
            "type": "string",
            "nullable": true
          },
          "intermediateUserBankAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "intermediateUserBankShebaNumber": {
            "type": "string",
            "nullable": true
          },
          "directUserBankBankId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "directUserBankBankName": {
            "type": "string",
            "nullable": true
          },
          "directUserBankAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "directUserBankShebaNumber": {
            "type": "string",
            "nullable": true
          },
          "relatedUserAccountIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getComissionFromPayer": {
            "type": "boolean"
          },
          "totalBalance": {
            "type": "number",
            "format": "decimal"
          },
          "realBalance": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "WalletDetailApiModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WalletDisplayApiModel"
          },
          {
            "type": "object",
            "required": [
              "notificationEnabled",
              "posScanCount",
              "posPaidCount",
              "permittedSubuserCount"
            ],
            "properties": {
              "accountQrCodeUrl": {
                "type": "string",
                "nullable": true
              },
              "posLinkUrl": {
                "type": "string",
                "nullable": true
              },
              "notificationEnabled": {
                "type": "boolean"
              },
              "posScanCount": {
                "type": "integer",
                "format": "int32"
              },
              "posPaidCount": {
                "type": "integer",
                "format": "int32"
              },
              "permittedSubuserCount": {
                "type": "integer",
                "format": "int32"
              },
              "actionPolicies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CommissionPolicyApiModel"
                },
                "nullable": true
              }
            }
          }
        ]
      },
      "CommissionPolicyApiModel": {
        "type": "object",
        "required": [
          "logicalAction",
          "commissionType"
        ],
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "logicalAction": {
            "$ref": "#/components/schemas/LogicalActionType"
          },
          "logicalActionDisplay": {
            "type": "string",
            "nullable": true
          },
          "commissionType": {
            "$ref": "#/components/schemas/ComissionType"
          },
          "commissionTypeDisplay": {
            "type": "string",
            "nullable": true
          },
          "fixedValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "maxValue": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "percent": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "AccountCreationApiModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "userBankId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "getComissionFromPayer": {
            "type": "boolean",
            "nullable": true
          },
          "automaticSettlement": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "AccountSettingNotificationStatusApiModel": {
        "type": "object",
        "required": [
          "notificationEnabled"
        ],
        "properties": {
          "notificationEnabled": {
            "type": "boolean"
          }
        }
      },
      "AccountBalanceApiModel": {
        "type": "object",
        "required": [
          "totalBalance",
          "realBalance"
        ],
        "properties": {
          "totalBalance": {
            "type": "number",
            "format": "decimal"
          },
          "realBalance": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "AccountPermittedSubUserQuery": {
        "type": "object",
        "required": [
          "subuserId",
          "subuserStatus",
          "connectionStatus",
          "subUserConnectionStatus",
          "connectionId"
        ],
        "properties": {
          "subuserId": {
            "type": "string",
            "format": "guid"
          },
          "subUserTitle": {
            "type": "string",
            "nullable": true
          },
          "subUserPositionTitle": {
            "type": "string",
            "nullable": true
          },
          "subUserContact": {
            "type": "string",
            "nullable": true
          },
          "connectDate": {
            "type": "string",
            "nullable": true
          },
          "disconnectDate": {
            "type": "string",
            "nullable": true
          },
          "subuserStatus": {
            "$ref": "#/components/schemas/SubuserStatus"
          },
          "subuserStatusDisplay": {
            "type": "string",
            "nullable": true
          },
          "connectionStatus": {
            "$ref": "#/components/schemas/SubUserConnectionStatus"
          },
          "connectionStatusDisplay": {
            "type": "string",
            "nullable": true
          },
          "subUserConnectionStatus": {
            "description": "[Deprecated, use 'ConnectionStatus' instead]",
            "x-deprecated": true,
            "x-deprecatedMessage": "Use 'ConnectionStatus' instead.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubUserConnectionStatus"
              }
            ]
          },
          "subUserAvatarUrl": {
            "type": "string",
            "nullable": true
          },
          "connectionId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SubuserStatus": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Connected",
          "DisconnectedByBusinessUser",
          "DisconnectedBySubUser"
        ],
        "enum": [
          "Connected",
          "DisconnectedByBusinessUser",
          "DisconnectedBySubUser"
        ]
      },
      "NewChargeRequestResultQuery": {
        "type": "object",
        "properties": {
          "paymentLink": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NewChargeRequestInput": {
        "type": "object",
        "required": [
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "description": "مبلغ شارژ",
            "format": "decimal"
          },
          "callbackUrl": {
            "type": "string",
            "description": "آدرس بازگشت بعد از پرداخت",
            "nullable": true
          }
        }
      }
    }
  }
}
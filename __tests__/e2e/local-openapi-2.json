{
    "openapi": "3.0.3",
    "info": {
        "title": "",
        "version": "0.0.0"
    },
    "paths": {
        "/api/schema/": {
            "get": {
                "operationId": "api_schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "tr"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/groups/": {
            "get": {
                "operationId": "auth_groups_list",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupMember"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "auth_groups_create",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/groups/{id}/": {
            "get": {
                "operationId": "auth_groups_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this group.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "auth_groups_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this group.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "auth_groups_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this group.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroupMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroupMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroupMemberRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "auth_groups_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this group.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/auth/groups/{id}/members/{user_id}/": {
            "put": {
                "operationId": "auth_groups_members_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this group.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "auth_groups_members_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this group.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/auth/groups/permissions/": {
            "get": {
                "operationId": "auth_groups_permissions_retrieve",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/permissions/": {
            "get": {
                "operationId": "auth_permissions_retrieve",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConsolidatedPermissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/user/": {
            "get": {
                "operationId": "auth_user_retrieve",
                "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUserDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "auth_user_update",
                "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomUserDetailsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomUserDetailsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomUserDetailsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUserDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "auth_user_partial_update",
                "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomUserDetailsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomUserDetailsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCustomUserDetailsRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomUserDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/user/groups/": {
            "get": {
                "operationId": "auth_user_groups_list",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserGroup"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "auth_user_groups_create",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/user/groups/{id}/": {
            "get": {
                "operationId": "auth_user_groups_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "auth_user_groups_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "auth_user_groups_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "auth_user_groups_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/auth/user/groups/{id}/copy_groups_from/": {
            "put": {
                "operationId": "auth_user_groups_copy_groups_from_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InlineUserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InlineUserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InlineUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserGroup"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activities/": {
            "get": {
                "operationId": "codes_activities_list",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "full_code__istartswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedActivityListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activities/{id}/": {
            "get": {
                "operationId": "codes_activities_retrieve",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Activity.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "codes_activities_update",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Activity.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "codes_activities_partial_update",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Activity.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedActivityRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedActivityRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedActivityRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "codes_activities_destroy",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Activity.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/codes/activities/{id}/add_child/": {
            "post": {
                "operationId": "codes_activities_add_child_create",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Activity.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activities/{id}/add_sibling/": {
            "post": {
                "operationId": "codes_activities_add_sibling_create",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Activity.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activities/{id}/move_under/": {
            "post": {
                "operationId": "codes_activities_move_under_create",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Activity.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activities/add_root/": {
            "post": {
                "operationId": "codes_activities_add_root_create",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activities/permissions/": {
            "get": {
                "operationId": "codes_activities_permissions_retrieve",
                "description": "API endpoint that allows activities to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activity-account-codes/": {
            "get": {
                "operationId": "codes_activity_account_codes_list",
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplierAccountingCode"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "codes_activity_account_codes_create",
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/activity-account-codes/{id}/": {
            "get": {
                "operationId": "codes_activity_account_codes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "codes_activity_account_codes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "codes_activity_account_codes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountingCodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountingCodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountingCodeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "codes_activity_account_codes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/codes/resources/": {
            "get": {
                "operationId": "codes_resources_list",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "full_code__istartswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResourceListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/resources/{id}/": {
            "get": {
                "operationId": "codes_resources_retrieve",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "codes_resources_update",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "codes_resources_partial_update",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResourceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResourceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResourceRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "codes_resources_destroy",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/codes/resources/{id}/add_child/": {
            "post": {
                "operationId": "codes_resources_add_child_create",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/resources/{id}/add_sibling/": {
            "post": {
                "operationId": "codes_resources_add_sibling_create",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/resources/{id}/move_under/": {
            "post": {
                "operationId": "codes_resources_move_under_create",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/resources/add_root/": {
            "post": {
                "operationId": "codes_resources_add_root_create",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResourceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/resources/permissions/": {
            "get": {
                "operationId": "codes_resources_permissions_retrieve",
                "description": "API endpoint that allows resources to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/wbs/": {
            "get": {
                "operationId": "codes_wbs_list",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWBSListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/wbs/{id}/": {
            "get": {
                "operationId": "codes_wbs_retrieve",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this WBS.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "codes_wbs_update",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this WBS.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "codes_wbs_partial_update",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this WBS.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWBSRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWBSRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWBSRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "codes_wbs_destroy",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this WBS.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/codes/wbs/{id}/add_child/": {
            "post": {
                "operationId": "codes_wbs_add_child_create",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this WBS.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/wbs/{id}/add_sibling/": {
            "post": {
                "operationId": "codes_wbs_add_sibling_create",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this WBS.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/wbs/{id}/move_under/": {
            "post": {
                "operationId": "codes_wbs_move_under_create",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this WBS.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/wbs/add_root/": {
            "post": {
                "operationId": "codes_wbs_add_root_create",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WBSRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/wbs/permissions/": {
            "get": {
                "operationId": "codes_wbs_permissions_retrieve",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/codes/wbs/projects/": {
            "get": {
                "operationId": "codes_wbs_projects_retrieve",
                "description": "API endpoint that allows Work-Breakdown-Structures to be viewed or edited.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "codes"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WBS"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/attachments/{id}/": {
            "get": {
                "operationId": "common_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this attachment.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_attachments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this attachment.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/common/bank-names/": {
            "get": {
                "operationId": "common_bank_names_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BankName"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "common_bank_names_create",
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankNameRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BankNameRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BankNameRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankName"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/bank-names/{id}/": {
            "get": {
                "operationId": "common_bank_names_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Bank Name.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankName"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "common_bank_names_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Bank Name.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankNameRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BankNameRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BankNameRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankName"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "common_bank_names_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Bank Name.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBankNameRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBankNameRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBankNameRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankName"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_bank_names_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Bank Name.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/common/currencies/": {
            "get": {
                "operationId": "common_currencies_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Currency"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "common_currencies_create",
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/currencies/{id}/": {
            "get": {
                "operationId": "common_currencies_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Currency.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "common_currencies_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Currency.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CurrencyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "common_currencies_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Currency.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCurrencyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCurrencyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCurrencyRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_currencies_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Currency.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/common/feature-flags/": {
            "get": {
                "operationId": "common_feature_flags_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FeatureFlags"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/packaging-methods/": {
            "get": {
                "operationId": "common_packaging_methods_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PackagingMethod"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "common_packaging_methods_create",
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PackagingMethodRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PackagingMethodRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PackagingMethodRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PackagingMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/packaging-methods/{id}/": {
            "get": {
                "operationId": "common_packaging_methods_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Packaging Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PackagingMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "common_packaging_methods_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Packaging Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PackagingMethodRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PackagingMethodRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PackagingMethodRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PackagingMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "common_packaging_methods_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Packaging Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPackagingMethodRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPackagingMethodRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPackagingMethodRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PackagingMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_packaging_methods_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Packaging Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/common/payment-methods/": {
            "get": {
                "operationId": "common_payment_methods_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PaymentMethod"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "common_payment_methods_create",
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/payment-methods/{id}/": {
            "get": {
                "operationId": "common_payment_methods_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "common_payment_methods_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "common_payment_methods_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentMethodRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentMethodRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentMethodRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethod"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_payment_methods_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Method.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/common/resource-units/": {
            "get": {
                "operationId": "common_resource_units_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResourceUnit"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "common_resource_units_create",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/resource-units/{id}/": {
            "get": {
                "operationId": "common_resource_units_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource Unit.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "common_resource_units_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource Unit.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "common_resource_units_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource Unit.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceUnit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_resource_units_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Resource Unit.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/common/tax-parameters/": {
            "get": {
                "operationId": "common_tax_parameters_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaxParameter"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "common_tax_parameters_create",
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxParameterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxParameterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxParameterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/tax-parameters/{id}/": {
            "get": {
                "operationId": "common_tax_parameters_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Tax Parameter.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "common_tax_parameters_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Tax Parameter.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxParameterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxParameterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxParameterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "common_tax_parameters_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Tax Parameter.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaxParameterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaxParameterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaxParameterRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_tax_parameters_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Tax Parameter.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/common/vat-witholdings/": {
            "get": {
                "operationId": "common_vat_witholdings_list",
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vatwitholding"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "common_vat_witholdings_create",
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VatwitholdingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VatwitholdingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VatwitholdingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vatwitholding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/common/vat-witholdings/{id}/": {
            "get": {
                "operationId": "common_vat_witholdings_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Vat Witholding.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vatwitholding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "common_vat_witholdings_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Vat Witholding.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VatwitholdingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VatwitholdingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VatwitholdingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vatwitholding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "common_vat_witholdings_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Vat Witholding.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVatwitholdingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVatwitholdingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVatwitholdingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vatwitholding"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "common_vat_witholdings_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Vat Witholding.",
                        "required": true
                    }
                ],
                "tags": [
                    "common"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/account-types/": {
            "get": {
                "operationId": "finance_account_types_list",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/accounts/": {
            "get": {
                "operationId": "finance_accounts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Currency",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "project",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BANK",
                                    "BOND",
                                    "CASH",
                                    "CHEQUE",
                                    "CUSTOMER",
                                    "EMPLOYEE",
                                    "OTHER",
                                    "SUBCONTRACTOR",
                                    "VENDOR"
                                ]
                            }
                        },
                        "description": "Account Type\n\n* `BANK` - Bank Account\n* `CASH` - Cash Account\n* `VENDOR` - Vendor\n* `SUBCONTRACTOR` - Subcontractor\n* `CUSTOMER` - Customer\n* `EMPLOYEE` - Employee\n* `OTHER` - Other\n* `CHEQUE` - Cheque\n* `BOND` - Bond",
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_accounts_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/accounts/{id}/": {
            "get": {
                "operationId": "finance_accounts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_accounts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_accounts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccountRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_accounts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/bank-account-types/": {
            "get": {
                "operationId": "finance_bank_account_types_list",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/bank-accounts/": {
            "get": {
                "operationId": "finance_bank_accounts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "bank",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Bank",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Currency",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "project",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sub_type",
                        "schema": {
                            "type": "string",
                            "title": "Account type",
                            "enum": [
                                "BOND",
                                "CREDIT_CARD",
                                "CURRENT_ACCOUNT",
                                "FUNDING",
                                "LEASING",
                                "TERM_DEPOSIT"
                            ]
                        },
                        "description": "* `TERM_DEPOSIT` - Term Deposit\n* `CURRENT_ACCOUNT` - Current Account\n* `CREDIT_CARD` - Credit Card\n* `LEASING` - Leasing\n* `FUNDING` - Funding\n* `BOND` - Bond"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BANK",
                                    "BOND",
                                    "CASH",
                                    "CHEQUE",
                                    "CUSTOMER",
                                    "EMPLOYEE",
                                    "OTHER",
                                    "SUBCONTRACTOR",
                                    "VENDOR"
                                ]
                            }
                        },
                        "description": "Account Type\n\n* `BANK` - Bank Account\n* `CASH` - Cash Account\n* `VENDOR` - Vendor\n* `SUBCONTRACTOR` - Subcontractor\n* `CUSTOMER` - Customer\n* `EMPLOYEE` - Employee\n* `OTHER` - Other\n* `CHEQUE` - Cheque\n* `BOND` - Bond",
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBankAccountListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_bank_accounts_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BankAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BankAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/bank-accounts/{id}/": {
            "get": {
                "operationId": "finance_bank_accounts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_bank_accounts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BankAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BankAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BankAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_bank_accounts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBankAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBankAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBankAccountRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_bank_accounts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/cash-account-types/": {
            "get": {
                "operationId": "finance_cash_account_types_list",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/cash-accounts/": {
            "get": {
                "operationId": "finance_cash_accounts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Currency",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "project",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sub_type",
                        "schema": {
                            "type": "string",
                            "title": "Account type",
                            "enum": [
                                "CASH",
                                "OTHER",
                                "WORK_ADVANCE"
                            ]
                        },
                        "description": "* `CASH` - Cash\n* `WORK_ADVANCE` - Work Advance\n* `OTHER` - Other"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BANK",
                                    "BOND",
                                    "CASH",
                                    "CHEQUE",
                                    "CUSTOMER",
                                    "EMPLOYEE",
                                    "OTHER",
                                    "SUBCONTRACTOR",
                                    "VENDOR"
                                ]
                            }
                        },
                        "description": "Account Type\n\n* `BANK` - Bank Account\n* `CASH` - Cash Account\n* `VENDOR` - Vendor\n* `SUBCONTRACTOR` - Subcontractor\n* `CUSTOMER` - Customer\n* `EMPLOYEE` - Employee\n* `OTHER` - Other\n* `CHEQUE` - Cheque\n* `BOND` - Bond",
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCashAccountListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_cash_accounts_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CashAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CashAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CashAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CashAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/cash-accounts/{id}/": {
            "get": {
                "operationId": "finance_cash_accounts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this cash account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CashAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_cash_accounts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this cash account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CashAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CashAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CashAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CashAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_cash_accounts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this cash account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCashAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCashAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCashAccountRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CashAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_cash_accounts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this cash account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/default-currency/": {
            "get": {
                "operationId": "finance_default_currency_list",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Currency"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/default-currency/{id}/": {
            "get": {
                "operationId": "finance_default_currency_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Currency"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/expense-transaction-types/": {
            "get": {
                "operationId": "finance_expense_transaction_types_list",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/expenses/": {
            "get": {
                "operationId": "finance_expenses_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account_from",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "account_to",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "amount_from_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                        }
                    },
                    {
                        "in": "query",
                        "name": "amount_from_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "EXPENSE",
                                "INCOME",
                                "REFUND",
                                "TRANSFER"
                            ]
                        },
                        "description": "* `EXPENSE` - Expense\n* `INCOME` - Income\n* `REFUND` - Refund\n* `TRANSFER` - Transfer"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedExpenseListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_expenses_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/expenses/{counter__slug}/": {
            "get": {
                "operationId": "finance_expenses_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_expenses_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_expenses_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExpenseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExpenseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExpenseRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_expenses_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/expenses/{counter__slug}/history/": {
            "get": {
                "operationId": "finance_expenses_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoice-categories/": {
            "get": {
                "operationId": "finance_income_invoice_categories_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IncomeInvoiceCategory"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_income_invoice_categories_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceCategoryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceCategoryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceCategoryRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoiceCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoice-categories/{id}/": {
            "get": {
                "operationId": "finance_income_invoice_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this income invoice category.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoiceCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_income_invoice_categories_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this income invoice category.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceCategoryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceCategoryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceCategoryRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoiceCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_income_invoice_categories_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this income invoice category.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIncomeInvoiceCategoryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIncomeInvoiceCategoryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIncomeInvoiceCategoryRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoiceCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_income_invoice_categories_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this income invoice category.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/income-invoices/": {
            "get": {
                "operationId": "finance_income_invoices_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedIncomeInvoiceListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_income_invoices_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/{counter__slug}/": {
            "get": {
                "operationId": "finance_income_invoices_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_income_invoices_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_income_invoices_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIncomeInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIncomeInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIncomeInvoiceRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_income_invoices_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/income-invoices/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "finance_income_invoices_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/{counter__slug}/attachments/": {
            "get": {
                "operationId": "finance_income_invoices_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/{counter__slug}/history/": {
            "get": {
                "operationId": "finance_income_invoices_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/add_attachment/": {
            "post": {
                "operationId": "finance_income_invoices_add_attachment_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/approvals/": {
            "post": {
                "operationId": "finance_income_invoices_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IncomeInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/approve/": {
            "post": {
                "operationId": "finance_income_invoices_approve_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForIncomeInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForIncomeInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForIncomeInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/permissions/": {
            "get": {
                "operationId": "finance_income_invoices_permissions_retrieve",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/income-invoices/states/": {
            "get": {
                "operationId": "finance_income_invoices_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/instruments/": {
            "get": {
                "operationId": "finance_instruments_list",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount_max",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Amount between"
                    },
                    {
                        "in": "query",
                        "name": "amount_min",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Amount between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Counter"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "Payment Date"
                    },
                    {
                        "in": "query",
                        "name": "payment_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "Payment Date"
                    },
                    {
                        "in": "query",
                        "name": "payment_details",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_method",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Payment Method",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier"
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier Id"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedInstrumentListDiscoveryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/instruments/permissions/": {
            "get": {
                "operationId": "finance_instruments_permissions_retrieve",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-bonds/": {
            "get": {
                "operationId": "finance_payment_bonds_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "counter_party",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter_party_id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentBondListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_payment_bonds_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBondRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-bonds/{counter__slug}/": {
            "get": {
                "operationId": "finance_payment_bonds_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_payment_bonds_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentBondRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_payment_bonds_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentBondRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_payment_bonds_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/payment-bonds/{counter__slug}/history/": {
            "get": {
                "operationId": "finance_payment_bonds_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-bonds/permissions/": {
            "get": {
                "operationId": "finance_payment_bonds_permissions_retrieve",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-cheques/": {
            "get": {
                "operationId": "finance_payment_cheques_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "counter_party",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter_party_id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentChequeListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_payment_cheques_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentChequeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-cheques/{counter__slug}/": {
            "get": {
                "operationId": "finance_payment_cheques_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_payment_cheques_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentChequeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_payment_cheques_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentChequeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_payment_cheques_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/payment-cheques/{counter__slug}/history/": {
            "get": {
                "operationId": "finance_payment_cheques_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-cheques/permissions/": {
            "get": {
                "operationId": "finance_payment_cheques_permissions_retrieve",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-details/": {
            "get": {
                "operationId": "finance_payment_details_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "realized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentDetailList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-details/{id}/": {
            "get": {
                "operationId": "finance_payment_details_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_payment_details_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_payment_details_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentDetailRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentDetailRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPaymentDetailRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_payment_details_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/payment-details/{id}/delete/": {
            "post": {
                "operationId": "finance_payment_details_delete_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Payment Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailDeleteRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailDeleteRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailDeleteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentDetailDelete"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-details/realize/": {
            "post": {
                "operationId": "finance_payment_details_realize_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailRealizeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailRealizeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentDetailRealizeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentDetailRealize"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/payment-instrument-states/": {
            "get": {
                "operationId": "finance_payment_instrument_states_list",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-payments/": {
            "get": {
                "operationId": "finance_planned_payments_list",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount_max",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Amount between"
                    },
                    {
                        "in": "query",
                        "name": "amount_min",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Amount between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Counter"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "Payment Date"
                    },
                    {
                        "in": "query",
                        "name": "payment_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "Payment Date"
                    },
                    {
                        "in": "query",
                        "name": "payment_details",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_method",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Payment Method",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier"
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier Id"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentPlan2TypeDiscoveryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-payments/pay_by_bond/": {
            "post": {
                "operationId": "finance_planned_payments_pay_by_bond_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByBondRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayByBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-payments/pay_by_cheque/": {
            "post": {
                "operationId": "finance_planned_payments_pay_by_cheque_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayByCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-payments/pay_by_filter/": {
            "post": {
                "operationId": "finance_planned_payments_pay_by_filter_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByFilterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByFilterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByFilterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayByFilter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-payments/pay_selected/": {
            "post": {
                "operationId": "finance_planned_payments_pay_selected_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaySelectedRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaySelectedRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaySelectedRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaySelected"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-payments/permissions/": {
            "get": {
                "operationId": "finance_planned_payments_permissions_retrieve",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-revenue/": {
            "get": {
                "operationId": "finance_planned_revenue_list",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount_max",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Amount between"
                    },
                    {
                        "in": "query",
                        "name": "amount_min",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Amount between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Counter"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "Payment Date"
                    },
                    {
                        "in": "query",
                        "name": "payment_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "description": "Payment Date"
                    },
                    {
                        "in": "query",
                        "name": "payment_details",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_method",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Payment Method",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier"
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier Id"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentPlan2TypeDiscoveryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-revenue/pay_by_bond/": {
            "post": {
                "operationId": "finance_planned_revenue_pay_by_bond_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByBondRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayByBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-revenue/pay_by_cheque/": {
            "post": {
                "operationId": "finance_planned_revenue_pay_by_cheque_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByChequeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayByCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-revenue/pay_by_filter/": {
            "post": {
                "operationId": "finance_planned_revenue_pay_by_filter_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByFilterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByFilterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PayByFilterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayByFilter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-revenue/pay_selected/": {
            "post": {
                "operationId": "finance_planned_revenue_pay_selected_create",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaySelectedRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaySelectedRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaySelectedRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaySelected"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/planned-revenue/permissions/": {
            "get": {
                "operationId": "finance_planned_revenue_permissions_retrieve",
                "description": "Create a List of objects from multiple models/serializers.\n\nMixin is expecting the view will have a querylist variable, which is\na list/tuple of dicts containing, at mininum, a `queryset` key and a\n`serializer_class` key,  as below:\n\nqueryList = [\n    {'queryset': MyModalA.objects.all(), 'serializer_class': MyModelASerializer ),\n    {'queryset': MyModalB.objects.all(), 'serializer_class': MyModelBSerializer ),\n    {'queryset': MyModalC.objects.all(), 'serializer_class': MyModelCSerializer ),\n    .....\n]\n\nThis mixin returns a list of serialized data merged together in a single list, eg:\n\n[\n    { 'id': 1, 'type': 'myModelA', 'title': 'some_object' },\n    { 'id': 4, 'type': 'myModelB', 'title': 'some_other_object' },\n    { 'id': 8, 'type': 'myModelA', 'title': 'anotherother_object' },\n    ...\n]",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-bonds/": {
            "get": {
                "operationId": "finance_revenue_bonds_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "counter_party",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter_party_id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRevenueBondListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_revenue_bonds_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueBondRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-bonds/{counter__slug}/": {
            "get": {
                "operationId": "finance_revenue_bonds_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_revenue_bonds_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueBondRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_revenue_bonds_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueBondRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueBondRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueBondRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_revenue_bonds_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/revenue-bonds/{counter__slug}/history/": {
            "get": {
                "operationId": "finance_revenue_bonds_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueBond"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-bonds/permissions/": {
            "get": {
                "operationId": "finance_revenue_bonds_permissions_retrieve",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-cheques/": {
            "get": {
                "operationId": "finance_revenue_cheques_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "counter_party",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter_party_id",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        },
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRevenueChequeListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_revenue_cheques_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueChequeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-cheques/{counter__slug}/": {
            "get": {
                "operationId": "finance_revenue_cheques_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_revenue_cheques_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueChequeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_revenue_cheques_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueChequeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueChequeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueChequeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_revenue_cheques_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/revenue-cheques/{counter__slug}/history/": {
            "get": {
                "operationId": "finance_revenue_cheques_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueCheque"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-cheques/permissions/": {
            "get": {
                "operationId": "finance_revenue_cheques_permissions_retrieve",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-details/": {
            "get": {
                "operationId": "finance_revenue_details_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "payment_method",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "realized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRevenueDetailList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-details/{id}/": {
            "get": {
                "operationId": "finance_revenue_details_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Revenue Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_revenue_details_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Revenue Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_revenue_details_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Revenue Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueDetailRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueDetailRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevenueDetailRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_revenue_details_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Revenue Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/revenue-details/{id}/delete/": {
            "post": {
                "operationId": "finance_revenue_details_delete_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Revenue Detail.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailDeleteRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailDeleteRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailDeleteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueDetailDelete"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/revenue-details/realize/": {
            "post": {
                "operationId": "finance_revenue_details_realize_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailRealizeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailRealizeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevenueDetailRealizeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RevenueDetailRealize"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/slips/": {
            "get": {
                "operationId": "finance_slips_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "object_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSlipList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_slips_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlipRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlipRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlipRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slip"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/slips/{id}/": {
            "get": {
                "operationId": "finance_slips_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this slip.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slip"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_slips_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this slip.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlipRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SlipRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SlipRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slip"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_slips_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this slip.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlipRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlipRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSlipRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Slip"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_slips_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this slip.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/supplier-account-types/": {
            "get": {
                "operationId": "finance_supplier_account_types_list",
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/supplier-accounts/": {
            "get": {
                "operationId": "finance_supplier_accounts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Currency",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "project",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sub_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ADVANCE",
                                "INSURANCE",
                                "MAIN",
                                "RETENTION",
                                "TAX"
                            ]
                        },
                        "description": "* `MAIN` - Main\n* `ADVANCE` - Advance\n* `RETENTION` - Retention\n* `INSURANCE` - Insurance\n* `TAX` - Tax"
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "BANK",
                                    "BOND",
                                    "CASH",
                                    "CHEQUE",
                                    "CUSTOMER",
                                    "EMPLOYEE",
                                    "OTHER",
                                    "SUBCONTRACTOR",
                                    "VENDOR"
                                ]
                            }
                        },
                        "description": "Account Type\n\n* `BANK` - Bank Account\n* `CASH` - Cash Account\n* `VENDOR` - Vendor\n* `SUBCONTRACTOR` - Subcontractor\n* `CUSTOMER` - Customer\n* `EMPLOYEE` - Employee\n* `OTHER` - Other\n* `CHEQUE` - Cheque\n* `BOND` - Bond",
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSupplierAccountListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_supplier_accounts_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/supplier-accounts/{id}/": {
            "get": {
                "operationId": "finance_supplier_accounts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_supplier_accounts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_supplier_accounts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_supplier_accounts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier account.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/txns/": {
            "get": {
                "operationId": "finance_txns_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "account_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Account Name"
                    },
                    {
                        "in": "query",
                        "name": "account_sub_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ADVANCE",
                                "INSURANCE",
                                "MAIN",
                                "RETENTION",
                                "TAX"
                            ]
                        },
                        "description": "Account Sub Type\n\n* `MAIN` - Main\n* `ADVANCE` - Advance\n* `RETENTION` - Retention\n* `INSURANCE` - Insurance\n* `TAX` - Tax"
                    },
                    {
                        "in": "query",
                        "name": "account_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BANK",
                                "BOND",
                                "CASH",
                                "CHEQUE",
                                "CUSTOMER",
                                "EMPLOYEE",
                                "OTHER",
                                "SUBCONTRACTOR",
                                "VENDOR"
                            ]
                        },
                        "description": "Account Type\n\n* `BANK` - Bank Account\n* `CASH` - Cash Account\n* `VENDOR` - Vendor\n* `SUBCONTRACTOR` - Subcontractor\n* `CUSTOMER` - Customer\n* `EMPLOYEE` - Employee\n* `OTHER` - Other\n* `CHEQUE` - Cheque\n* `BOND` - Bond"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "eformat",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "html",
                                "json",
                                "ods",
                                "tsv",
                                "xls",
                                "xlsx",
                                "yaml"
                            ]
                        },
                        "description": "Export Format\n\n* `csv` - csv\n* `xls` - xls\n* `xlsx` - xlsx\n* `tsv` - tsv\n* `ods` - ods\n* `yaml` - yaml\n* `json` - json\n* `html` - html"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "object_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Source Object ID"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "slip",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_type",
                        "schema": {
                            "type": "string",
                            "title": "Transaction type"
                        },
                        "description": "Transaction Type"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransactionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "finance_txns_create",
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/finance/txns/{id}/": {
            "get": {
                "operationId": "finance_txns_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "finance_txns_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "finance_txns_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTransactionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTransactionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTransactionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "finance_txns_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/finance/txns/export/": {
            "get": {
                "operationId": "finance_txns_export_retrieve",
                "description": "Export data to various formats",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "account_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Account Name"
                    },
                    {
                        "in": "query",
                        "name": "account_sub_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ADVANCE",
                                "INSURANCE",
                                "MAIN",
                                "RETENTION",
                                "TAX"
                            ]
                        },
                        "description": "Account Sub Type\n\n* `MAIN` - Main\n* `ADVANCE` - Advance\n* `RETENTION` - Retention\n* `INSURANCE` - Insurance\n* `TAX` - Tax"
                    },
                    {
                        "in": "query",
                        "name": "account_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BANK",
                                "BOND",
                                "CASH",
                                "CHEQUE",
                                "CUSTOMER",
                                "EMPLOYEE",
                                "OTHER",
                                "SUBCONTRACTOR",
                                "VENDOR"
                            ]
                        },
                        "description": "Account Type\n\n* `BANK` - Bank Account\n* `CASH` - Cash Account\n* `VENDOR` - Vendor\n* `SUBCONTRACTOR` - Subcontractor\n* `CUSTOMER` - Customer\n* `EMPLOYEE` - Employee\n* `OTHER` - Other\n* `CHEQUE` - Cheque\n* `BOND` - Bond"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "eformat",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "csv",
                                "html",
                                "json",
                                "ods",
                                "tsv",
                                "xls",
                                "xlsx",
                                "yaml"
                            ]
                        },
                        "description": "Export Format\n\n* `csv` - csv\n* `xls` - xls\n* `xlsx` - xlsx\n* `tsv` - tsv\n* `ods` - ods\n* `yaml` - yaml\n* `json` - json\n* `html` - html"
                    },
                    {
                        "in": "query",
                        "name": "object_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Source Object ID"
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "slip",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_type",
                        "schema": {
                            "type": "string",
                            "title": "Transaction type"
                        },
                        "description": "Transaction Type"
                    }
                ],
                "tags": [
                    "finance"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "byte"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/crews/": {
            "get": {
                "operationId": "hr_crews_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "activities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCrewListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_crews_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CrewRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CrewRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CrewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Crew"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/crews/{id}/": {
            "get": {
                "operationId": "hr_crews_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Crew.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Crew"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_crews_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Crew.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CrewRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CrewRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CrewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Crew"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_crews_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Crew.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCrewRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCrewRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCrewRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Crew"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_crews_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Crew.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/crews/{id}/history/": {
            "get": {
                "operationId": "hr_crews_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Crew.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Crew"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/crews/permissions/": {
            "get": {
                "operationId": "hr_crews_permissions_retrieve",
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/departments/": {
            "get": {
                "operationId": "hr_departments_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "value",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MainDepartment"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_departments_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MainDepartmentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MainDepartmentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MainDepartmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainDepartment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/departments/{id}/": {
            "get": {
                "operationId": "hr_departments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Department.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainDepartment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_departments_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Department.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MainDepartmentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MainDepartmentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MainDepartmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainDepartment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_departments_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Department.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMainDepartmentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMainDepartmentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMainDepartmentRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainDepartment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_departments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Department.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/locations/": {
            "get": {
                "operationId": "hr_locations_list",
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationParameter"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_locations_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationParameterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationParameterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationParameterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/locations/{id}/": {
            "get": {
                "operationId": "hr_locations_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Location.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_locations_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Location.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationParameterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationParameterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationParameterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_locations_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Location.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLocationParameterRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLocationParameterRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLocationParameterRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationParameter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_locations_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Location.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/personnel/": {
            "get": {
                "operationId": "hr_personnel_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "department",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "position",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "profession",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project_start_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "quit_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "DEACTIVE"
                            ]
                        },
                        "description": "* `ACTIVE` - Active\n* `DEACTIVE` - Deactive"
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPersonListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_personnel_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/personnel/{id}/": {
            "get": {
                "operationId": "hr_personnel_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Person.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_personnel_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Person.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_personnel_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Person.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPersonRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPersonRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPersonRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_personnel_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Person.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/personnel/{id}/history/": {
            "get": {
                "operationId": "hr_personnel_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Person.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/personnel/permissions/": {
            "get": {
                "operationId": "hr_personnel_permissions_retrieve",
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/positions/": {
            "get": {
                "operationId": "hr_positions_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "value",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MainPosition"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_positions_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MainPositionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MainPositionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MainPositionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainPosition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/positions/{id}/": {
            "get": {
                "operationId": "hr_positions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Position.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainPosition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_positions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Position.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MainPositionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MainPositionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MainPositionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainPosition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_positions_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Position.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMainPositionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMainPositionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMainPositionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MainPosition"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_positions_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Main Position.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/professions/": {
            "get": {
                "operationId": "hr_professions_list",
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Profession"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_professions_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfessionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfessionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfessionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/professions/{id}/": {
            "get": {
                "operationId": "hr_professions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Profession.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_professions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Profession.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfessionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfessionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfessionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_professions_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Profession.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfessionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfessionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfessionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profession"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_professions_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Profession.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/quit-reasons-/": {
            "get": {
                "operationId": "hr_quit_reasons__list",
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuitReason"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_quit_reasons__create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitReasonRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitReasonRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitReasonRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/quit-reasons-/{id}/": {
            "get": {
                "operationId": "hr_quit_reasons__retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_quit_reasons__update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitReasonRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitReasonRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitReasonRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_quit_reasons__partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedQuitReasonRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedQuitReasonRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedQuitReasonRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_quit_reasons__destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/quit-records/": {
            "get": {
                "operationId": "hr_quit_records_list",
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuitRecord"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_quit_records_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitRecordRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitRecordRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitRecordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/quit-records/{id}/": {
            "get": {
                "operationId": "hr_quit_records_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Record.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_quit_records_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Record.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitRecordRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitRecordRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/QuitRecordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_quit_records_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Record.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedQuitRecordRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedQuitRecordRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedQuitRecordRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuitRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_quit_records_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Quit Record.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/salaries/": {
            "get": {
                "operationId": "hr_salaries_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "salary_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hourly",
                                "monthly"
                            ]
                        },
                        "description": "* `hourly` - Hourly\n* `monthly` - Monthly"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSalaryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_salaries_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SalaryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SalaryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SalaryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/salaries/{id}/": {
            "get": {
                "operationId": "hr_salaries_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Salary.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_salaries_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Salary.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SalaryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SalaryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SalaryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_salaries_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Salary.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSalaryRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSalaryRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSalaryRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_salaries_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Salary.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/hr/salaries/{id}/history/": {
            "get": {
                "operationId": "hr_salaries_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this Salary.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Salary"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/salaries/permissions/": {
            "get": {
                "operationId": "hr_salaries_permissions_retrieve",
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/salary-permissions/": {
            "get": {
                "operationId": "hr_salary_permissions_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "can_edit_salary",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "can_view_salary",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectSalaryPermission"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "hr_salary_permissions_create",
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectSalaryPermissionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectSalaryPermissionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectSalaryPermissionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSalaryPermission"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/hr/salary-permissions/{id}/": {
            "get": {
                "operationId": "hr_salary_permissions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Project Salary Permission.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSalaryPermission"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "hr_salary_permissions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Project Salary Permission.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectSalaryPermissionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectSalaryPermissionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectSalaryPermissionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSalaryPermission"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "hr_salary_permissions_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Project Salary Permission.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectSalaryPermissionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectSalaryPermissionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectSalaryPermissionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectSalaryPermission"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "hr_salary_permissions_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this Project Salary Permission.",
                        "required": true
                    }
                ],
                "tags": [
                    "hr"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/advance-payments/": {
            "get": {
                "operationId": "procurement_advance_payments_list",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderAdvancePayment"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "procurement_advance_payments_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderAdvancePayment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/advance-payments/{id}/": {
            "get": {
                "operationId": "procurement_advance_payments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this order advance payment.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderAdvancePayment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "procurement_advance_payments_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this order advance payment.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderAdvancePayment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "procurement_advance_payments_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this order advance payment.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderAdvancePaymentRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderAdvancePaymentRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderAdvancePaymentRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderAdvancePayment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "procurement_advance_payments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this order advance payment.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/advance-payments/permissions/": {
            "get": {
                "operationId": "procurement_advance_payments_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-order-items/": {
            "get": {
                "operationId": "procurement_approved_order_items_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-activity",
                                    "-approver",
                                    "-company",
                                    "-counter",
                                    "-created",
                                    "-delivery_date",
                                    "-description",
                                    "-ordered_quantity",
                                    "-project",
                                    "-quantity",
                                    "-remaining_quantity",
                                    "-resource",
                                    "-supplier",
                                    "-wbs",
                                    "activity",
                                    "approver",
                                    "company",
                                    "counter",
                                    "created",
                                    "delivery_date",
                                    "description",
                                    "ordered_quantity",
                                    "project",
                                    "quantity",
                                    "remaining_quantity",
                                    "resource",
                                    "supplier",
                                    "wbs"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `counter` - Counter\n* `-counter` - Sayaç (descending)\n* `project` - Project\n* `-project` - Proje (descending)\n* `company` - Company\n* `-company` - Şirket (descending)\n* `approver` - Approver\n* `-approver` - Onaylayan (descending)\n* `created` - Created\n* `-created` - Oluşturulan (descending)\n* `description` - Description\n* `-description` - Açıklama (descending)\n* `supplier` - Supplier\n* `-supplier` - Supplier (descending)\n* `quantity` - Quantity\n* `-quantity` - Quantity (descending)\n* `resource` - Resource\n* `-resource` - Kaynak (descending)\n* `activity` - Activity\n* `-activity` - Aktivite (descending)\n* `wbs` - Wbs\n* `-wbs` - Wbs (descending)\n* `delivery_date` - Delivery date\n* `-delivery_date` - Delivery date (descending)\n* `ordered_quantity` - Ordered quantity\n* `-ordered_quantity` - Ordered quantity (descending)\n* `remaining_quantity` - Remaining quantity\n* `-remaining_quantity` - Remaining quantity (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "COMPLETELY_INVOICED",
                                "NOT_INVOICED",
                                "PARTIALLY_INVOICED"
                            ]
                        },
                        "description": "Order Status\n\n* `NOT_INVOICED` - Not yet invoiced\n* `PARTIALLY_INVOICED` - Partially Invoiced\n* `COMPLETELY_INVOICED` - Completely Invoiced\n* `CANCELLED` - Order Cancelled"
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovedOrderItemList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-order-items/cancel/": {
            "post": {
                "operationId": "procurement_approved_order_items_cancel_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellableRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellableRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellableRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovedOrderItem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-order-items/permissions/": {
            "get": {
                "operationId": "procurement_approved_order_items_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-order-items/uncancel/": {
            "post": {
                "operationId": "procurement_approved_order_items_uncancel_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnCancellableRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnCancellableRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnCancellableRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovedOrderItem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-request-items/": {
            "get": {
                "operationId": "procurement_approved_request_items_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "COMPLETELY_ORDERED",
                                "NOT_ORDERED",
                                "PARTIALLY_ORDERED"
                            ]
                        },
                        "description": "* `NOT_ORDERED` - Not yet ordered\n* `PARTIALLY_ORDERED` - Partially Ordered\n* `COMPLETELY_ORDERED` - Completely Ordered\n* `CANCELLED` - Order Cancelled"
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovedRequestItemList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-request-items/cancel/": {
            "post": {
                "operationId": "procurement_approved_request_items_cancel_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellableRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellableRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CancellableRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovedRequestItem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-request-items/create-offer-comparison/": {
            "post": {
                "operationId": "procurement_approved_request_items_create_offer_comparison_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OfferComparisonRequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OfferComparisonRequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OfferComparisonRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfferComparisonResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-request-items/permissions/": {
            "get": {
                "operationId": "procurement_approved_request_items_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/approved-request-items/uncancel/": {
            "post": {
                "operationId": "procurement_approved_request_items_uncancel_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnCancellableRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnCancellableRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnCancellableRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApprovedRequestItem"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoice-advance-balance/{counter__slug}/": {
            "get": {
                "operationId": "procurement_invoice_advance_balance_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Currency code",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceAdvanceBalance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoice-items/": {
            "get": {
                "operationId": "procurement_invoice_items_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-activity_group",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-project",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-resource_group",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InvoiceItemList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoice-items/permissions/": {
            "get": {
                "operationId": "procurement_invoice_items_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/": {
            "get": {
                "operationId": "procurement_invoices_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedInvoiceListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "procurement_invoices_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/{counter__slug}/": {
            "get": {
                "operationId": "procurement_invoices_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "procurement_invoices_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "procurement_invoices_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedInvoiceRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "procurement_invoices_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/invoices/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "procurement_invoices_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/{counter__slug}/attachments/": {
            "get": {
                "operationId": "procurement_invoices_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/{counter__slug}/history/": {
            "get": {
                "operationId": "procurement_invoices_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/add_attachment/": {
            "post": {
                "operationId": "procurement_invoices_add_attachment_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/approvals/": {
            "post": {
                "operationId": "procurement_invoices_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/approve/": {
            "post": {
                "operationId": "procurement_invoices_approve_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/permissions/": {
            "get": {
                "operationId": "procurement_invoices_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/prepare/": {
            "post": {
                "operationId": "procurement_invoices_prepare_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoicePrepareRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoicePrepareRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoicePrepareRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/invoices/states/": {
            "get": {
                "operationId": "procurement_invoices_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/": {
            "get": {
                "operationId": "procurement_orders_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrderListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "procurement_orders_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/{counter__slug}/": {
            "get": {
                "operationId": "procurement_orders_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "procurement_orders_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "procurement_orders_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrderRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "procurement_orders_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/orders/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "procurement_orders_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/{counter__slug}/attachments/": {
            "get": {
                "operationId": "procurement_orders_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/{counter__slug}/history/": {
            "get": {
                "operationId": "procurement_orders_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/add_attachment/": {
            "post": {
                "operationId": "procurement_orders_add_attachment_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/approvals/": {
            "post": {
                "operationId": "procurement_orders_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/approve/": {
            "post": {
                "operationId": "procurement_orders_approve_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForOrderRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForOrderRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForOrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/permissions/": {
            "get": {
                "operationId": "procurement_orders_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/prepare/": {
            "post": {
                "operationId": "procurement_orders_prepare_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderPrepareRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderPrepareRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderPrepareRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/orders/states/": {
            "get": {
                "operationId": "procurement_orders_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    },
                    {
                        "in": "query",
                        "name": "totals_with_vat_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true,
                            "title": "Total with vat"
                        },
                        "description": "Order total between"
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/request-types/": {
            "get": {
                "operationId": "procurement_request_types_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RequestType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "procurement_request_types_create",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/request-types/{id}/": {
            "get": {
                "operationId": "procurement_request_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this request type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "procurement_request_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this request type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "procurement_request_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this request type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "procurement_request_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this request type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/requests/": {
            "get": {
                "operationId": "procurement_requests_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRequestListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "procurement_requests_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/{counter__slug}/": {
            "get": {
                "operationId": "procurement_requests_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "procurement_requests_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "procurement_requests_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRequestRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "procurement_requests_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/requests/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "procurement_requests_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/{counter__slug}/attachments/": {
            "get": {
                "operationId": "procurement_requests_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/{counter__slug}/history/": {
            "get": {
                "operationId": "procurement_requests_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/add_attachment/": {
            "post": {
                "operationId": "procurement_requests_add_attachment_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/approvals/": {
            "post": {
                "operationId": "procurement_requests_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/approve/": {
            "post": {
                "operationId": "procurement_requests_approve_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForRequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForRequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/permissions/": {
            "get": {
                "operationId": "procurement_requests_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/requests/states/": {
            "get": {
                "operationId": "procurement_requests_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoice-items/": {
            "get": {
                "operationId": "procurement_special_invoice_items_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-activity_group",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-project",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-resource_group",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecialInvoiceItemList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoice-items/permissions/": {
            "get": {
                "operationId": "procurement_special_invoice_items_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoice-types/": {
            "get": {
                "operationId": "procurement_special_invoice_types_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecialInvoiceType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "procurement_special_invoice_types_create",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoiceType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoice-types/{id}/": {
            "get": {
                "operationId": "procurement_special_invoice_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this special invoice type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoiceType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "procurement_special_invoice_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this special invoice type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoiceType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "procurement_special_invoice_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this special invoice type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoiceType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "procurement_special_invoice_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this special invoice type.",
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/special-invoices/": {
            "get": {
                "operationId": "procurement_special_invoices_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSpecialInvoiceListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "procurement_special_invoices_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/{counter__slug}/": {
            "get": {
                "operationId": "procurement_special_invoices_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "procurement_special_invoices_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "procurement_special_invoices_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSpecialInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSpecialInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSpecialInvoiceRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "procurement_special_invoices_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/procurement/special-invoices/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "procurement_special_invoices_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/{counter__slug}/attachments/": {
            "get": {
                "operationId": "procurement_special_invoices_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/{counter__slug}/history/": {
            "get": {
                "operationId": "procurement_special_invoices_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/add_attachment/": {
            "post": {
                "operationId": "procurement_special_invoices_add_attachment_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/approvals/": {
            "post": {
                "operationId": "procurement_special_invoices_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecialInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/approve/": {
            "post": {
                "operationId": "procurement_special_invoices_approve_create",
                "tags": [
                    "procurement"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForSpecialInvoiceRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForSpecialInvoiceRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForSpecialInvoiceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecialInvoice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/permissions/": {
            "get": {
                "operationId": "procurement_special_invoices_permissions_retrieve",
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/procurement/special-invoices/states/": {
            "get": {
                "operationId": "procurement_special_invoices_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "balance_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "balance_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                            "nullable": true
                        },
                        "description": "Balance between"
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "procurement"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/profiles/avatar/": {
            "get": {
                "operationId": "profiles_avatar_list",
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Avatar"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "profiles_avatar_create",
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AvatarRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Avatar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/profiles/avatar/{id}/": {
            "get": {
                "operationId": "profiles_avatar_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this profile.",
                        "required": true
                    }
                ],
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Avatar"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/profiles/notifications/": {
            "post": {
                "operationId": "profiles_notifications_create",
                "tags": [
                    "profiles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/profiles/users/": {
            "get": {
                "operationId": "profiles_users_list",
                "tags": [
                    "profiles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserProfile"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/accountingtypes/": {
            "get": {
                "operationId": "projects_accountingtypes_list",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountingType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_accountingtypes_create",
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/accountingtypes/{id}/": {
            "get": {
                "operationId": "projects_accountingtypes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_accountingtypes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_accountingtypes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccountingTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccountingTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccountingTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_accountingtypes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this accounting type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/cities/": {
            "get": {
                "operationId": "projects_cities_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "country",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/City"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_cities_create",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/cities/{id}/": {
            "get": {
                "operationId": "projects_cities_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this city.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_cities_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this city.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_cities_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this city.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/City"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_cities_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this city.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/companies/": {
            "get": {
                "operationId": "projects_companies_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_companies_create",
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/companies/{slug}/": {
            "get": {
                "operationId": "projects_companies_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_companies_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_companies_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompanyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompanyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompanyRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_companies_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/companies/{slug}/history/": {
            "get": {
                "operationId": "projects_companies_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/companies/{slug}/validate-offer-comparison-api-key/": {
            "post": {
                "operationId": "projects_companies_validate_offer_comparison_api_key_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidateOfferComparisonApiKeyRequestRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidateOfferComparisonApiKeyRequestRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidateOfferComparisonApiKeyRequestRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateOfferComparisonApiKeyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/companies/available/": {
            "get": {
                "operationId": "projects_companies_available_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompanyAvailable"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/companies/permissions/": {
            "get": {
                "operationId": "projects_companies_permissions_retrieve",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/countries/": {
            "get": {
                "operationId": "projects_countries_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Country"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_countries_create",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/countries/{id}/": {
            "get": {
                "operationId": "projects_countries_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this country.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_countries_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this country.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_countries_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this country.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_countries_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this country.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/districts/": {
            "get": {
                "operationId": "projects_districts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "city",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/District"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_districts_create",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/District"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/districts/{id}/": {
            "get": {
                "operationId": "projects_districts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this district.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/District"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_districts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this district.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/District"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_districts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this district.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/District"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_districts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this district.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/projects/": {
            "get": {
                "operationId": "projects_projects_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wbs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProjectListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_projects_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/projects/{slug}/": {
            "get": {
                "operationId": "projects_projects_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_projects_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_projects_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_projects_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/projects/{slug}/history/": {
            "get": {
                "operationId": "projects_projects_history_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/projects/{slug}/responsibilities/": {
            "get": {
                "operationId": "projects_projects_responsibilities_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/projects/available/": {
            "get": {
                "operationId": "projects_projects_available_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "wbs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectAvailable"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/projects/permissions/": {
            "get": {
                "operationId": "projects_projects_permissions_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "has_wbs",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/projecttypes/": {
            "get": {
                "operationId": "projects_projecttypes_list",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectTypeParam"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_projecttypes_create",
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectTypeParamRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectTypeParamRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectTypeParamRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/projecttypes/{id}/": {
            "get": {
                "operationId": "projects_projecttypes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this project type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_projecttypes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this project type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectTypeParamRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectTypeParamRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectTypeParamRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_projecttypes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this project type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectTypeParamRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectTypeParamRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProjectTypeParamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_projecttypes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this project type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/responsibles/": {
            "get": {
                "operationId": "projects_responsibles_list",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Responsible"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_responsibles_create",
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Responsible"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/responsibles/{id}/": {
            "get": {
                "operationId": "projects_responsibles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Responsible"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_responsibles_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Responsible"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_responsibles_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResponsibleRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResponsibleRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResponsibleRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Responsible"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_responsibles_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/projects/responsibletypes/": {
            "get": {
                "operationId": "projects_responsibletypes_list",
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResponsibleTypeParam"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "projects_responsibletypes_create",
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleTypeParamRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleTypeParamRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleTypeParamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsibleTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/projects/responsibletypes/{id}/": {
            "get": {
                "operationId": "projects_responsibletypes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsibleTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "projects_responsibletypes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleTypeParamRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleTypeParamRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResponsibleTypeParamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsibleTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "projects_responsibletypes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResponsibleTypeParamRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResponsibleTypeParamRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedResponsibleTypeParamRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponsibleTypeParam"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "projects_responsibletypes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this responsible type.",
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/rates/rates/": {
            "get": {
                "operationId": "rates_rates_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "rate_from",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rate_from_value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rate_to",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "rate_to_value",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "rates"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rate"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "rates_rates_create",
                "tags": [
                    "rates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/rates/rates/{id}/": {
            "get": {
                "operationId": "rates_rates_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this rate.",
                        "required": true
                    }
                ],
                "tags": [
                    "rates"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "rates_rates_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this rate.",
                        "required": true
                    }
                ],
                "tags": [
                    "rates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "rates_rates_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this rate.",
                        "required": true
                    }
                ],
                "tags": [
                    "rates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "rates_rates_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this rate.",
                        "required": true
                    }
                ],
                "tags": [
                    "rates"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/contract-categories/": {
            "get": {
                "operationId": "subcontracts_contract_categories_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractCategory"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_contract_categories_create",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contract-categories/{id}/": {
            "get": {
                "operationId": "subcontracts_contract_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract category.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_contract_categories_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract category.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_contract_categories_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract category.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_contract_categories_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract category.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/contract-collateral-reason/": {
            "get": {
                "operationId": "subcontracts_contract_collateral_reason_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractCollateralReason"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_contract_collateral_reason_create",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contract-collateral-reason/{id}/": {
            "get": {
                "operationId": "subcontracts_contract_collateral_reason_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_contract_collateral_reason_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_contract_collateral_reason_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralReason"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_contract_collateral_reason_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral reason.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/contract-collateral-status/": {
            "get": {
                "operationId": "subcontracts_contract_collateral_status_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractCollateralStatus"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_contract_collateral_status_create",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contract-collateral-status/{id}/": {
            "get": {
                "operationId": "subcontracts_contract_collateral_status_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral status.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_contract_collateral_status_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral status.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_contract_collateral_status_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral status.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_contract_collateral_status_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral status.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/contract-collateral-types/": {
            "get": {
                "operationId": "subcontracts_contract_collateral_types_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractCollateralType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_contract_collateral_types_create",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contract-collateral-types/{id}/": {
            "get": {
                "operationId": "subcontracts_contract_collateral_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral type.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_contract_collateral_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral type.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_contract_collateral_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral type.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCollateralType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_contract_collateral_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract collateral type.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/contract-collaterals/": {
            "get": {
                "operationId": "subcontracts_contract_collaterals_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "amount_max",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                        },
                        "description": "Collateral amount between"
                    },
                    {
                        "in": "query",
                        "name": "amount_min",
                        "schema": {
                            "type": "string",
                            "format": "decimal",
                            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                        },
                        "description": "Collateral amount between"
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reason",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "received_At_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "received_At_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "received_at",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "valid_until_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "valid_until_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContractCollateralListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contract-collaterals/permissions/": {
            "get": {
                "operationId": "subcontracts_contract_collaterals_permissions_retrieve",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/": {
            "get": {
                "operationId": "subcontracts_contracts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContractListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_contracts_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/": {
            "get": {
                "operationId": "subcontracts_contracts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_contracts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_contracts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContractRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContractRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContractRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_contracts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "subcontracts_contracts_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/attachments/": {
            "get": {
                "operationId": "subcontracts_contracts_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/copy_contract/": {
            "get": {
                "operationId": "subcontracts_contracts_copy_contract_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/create_progress/": {
            "get": {
                "operationId": "subcontracts_contracts_create_progress_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/create_revision/": {
            "post": {
                "operationId": "subcontracts_contracts_create_revision_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRevisionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRevisionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRevisionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/deduction-return/{type}/": {
            "get": {
                "operationId": "subcontracts_contracts_deduction_return_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "pattern": "^[\\w-]+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/{counter__slug}/history/": {
            "get": {
                "operationId": "subcontracts_contracts_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/add_attachment/": {
            "post": {
                "operationId": "subcontracts_contracts_add_attachment_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/approvals/": {
            "post": {
                "operationId": "subcontracts_contracts_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/approve/": {
            "post": {
                "operationId": "subcontracts_contracts_approve_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForContractRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForContractRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/permissions/": {
            "get": {
                "operationId": "subcontracts_contracts_permissions_retrieve",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/contracts/states/": {
            "get": {
                "operationId": "subcontracts_contracts_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/": {
            "get": {
                "operationId": "subcontracts_deduction_returns_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeductionReturnListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_deduction_returns_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/{counter__slug}/": {
            "get": {
                "operationId": "subcontracts_deduction_returns_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_deduction_returns_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_deduction_returns_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDeductionReturnRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDeductionReturnRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDeductionReturnRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_deduction_returns_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "subcontracts_deduction_returns_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/{counter__slug}/attachments/": {
            "get": {
                "operationId": "subcontracts_deduction_returns_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/{counter__slug}/history/": {
            "get": {
                "operationId": "subcontracts_deduction_returns_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/add_attachment/": {
            "post": {
                "operationId": "subcontracts_deduction_returns_add_attachment_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/approvals/": {
            "post": {
                "operationId": "subcontracts_deduction_returns_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductionReturnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/approve/": {
            "post": {
                "operationId": "subcontracts_deduction_returns_approve_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForDeductionReturnRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForDeductionReturnRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForDeductionReturnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeductionReturn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/permissions/": {
            "get": {
                "operationId": "subcontracts_deduction_returns_permissions_retrieve",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/deduction-returns/states/": {
            "get": {
                "operationId": "subcontracts_deduction_returns_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progress-addition-types/": {
            "get": {
                "operationId": "subcontracts_progress_addition_types_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProgressAdditionType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progress-addition-types/{slug}/": {
            "get": {
                "operationId": "subcontracts_progress_addition_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressAdditionType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progress-deduction-types/": {
            "get": {
                "operationId": "subcontracts_progress_deduction_types_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "is_invoiceable",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_returnable",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProgressDeductionType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progress-deduction-types/{slug}/": {
            "get": {
                "operationId": "subcontracts_progress_deduction_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProgressDeductionType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progress-items/": {
            "get": {
                "operationId": "subcontracts_progress_items_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "var-activity_group",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-project",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "var-resource_group",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProgressItemList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progress-items/permissions/": {
            "get": {
                "operationId": "subcontracts_progress_items_permissions_retrieve",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/": {
            "get": {
                "operationId": "subcontracts_progresses_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "progress_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProgressListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_progresses_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/{counter__slug}/": {
            "get": {
                "operationId": "subcontracts_progresses_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_progresses_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_progresses_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProgressRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProgressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProgressRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_progresses_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/progresses/{counter__slug}/approval-history/": {
            "get": {
                "operationId": "subcontracts_progresses_approval_history_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "progress_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApprovalHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/{counter__slug}/attachments/": {
            "get": {
                "operationId": "subcontracts_progresses_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/{counter__slug}/history/": {
            "get": {
                "operationId": "subcontracts_progresses_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "counter__slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/add_attachment/": {
            "post": {
                "operationId": "subcontracts_progresses_add_attachment_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/approvals/": {
            "post": {
                "operationId": "subcontracts_progresses_approvals_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "progress_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProgressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransitionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/approve/": {
            "post": {
                "operationId": "subcontracts_progresses_approve_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForProgressRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForProgressRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveSerializerForProgressRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Progress"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/permissions/": {
            "get": {
                "operationId": "subcontracts_progresses_permissions_retrieve",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/progresses/states/": {
            "get": {
                "operationId": "subcontracts_progresses_states_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "approver",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract__category",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "contract_code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "in": "query",
                        "name": "counter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "finalized",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "progress_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "subcontractor",
                        "schema": {
                            "type": "string",
                            "title": "Supplier name"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totals",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/revisions/": {
            "get": {
                "operationId": "subcontracts_revisions_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRevisionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "subcontracts_revisions_create",
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevisionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevisionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevisionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Revision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/subcontracts/revisions/{id}/": {
            "get": {
                "operationId": "subcontracts_revisions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract revision.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Revision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "subcontracts_revisions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract revision.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RevisionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RevisionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RevisionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Revision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "subcontracts_revisions_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract revision.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevisionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevisionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRevisionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Revision"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "subcontracts_revisions_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this contract revision.",
                        "required": true
                    }
                ],
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/subcontracts/revisions/permissions/": {
            "get": {
                "operationId": "subcontracts_revisions_permissions_retrieve",
                "tags": [
                    "subcontracts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/accounting-codes/": {
            "get": {
                "operationId": "suppliers_accounting_codes_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier__slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplierAccountingCode"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_accounting_codes_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/accounting-codes/{id}/": {
            "get": {
                "operationId": "suppliers_accounting_codes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_accounting_codes_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierAccountingCodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_accounting_codes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountingCodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountingCodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierAccountingCodeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierAccountingCode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_accounting_codes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier accounting code.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/advance-balances/{slug}/": {
            "get": {
                "operationId": "suppliers_advance_balances_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Currency code",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceAdvanceBalance"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/bank-accounts/": {
            "get": {
                "operationId": "suppliers_bank_accounts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "bank_name",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "currency",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier__slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplierBankAccount"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_bank_accounts_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierBankAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierBankAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierBankAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierBankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/bank-accounts/{id}/": {
            "get": {
                "operationId": "suppliers_bank_accounts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierBankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_bank_accounts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierBankAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierBankAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierBankAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierBankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_bank_accounts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierBankAccountRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierBankAccountRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierBankAccountRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierBankAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_bank_accounts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier bank account.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/contacts/": {
            "get": {
                "operationId": "suppliers_contacts_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier__slug",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contact"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_contacts_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/contacts/{id}/": {
            "get": {
                "operationId": "suppliers_contacts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_contacts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_contacts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContactRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContactRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContactRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_contacts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier contact.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/contacts/permissions/": {
            "get": {
                "operationId": "suppliers_contacts_permissions_retrieve",
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-answers/": {
            "get": {
                "operationId": "suppliers_review_answers_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "review",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "score__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "score__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "score__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Answer"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_review_answers_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnswerRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnswerRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnswerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Answer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-answers/{id}/": {
            "get": {
                "operationId": "suppliers_review_answers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this answer.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Answer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_review_answers_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this answer.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnswerRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnswerRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnswerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Answer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_review_answers_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this answer.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnswerRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnswerRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnswerRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Answer"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_review_answers_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this answer.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/review-forms/": {
            "get": {
                "operationId": "suppliers_review_forms_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "score_max",
                        "schema": {
                            "type": "integer",
                            "maximum": 32767,
                            "minimum": 0,
                            "nullable": true
                        },
                        "description": "score is greater than"
                    },
                    {
                        "in": "query",
                        "name": "score_min",
                        "schema": {
                            "type": "integer",
                            "maximum": 32767,
                            "minimum": 0,
                            "nullable": true
                        },
                        "description": "score is greater than"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier__name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "supplier__slug",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "template",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedReviewsListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_review_forms_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-forms/{slug}/": {
            "get": {
                "operationId": "suppliers_review_forms_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_review_forms_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_review_forms_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_review_forms_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/review-forms/{slug}/answers/": {
            "put": {
                "operationId": "suppliers_review_forms_answers_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-forms/{slug}/history/": {
            "get": {
                "operationId": "suppliers_review_forms_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Review"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-forms/permissions/": {
            "get": {
                "operationId": "suppliers_review_forms_permissions_retrieve",
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-questions/": {
            "get": {
                "operationId": "suppliers_review_questions_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "template",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReviewQuestion"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_review_questions_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewQuestionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewQuestionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewQuestionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewQuestion"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-questions/{id}/": {
            "get": {
                "operationId": "suppliers_review_questions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this review question.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewQuestion"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_review_questions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this review question.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewQuestionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewQuestionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewQuestionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewQuestion"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_review_questions_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this review question.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewQuestionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewQuestionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewQuestionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewQuestion"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_review_questions_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this review question.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/review-templates/": {
            "get": {
                "operationId": "suppliers_review_templates_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "pass_mark",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "review_type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ReviewTemplateList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_review_templates_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-templates/{slug}/": {
            "get": {
                "operationId": "suppliers_review_templates_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_review_templates_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_review_templates_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewTemplateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewTemplateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedReviewTemplateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_review_templates_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/review-templates/{slug}/history/": {
            "get": {
                "operationId": "suppliers_review_templates_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-templates/{slug}/questions/": {
            "put": {
                "operationId": "suppliers_review_templates_questions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewTemplateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReviewTemplate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/review-templates/permissions/": {
            "get": {
                "operationId": "suppliers_review_templates_permissions_retrieve",
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/supplier-activity-types/": {
            "get": {
                "operationId": "suppliers_supplier_activity_types_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_supplier_activity_types_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/supplier-activity-types/{id}/": {
            "get": {
                "operationId": "suppliers_supplier_activity_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier activity type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_supplier_activity_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier activity type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_supplier_activity_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier activity type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedActivityTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedActivityTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedActivityTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_supplier_activity_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier activity type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/supplier-branches/": {
            "get": {
                "operationId": "suppliers_supplier_branches_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Branch"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_supplier_branches_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Branch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/supplier-branches/{id}/": {
            "get": {
                "operationId": "suppliers_supplier_branches_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier branch.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Branch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_supplier_branches_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier branch.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BranchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Branch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_supplier_branches_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier branch.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBranchRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBranchRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBranchRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Branch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_supplier_branches_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier branch.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/supplier-types/": {
            "get": {
                "operationId": "suppliers_supplier_types_list",
                "parameters": [
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplierType"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_supplier_types_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/supplier-types/{id}/": {
            "get": {
                "operationId": "suppliers_supplier_types_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_supplier_types_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierTypeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_supplier_types_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierTypeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierTypeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierTypeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SupplierType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_supplier_types_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this supplier type.",
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/suppliers/": {
            "get": {
                "operationId": "suppliers_suppliers_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "activity_type",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "branch",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "country",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "country__name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSupplierList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "suppliers_suppliers_create",
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/suppliers/{slug}/": {
            "get": {
                "operationId": "suppliers_suppliers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "suppliers_suppliers_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SupplierRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "suppliers_suppliers_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplierRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "suppliers_suppliers_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/suppliers/suppliers/{slug}/history/": {
            "get": {
                "operationId": "suppliers_suppliers_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/suppliers/autocomplete/": {
            "get": {
                "operationId": "suppliers_suppliers_autocomplete_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "search_value",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SupplierAutocomplete"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/suppliers/suppliers/permissions/": {
            "get": {
                "operationId": "suppliers_suppliers_permissions_retrieve",
                "tags": [
                    "suppliers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/products/": {
            "get": {
                "operationId": "warehouse_products_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_no",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order No"
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-company",
                                    "-description",
                                    "-expected_delivery_date",
                                    "-order_no",
                                    "-project",
                                    "-quantity_float",
                                    "-resource",
                                    "-supplier",
                                    "-warehouse",
                                    "company",
                                    "description",
                                    "expected_delivery_date",
                                    "order_no",
                                    "project",
                                    "quantity_float",
                                    "resource",
                                    "supplier",
                                    "warehouse"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `description` - Description\n* `-description` - Açıklama (descending)\n* `resource` - Resource\n* `-resource` - Kaynak (descending)\n* `quantity_float` - Quantity float\n* `-quantity_float` - Quantity float (descending)\n* `project` - Project\n* `-project` - Proje (descending)\n* `company` - Company\n* `-company` - Şirket (descending)\n* `warehouse` - Warehouse\n* `-warehouse` - Warehouse (descending)\n* `supplier` - Supplier\n* `-supplier` - Supplier (descending)\n* `order_no` - Order no\n* `-order_no` - Order no (descending)\n* `expected_delivery_date` - Expected delivery date\n* `-expected_delivery_date` - Expected delivery date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "resource",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier"
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "warehouse_products_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/products/{id}/": {
            "get": {
                "operationId": "warehouse_products_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this product.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "warehouse_products_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this product.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "warehouse_products_partial_update",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this product.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductCreateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "warehouse_products_destroy",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this product.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/warehouse/products/{id}/attachments/": {
            "get": {
                "operationId": "warehouse_products_attachments_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this product.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/products/{id}/history/": {
            "get": {
                "operationId": "warehouse_products_history_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this product.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/products/{id}/transactions/": {
            "get": {
                "operationId": "warehouse_products_transactions_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "txn_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "txn_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransactionListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/products/add_attachment/": {
            "post": {
                "operationId": "warehouse_products_add_attachment_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/products/deliver_products/": {
            "post": {
                "operationId": "warehouse_products_deliver_products_create",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDeliveryListCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDeliveryListCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDeliveryListCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/products/permissions/": {
            "get": {
                "operationId": "warehouse_products_permissions_retrieve",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Company Id"
                    },
                    {
                        "in": "query",
                        "name": "order_no__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Order no"
                    },
                    {
                        "in": "query",
                        "name": "project",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Project Id"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CANCELLED",
                                "DAMAGED",
                                "EXPECTED",
                                "LOST",
                                "OVERDELIVERED",
                                "SOLD",
                                "STOCK",
                                "STOLEN",
                                "USED"
                            ]
                        },
                        "description": "Product status",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "supplier__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Supplier name"
                    },
                    {
                        "in": "query",
                        "name": "warehouse",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Warehouse Id"
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/transactions/": {
            "get": {
                "operationId": "warehouse_transactions_list",
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TransactionList"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "warehouse_transactions_create",
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionListCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionListCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionListCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionListCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/transactions/{id}/": {
            "get": {
                "operationId": "warehouse_transactions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "warehouse_transactions_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionListCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionListCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionListCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "warehouse_transactions_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTransactionListCreateRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTransactionListCreateRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTransactionListCreateRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "warehouse_transactions_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this transaction.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/warehouse/transactions/permissions/": {
            "get": {
                "operationId": "warehouse_transactions_permissions_retrieve",
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/warehouses/": {
            "get": {
                "operationId": "warehouse_warehouses_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWarehouseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "warehouse_warehouses_create",
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/warehouses/{id}/": {
            "get": {
                "operationId": "warehouse_warehouses_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this warehouse.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "warehouse_warehouses_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this warehouse.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WarehouseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "warehouse_warehouses_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this warehouse.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWarehouseRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWarehouseRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWarehouseRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "warehouse_warehouses_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this warehouse.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/warehouse/warehouses/{id}/history/": {
            "get": {
                "operationId": "warehouse_warehouses_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this warehouse.",
                        "required": true
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/warehouses/available/": {
            "get": {
                "operationId": "warehouse_warehouses_available_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Warehouse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/warehouse/warehouses/permissions/": {
            "get": {
                "operationId": "warehouse_warehouses_permissions_retrieve",
                "tags": [
                    "warehouse"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectName"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "balance_credit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "balance_debit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "balance_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "balance_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "comments": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_default_currency": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "has_transactions": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "balance",
                    "balance_credit",
                    "balance_credit_dc",
                    "balance_debit",
                    "balance_debit_dc",
                    "created",
                    "created_by",
                    "currency",
                    "has_transactions",
                    "id",
                    "is_default_currency",
                    "name",
                    "project",
                    "title",
                    "type"
                ]
            },
            "AccountName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "AccountOwnerEnum": {
                "enum": [
                    "CUSTOMER",
                    "VENDOR",
                    "SUBCONTRACTOR"
                ],
                "type": "string",
                "description": "* `CUSTOMER` - customer\n* `VENDOR` - vendor\n* `SUBCONTRACTOR` - subcontractor"
            },
            "AccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "comments": {
                        "type": "string"
                    }
                },
                "required": [
                    "currency",
                    "project"
                ]
            },
            "AccountTitleCurrencyBalance": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "balance",
                    "currency",
                    "id",
                    "title"
                ]
            },
            "AccountType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "AccountingType": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    },
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "AccountingTypeRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                }
            },
            "AccountingTypeValue": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "Activity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "accounting_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeAccountingCode"
                        }
                    },
                    "depth": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parent_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "numchild": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "created",
                    "depth",
                    "full_code",
                    "id",
                    "modified",
                    "name",
                    "numchild",
                    "parent_id"
                ]
            },
            "ActivityList": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "numchild": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "results": {
                        "type": "array",
                        "items": {},
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name",
                    "numchild",
                    "results"
                ]
            },
            "ActivityNameCode": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name"
                ]
            },
            "ActivityRequest": {
                "type": "object",
                "properties": {
                    "accounting_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchedCodeAccountingCodeRequest"
                        }
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    }
                },
                "required": [
                    "code"
                ]
            },
            "ActivityType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "ActivityTypeRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "value"
                ]
            },
            "Answer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "question": {
                        "type": "string",
                        "readOnly": true
                    },
                    "maximum_score": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 1,
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "score": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created",
                    "created_by",
                    "id",
                    "maximum_score",
                    "modified",
                    "modified_by",
                    "question"
                ]
            },
            "AnswerRequest": {
                "type": "object",
                "properties": {
                    "score": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    }
                }
            },
            "ApprovalHistory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "source_status": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "destination_status": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "note": {
                        "type": "string"
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "transactioner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "direction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApprovalHistoryDirectionEnum"
                            }
                        ],
                        "title": "Status"
                    }
                },
                "required": [
                    "approver",
                    "id",
                    "transactioner"
                ]
            },
            "ApprovalHistoryDirectionEnum": {
                "enum": [
                    "PENDING",
                    "REJECTED",
                    "APPROVED"
                ],
                "type": "string",
                "description": "* `PENDING` - Pending\n* `REJECTED` - Reject\n* `APPROVED` - Approve"
            },
            "ApproveSerializerForContractRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/ContractRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApproveSerializerForDeductionReturnRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/DeductionReturnRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApproveSerializerForIncomeInvoiceRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/IncomeInvoiceRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApproveSerializerForInvoiceRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/InvoiceRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApproveSerializerForOrderRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/OrderRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApproveSerializerForProgressRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/ProgressRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApproveSerializerForRequestRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/RequestRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApproveSerializerForSpecialInvoiceRequest": {
                "type": "object",
                "properties": {
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "approver": {
                        "type": "integer"
                    },
                    "as_user": {
                        "type": "integer"
                    },
                    "note": {
                        "type": "string"
                    },
                    "approval_context": {
                        "$ref": "#/components/schemas/SpecialInvoiceRequest"
                    }
                },
                "required": [
                    "transition",
                    "approver",
                    "as_user",
                    "approval_context"
                ]
            },
            "ApprovedOrderItem": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "counter": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "request_no": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "title": "Supplier name",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "activity_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resource_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resource_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "wbs_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "wbs_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unit": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "ordered_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "invoiced_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "expected_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApprovedOrderItemStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "cancelled_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "cancelled": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "cancel_reason": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "activity_code",
                    "activity_name",
                    "approver",
                    "cancel_reason",
                    "cancelled",
                    "cancelled_by",
                    "company",
                    "counter",
                    "currency",
                    "description",
                    "expected_quantity",
                    "id",
                    "invoiced_quantity",
                    "ordered_quantity",
                    "project",
                    "request_no",
                    "resource_code",
                    "resource_name",
                    "status",
                    "supplier",
                    "unit",
                    "wbs_code",
                    "wbs_name"
                ]
            },
            "ApprovedOrderItemStatusEnum": {
                "enum": [
                    "NOT_INVOICED",
                    "PARTIALLY_INVOICED",
                    "COMPLETELY_INVOICED",
                    "CANCELLED"
                ],
                "type": "string",
                "description": "* `NOT_INVOICED` - Not yet invoiced\n* `PARTIALLY_INVOICED` - Partially Invoiced\n* `COMPLETELY_INVOICED` - Completely Invoiced\n* `CANCELLED` - Order Cancelled"
            },
            "ApprovedRequestItem": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "counter": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resource_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resource_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "wbs_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "wbs_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "ordered_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApprovedRequestItemStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "cancelled_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "cancelled": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Cancel Date",
                        "readOnly": true
                    },
                    "cancel_reason": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "activity_code",
                    "activity_name",
                    "approver",
                    "cancel_reason",
                    "cancelled",
                    "cancelled_by",
                    "company",
                    "counter",
                    "id",
                    "ordered_quantity",
                    "project",
                    "resource_code",
                    "resource_name",
                    "status",
                    "unit",
                    "wbs_code",
                    "wbs_name"
                ]
            },
            "ApprovedRequestItemStatusEnum": {
                "enum": [
                    "NOT_ORDERED",
                    "PARTIALLY_ORDERED",
                    "COMPLETELY_ORDERED",
                    "CANCELLED"
                ],
                "type": "string",
                "description": "* `NOT_ORDERED` - Not yet ordered\n* `PARTIALLY_ORDERED` - Partially Ordered\n* `COMPLETELY_ORDERED` - Completely Ordered\n* `CANCELLED` - Order Cancelled"
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "object_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "file",
                    "id",
                    "object_id",
                    "size"
                ]
            },
            "AttachmentRequest": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "object_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "file",
                    "object_id"
                ]
            },
            "Avatar": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "avatar"
                ]
            },
            "AvatarRequest": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "required": [
                    "avatar"
                ]
            },
            "BankAccount": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "bank": {
                        "$ref": "#/components/schemas/BankName"
                    },
                    "sub_type": {
                        "$ref": "#/components/schemas/BankAccountSubTypeEnum"
                    },
                    "branch": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "account_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "has_transactions": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "bank",
                    "company",
                    "currency",
                    "has_transactions",
                    "id",
                    "payment_method",
                    "project",
                    "sub_type"
                ]
            },
            "BankAccountList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bank": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sub_type": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "account_number": {
                        "type": "string"
                    },
                    "iban": {
                        "type": "string"
                    },
                    "branch": {
                        "type": "string"
                    },
                    "accounting_code": {
                        "type": "string"
                    },
                    "balance_credit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_debit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    }
                },
                "required": [
                    "account_number",
                    "accounting_code",
                    "balance",
                    "balance_credit",
                    "balance_credit_dc",
                    "balance_debit",
                    "balance_debit_dc",
                    "bank",
                    "branch",
                    "company",
                    "created",
                    "created_by",
                    "currency",
                    "iban",
                    "id",
                    "name",
                    "project",
                    "sub_type"
                ]
            },
            "BankAccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "bank": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sub_type": {
                        "$ref": "#/components/schemas/BankAccountSubTypeEnum"
                    },
                    "branch": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "account_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "bank",
                    "company",
                    "currency",
                    "payment_method",
                    "project",
                    "sub_type"
                ]
            },
            "BankAccountSubTypeEnum": {
                "enum": [
                    "TERM_DEPOSIT",
                    "CURRENT_ACCOUNT",
                    "CREDIT_CARD",
                    "LEASING",
                    "FUNDING",
                    "BOND"
                ],
                "type": "string",
                "description": "* `TERM_DEPOSIT` - Term Deposit\n* `CURRENT_ACCOUNT` - Current Account\n* `CREDIT_CARD` - Credit Card\n* `LEASING` - Leasing\n* `FUNDING` - Funding\n* `BOND` - Bond"
            },
            "BankName": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "BankNameRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "value"
                ]
            },
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "BloodTypeEnum": {
                "enum": [
                    "A+",
                    "A-",
                    "B+",
                    "B-",
                    "AB+",
                    "AB-",
                    "O+",
                    "O-"
                ],
                "type": "string",
                "description": "* `A+` - A Positive\n* `A-` - A Negative\n* `B+` - B Positive\n* `B-` - B Negative\n* `AB+` - AB Positive\n* `AB-` - AB Negative\n* `O+` - O Positive\n* `O-` - O Negative"
            },
            "Branch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "BranchRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "value"
                ]
            },
            "CancellableRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {}
                    },
                    "reason": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "ids",
                    "reason"
                ]
            },
            "CashAccount": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "sub_type": {
                        "$ref": "#/components/schemas/CashAccountSubTypeEnum"
                    },
                    "cash_account_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "has_transactions": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "cash_account_name",
                    "company",
                    "currency",
                    "has_transactions",
                    "id",
                    "payment_method",
                    "project",
                    "sub_type"
                ]
            },
            "CashAccountList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sub_type": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "accounting_code": {
                        "type": "string"
                    },
                    "balance_credit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_debit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    }
                },
                "required": [
                    "accounting_code",
                    "balance",
                    "balance_credit",
                    "balance_credit_dc",
                    "balance_debit",
                    "balance_debit_dc",
                    "company",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "name",
                    "project",
                    "sub_type"
                ]
            },
            "CashAccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "sub_type": {
                        "$ref": "#/components/schemas/CashAccountSubTypeEnum"
                    },
                    "cash_account_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "comments": {
                        "type": "string"
                    }
                },
                "required": [
                    "cash_account_name",
                    "company",
                    "currency",
                    "payment_method",
                    "project",
                    "sub_type"
                ]
            },
            "CashAccountSubTypeEnum": {
                "enum": [
                    "CASH",
                    "WORK_ADVANCE",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `CASH` - Cash\n* `WORK_ADVANCE` - Work Advance\n* `OTHER` - Other"
            },
            "City": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CodeAccountingCode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "code",
                    "id",
                    "type"
                ]
            },
            "Company": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "district": {
                        "$ref": "#/components/schemas/District"
                    },
                    "etedarik_api_key_valid": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "geolocation": {
                        "type": "string",
                        "title": "Coordinates",
                        "pattern": "^-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+$",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "fax": {
                        "type": "string",
                        "title": "Fax (1)",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_office": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_no": {
                        "type": "string",
                        "nullable": true,
                        "title": "Tax/TC ID No ",
                        "maxLength": 20
                    },
                    "mersis_no": {
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 16
                    },
                    "commercial_reg_id": {
                        "type": "string",
                        "title": "Commercial ID No",
                        "maxLength": 255
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "company_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4,
                        "minLength": 4
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "city",
                    "country",
                    "created",
                    "created_by",
                    "district",
                    "etedarik_api_key_valid",
                    "id",
                    "modified",
                    "modified_by",
                    "name",
                    "slug"
                ]
            },
            "CompanyAvailable": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CompanyName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CompanyNameCode": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "company_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 4,
                        "minLength": 4
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CompanyNameRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompanyRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "geolocation": {
                        "type": "string",
                        "title": "Coordinates",
                        "pattern": "^-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+$",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "fax": {
                        "type": "string",
                        "title": "Fax (1)",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_office": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_no": {
                        "type": "string",
                        "nullable": true,
                        "title": "Tax/TC ID No ",
                        "maxLength": 20
                    },
                    "mersis_no": {
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 16
                    },
                    "commercial_reg_id": {
                        "type": "string",
                        "title": "Commercial ID No",
                        "maxLength": 255
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "company_code": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 4,
                        "maxLength": 4
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ConsolidatedPermissions": {
                "type": "object",
                "properties": {
                    "auth": {
                        "type": "object",
                        "properties": {
                            "permission": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "group": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "user": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "projects": {
                        "type": "object",
                        "properties": {
                            "responsibletypeparam": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "projecttypeparam": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "accountingtypeparam": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "responsible": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "project": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "company": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "codes": {
                        "type": "object",
                        "properties": {
                            "accountingcode": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "activity": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "resource": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "wbs": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "budget": {
                        "type": "object",
                        "properties": {
                            "budget": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "procurement": {
                        "type": "object",
                        "properties": {
                            "tax": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "invoice": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "approve",
                                        "canapprove",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "invoiceplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "invoicerealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "invoiceitem": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "cancel",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "uncancel",
                                        "view"
                                    ]
                                }
                            },
                            "order": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "approve",
                                        "canapprove",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "orderplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "orderadvancepayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "orderadvancerealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "orderitem": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "cancel",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "uncancel",
                                        "view"
                                    ]
                                }
                            },
                            "requesttypeparam": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "procurementrequest": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "add",
                                        "approve",
                                        "approve",
                                        "canapprove",
                                        "change",
                                        "change",
                                        "delete",
                                        "delete",
                                        "superreader",
                                        "superreader",
                                        "view",
                                        "view"
                                    ]
                                }
                            },
                            "requestitem": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "cancel",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "uncancel",
                                        "view"
                                    ]
                                }
                            },
                            "specialinvoicetype": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "specialinvoice": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "approve",
                                        "canapprove",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "specialinvoiceplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "specialinvoicerealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "specialinvoiceitem": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "warehouse": {
                        "type": "object",
                        "properties": {
                            "warehouse": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "product": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "slipparent": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "slip": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "warehousetransaction": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "add",
                                        "change",
                                        "change",
                                        "delete",
                                        "delete",
                                        "superreader",
                                        "view",
                                        "view"
                                    ]
                                }
                            },
                            "waybill": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "subcontracts": {
                        "type": "object",
                        "properties": {
                            "contractcategory": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "add",
                                        "change",
                                        "change",
                                        "delete",
                                        "delete",
                                        "view",
                                        "view"
                                    ]
                                }
                            },
                            "contract": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "approve",
                                        "canapprove",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "contractadvancepayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "contractadvancerealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "contractcollateraltype": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "contractcollateralreason": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "contractcollateralstatus": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "contractcollateral": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "progress": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "approve",
                                        "canapprove",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "progressdeductiontype": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "progressdeduction": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "contractdeduction": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "revision": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "contractitembase": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "contractitem": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "cancel",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "uncancel",
                                        "view"
                                    ]
                                }
                            },
                            "deductionreturn": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "approve",
                                        "canapprove",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "deductionreturnplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "deductionreturnrealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "progressadditiontype": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "progressaddition": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "progressitem": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "progressplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "progressrealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "contractplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "suppliers": {
                        "type": "object",
                        "properties": {
                            "suppliertype": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "supplieractivitytype": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "supplierbranch": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "supplieraccountingcode": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "suppliercontact": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "supplierbankaccount": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "supplier": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "reviewquestion": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "reviewtemplate": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "review": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "answer": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "finance": {
                        "type": "object",
                        "properties": {
                            "account": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "supplieraccount": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "bankaccount": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "cashaccount": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "transaction": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "slip": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "expense": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "paymentdetail": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "revenuedetail": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "incomeinvoicecategory": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "incomeinvoiceserial": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "incomeinvoice": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "approve",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "incomeinvoiceplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "incomeinvoicerealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "incomeinvoiceitem": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "paymentplan": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "revenueplan": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "instrumentstatechange": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "financialinstrumentlist": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "paymentbond": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "bondplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "bondrealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "paymentcheque": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "chequeplannedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "chequerealizedpayment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "revenuebond": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "bondplannedrevenue": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "bondrealizedrevenue": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "revenuecheque": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "chequeplannedrevenue": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "chequerealizedrevenue": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "authentication": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "reporting": {
                        "type": "object",
                        "properties": {
                            "costreports": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "cashreports": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "incomereports": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "superreader",
                                        "view"
                                    ]
                                }
                            }
                        }
                    },
                    "hr": {
                        "type": "object",
                        "properties": {
                            "maindepartment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "subdepartment": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "mainposition": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "subposition": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "profession": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "quitreason": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "quitrecord": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "location": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "crew": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "person": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "superreader",
                                        "view"
                                    ]
                                }
                            },
                            "salary": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            },
                            "projectsalarypermission": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "add",
                                        "change",
                                        "delete",
                                        "view"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Contact": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Name and surname",
                        "maxLength": 255
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone_internal": {
                        "type": "string",
                        "title": "Internal phone",
                        "maxLength": 20
                    },
                    "phone_mobile": {
                        "type": "string",
                        "title": "Mobile phone",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail",
                        "maxLength": 254
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created",
                    "created_by",
                    "id",
                    "modified",
                    "modified_by",
                    "name",
                    "supplier"
                ]
            },
            "ContactRequest": {
                "type": "object",
                "properties": {
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name and surname",
                        "maxLength": 255
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone_internal": {
                        "type": "string",
                        "title": "Internal phone",
                        "maxLength": 20
                    },
                    "phone_mobile": {
                        "type": "string",
                        "title": "Mobile phone",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail",
                        "maxLength": 254
                    }
                },
                "required": [
                    "name",
                    "supplier"
                ]
            },
            "Contract": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyNameCode"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "main_contractor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SupplierName"
                            }
                        ],
                        "nullable": true
                    },
                    "category": {
                        "$ref": "#/components/schemas/ContractCategory"
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractRevisionSummary"
                        },
                        "readOnly": true
                    },
                    "is_lump_sum": {
                        "type": "boolean"
                    },
                    "contract_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "contract_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "contract_description": {
                        "type": "string"
                    },
                    "work_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "work_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "current_revision": {
                        "$ref": "#/components/schemas/Revision"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAdvancePayment"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractPlannedPayment"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractDeduction"
                        }
                    },
                    "collaterals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractCollateral"
                        }
                    },
                    "totals": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "unsaved": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "attachments",
                    "category",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "project",
                    "revisions",
                    "slug",
                    "status",
                    "subcontractor",
                    "total_vat",
                    "totals",
                    "unsaved"
                ]
            },
            "ContractAdvancePayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "ContractAdvancePaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "ContractCategory": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "ContractCollateral": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContractCollateralType"
                    },
                    "reason": {
                        "$ref": "#/components/schemas/ContractCollateralReason"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ContractCollateralStatus"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "received_at": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Date received"
                    },
                    "valid_until": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                },
                "required": [
                    "amount",
                    "id",
                    "reason",
                    "status",
                    "type"
                ]
            },
            "ContractCollateralList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract_slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "reason": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "received_at": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Date received"
                    },
                    "valid_until": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "expired": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "contract",
                    "contract_slug",
                    "currency",
                    "expired",
                    "id",
                    "project",
                    "reason",
                    "status",
                    "subcontractor",
                    "type"
                ]
            },
            "ContractCollateralReason": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "ContractCollateralRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "reason": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "received_at": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Date received"
                    },
                    "valid_until": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                },
                "required": [
                    "amount",
                    "reason",
                    "status",
                    "type"
                ]
            },
            "ContractCollateralStatus": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "ContractCollateralType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "ContractCreate": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyNameCode"
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RevisionCreate"
                        }
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "main_contractor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SupplierName"
                            }
                        ],
                        "nullable": true
                    },
                    "category": {
                        "$ref": "#/components/schemas/ContractCategory"
                    },
                    "is_lump_sum": {
                        "type": "boolean"
                    },
                    "contract_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "contract_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "contract_description": {
                        "type": "string"
                    },
                    "work_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "work_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAdvancePayment"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractPlannedPayment"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractDeduction"
                        }
                    },
                    "collaterals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractCollateral"
                        }
                    }
                },
                "required": [
                    "category",
                    "company",
                    "counter",
                    "currency",
                    "project",
                    "revisions",
                    "slug",
                    "subcontractor"
                ]
            },
            "ContractCreateRequest": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RevisionCreateRequest"
                        }
                    },
                    "subcontractor": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "main_contractor": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "is_lump_sum": {
                        "type": "boolean"
                    },
                    "contract_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "contract_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "contract_description": {
                        "type": "string"
                    },
                    "work_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "work_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAdvancePaymentRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractPlannedPaymentRequest"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractDeductionRequest"
                        }
                    },
                    "collaterals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractCollateralRequest"
                        }
                    }
                },
                "required": [
                    "category",
                    "company",
                    "currency",
                    "project",
                    "revisions",
                    "subcontractor"
                ]
            },
            "ContractDeduction": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/ProgressDeductionType"
                    },
                    "percentage": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "ContractDeductionRequest": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "percentage": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0
                    }
                },
                "required": [
                    "type"
                ]
            },
            "ContractItem": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityNameCode"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceNameCodeUnits"
                    },
                    "wbs": {
                        "$ref": "#/components/schemas/WBSNameCode"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/ResourceUnit"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "selected": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "resource",
                    "selected",
                    "total",
                    "total_vat",
                    "unit",
                    "wbs"
                ]
            },
            "ContractItemRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "unit": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "resource",
                    "unit",
                    "wbs"
                ]
            },
            "ContractList": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "type": "string",
                        "title": "Supplier name",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "totals": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "totals_with_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_planned_payments": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_advance_payments": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "subcontractor",
                    "total_advance_payments",
                    "total_planned_payments",
                    "total_vat",
                    "totals",
                    "totals_with_vat"
                ]
            },
            "ContractPlannedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "subcontract_progress": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "payment_date"
                ]
            },
            "ContractPlannedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "subcontract_progress": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "required": [
                    "payment_date"
                ]
            },
            "ContractRequest": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "subcontractor": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "main_contractor": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "is_lump_sum": {
                        "type": "boolean"
                    },
                    "contract_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "contract_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "contract_description": {
                        "type": "string"
                    },
                    "work_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "work_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "current_revision": {
                        "$ref": "#/components/schemas/RevisionRequest"
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAdvancePaymentRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractPlannedPaymentRequest"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractDeductionRequest"
                        }
                    },
                    "collaterals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractCollateralRequest"
                        }
                    }
                },
                "required": [
                    "category",
                    "company",
                    "currency",
                    "id",
                    "project",
                    "subcontractor"
                ]
            },
            "ContractRevisionSummary": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "comment": {
                        "type": "string"
                    },
                    "total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "created_by",
                    "id",
                    "total"
                ]
            },
            "ContractRevisionSummaryRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "comment": {
                        "type": "string"
                    }
                }
            },
            "Counter": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "slug",
                    "url"
                ]
            },
            "Country": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CreateRevisionRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "comment": {
                        "type": "string"
                    }
                }
            },
            "Crew": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "crew_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationParameter"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectNameCode"
                        }
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivityNameCode"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "crew_name",
                    "id",
                    "location",
                    "modified",
                    "name"
                ]
            },
            "CrewList": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "crew_name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "crew_name",
                    "id"
                ]
            },
            "CrewNameLocation": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "crew_name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "crew_name",
                    "id"
                ]
            },
            "CrewRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "location": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "location",
                    "name"
                ]
            },
            "Currency": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "CurrencyRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "value"
                ]
            },
            "CustomUserDetails": {
                "type": "object",
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "id",
                    "profile",
                    "username"
                ]
            },
            "CustomUserDetailsRequest": {
                "type": "object",
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/ProfileRequest"
                    },
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "profile",
                    "username"
                ]
            },
            "DeductionReturn": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract_counter": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Counter"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProjectNameCode"
                            }
                        ],
                        "readOnly": true
                    },
                    "company": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompanyName"
                            }
                        ],
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SupplierName"
                            }
                        ],
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/ProgressDeductionType"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "total_deduction_returned": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "total_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeductionReturnPlannedPayment"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "amount",
                    "approver",
                    "attachments",
                    "company",
                    "contract",
                    "contract_counter",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "date",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "subcontractor",
                    "total_deduction",
                    "total_deduction_returned",
                    "type"
                ]
            },
            "DeductionReturnList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract_counter": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Counter"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "required": [
                    "amount",
                    "approver",
                    "company",
                    "contract",
                    "contract_counter",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "date",
                    "id",
                    "is_approvable",
                    "is_editable",
                    "project",
                    "slug",
                    "status",
                    "subcontractor",
                    "type"
                ]
            },
            "DeductionReturnPlannedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "DeductionReturnPlannedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "DeductionReturnRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeductionReturnPlannedPaymentRequest"
                        }
                    }
                },
                "required": [
                    "amount",
                    "contract",
                    "date",
                    "type"
                ]
            },
            "DiscountUnitChoices": {
                "enum": [
                    "percent",
                    "amount"
                ],
                "type": "string",
                "description": "* `percent` - percent\n* `amount` - amount"
            },
            "District": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "EducationLevelEnum": {
                "enum": [
                    "PRIMARY",
                    "SECONDARY",
                    "HIGH_SCHOOL",
                    "JUNIOR_COLLEGE",
                    "UNIVERSITY",
                    "POST_GRADUATE",
                    "DOCTORATE",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `PRIMARY` - Primary\n* `SECONDARY` - Secondary\n* `HIGH_SCHOOL` - High School\n* `JUNIOR_COLLEGE` - Junior College\n* `UNIVERSITY` - University\n* `POST_GRADUATE` - Post Graduate\n* `DOCTORATE` - Doctorate\n* `OTHER` - Other"
            },
            "Expense": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/ExpenseTypeChoices"
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCompanies"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "account_from": {
                        "$ref": "#/components/schemas/AccountTitleCurrencyBalance"
                    },
                    "account_to": {
                        "$ref": "#/components/schemas/AccountTitleCurrencyBalance"
                    },
                    "amount_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_from_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "amount_to_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "resource": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResourceNameCodeName"
                            }
                        ],
                        "nullable": true
                    },
                    "activity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityNameCode"
                            }
                        ],
                        "nullable": true
                    },
                    "wbs": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WBSNameCode"
                            }
                        ],
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "account_from",
                    "account_to",
                    "amount_from",
                    "amount_from_dc",
                    "amount_to",
                    "amount_to_dc",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "id",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "txn_date",
                    "type",
                    "xrate_from",
                    "xrate_to"
                ]
            },
            "ExpenseList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExpenseTypeChoices"
                            }
                        ],
                        "readOnly": true
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "account_to": {
                        "type": "string",
                        "readOnly": true
                    },
                    "account_from": {
                        "type": "string",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "account_from",
                    "account_to",
                    "activity",
                    "amount",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "project",
                    "resource",
                    "slug",
                    "txn_date",
                    "type"
                ]
            },
            "ExpenseRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ExpenseTypeChoices"
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "account_from": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "account_to": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "account_from",
                    "account_to",
                    "amount_from",
                    "amount_to",
                    "company",
                    "project",
                    "txn_date",
                    "type",
                    "xrate_from",
                    "xrate_to"
                ]
            },
            "ExpenseTypeChoices": {
                "enum": [
                    "EXPENSE",
                    "INCOME",
                    "REFUND",
                    "TRANSFER"
                ],
                "type": "string",
                "description": "* `EXPENSE` - Expense\n* `INCOME` - Income\n* `REFUND` - Refund\n* `TRANSFER` - Transfer"
            },
            "FeatureFlags": {
                "type": "object",
                "properties": {
                    "flag1": {
                        "type": "boolean"
                    },
                    "flag2": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "flag1",
                    "flag2"
                ]
            },
            "GenderEnum": {
                "enum": [
                    "MALE",
                    "FEMALE"
                ],
                "type": "string",
                "description": "* `MALE` - Male\n* `FEMALE` - Female"
            },
            "Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 150
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "GroupMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        }
                    }
                },
                "required": [
                    "id",
                    "members",
                    "name"
                ]
            },
            "GroupMemberRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GroupRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "IncomeInvoice": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "category": {
                        "$ref": "#/components/schemas/IncomeInvoiceCategory"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierForm"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Currency"
                            }
                        ],
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoiceItem"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoicePlannedPayment"
                        }
                    },
                    "realized_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoiceRealizedPayment"
                        }
                    },
                    "totals": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    }
                },
                "required": [
                    "agreed_exchange_currency",
                    "approver",
                    "attachments",
                    "category",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "planned_payments",
                    "project",
                    "slug",
                    "status",
                    "supplier",
                    "total_vat",
                    "totals"
                ]
            },
            "IncomeInvoiceCategory": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_refund": {
                        "type": "boolean",
                        "description": "Income invoices that creates a negative cost, e.g Refunds?"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "value"
                ]
            },
            "IncomeInvoiceCategoryRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "is_refund": {
                        "type": "boolean",
                        "description": "Income invoices that creates a negative cost, e.g Refunds?"
                    }
                }
            },
            "IncomeInvoiceItem": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityNameCode"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceNameCodeUnit"
                    },
                    "wbs": {
                        "$ref": "#/components/schemas/WBSNameCode"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit": {
                        "$ref": "#/components/schemas/ResourceUnit"
                    },
                    "description": {
                        "type": "string"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vatwitholding"
                            }
                        ],
                        "nullable": true
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tax"
                        }
                    },
                    "selected": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "resource",
                    "selected",
                    "unit",
                    "wbs"
                ]
            },
            "IncomeInvoiceItemRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRequest"
                        }
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "resource",
                    "unit",
                    "wbs"
                ]
            },
            "IncomeInvoiceList": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "title": "Supplier name",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "balance",
                    "category",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "supplier"
                ]
            },
            "IncomeInvoicePlannedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "has_condition": {
                        "type": "boolean"
                    },
                    "condition": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "IncomeInvoicePlannedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "has_condition": {
                        "type": "boolean"
                    },
                    "condition": {
                        "type": "string"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "IncomeInvoiceRealizedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "IncomeInvoiceRealizedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "IncomeInvoiceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoiceItemRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoicePlannedPaymentRequest"
                        }
                    },
                    "realized_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoiceRealizedPaymentRequest"
                        }
                    }
                },
                "required": [
                    "agreed_exchange_currency",
                    "category",
                    "company",
                    "currency",
                    "id",
                    "planned_payments",
                    "project",
                    "supplier"
                ]
            },
            "InlineUserRequest": {
                "type": "object",
                "properties": {
                    "from_user_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "from_user_id"
                ]
            },
            "InstrumentListDiscovery": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "type",
                    "url"
                ]
            },
            "Invoice": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyNameCode"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierForm"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "waybill_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "order_currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Currency"
                            }
                        ],
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceItem"
                        }
                    },
                    "correction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoicePlannedPayment"
                        }
                    },
                    "realized_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceRealizedPayment"
                        },
                        "readOnly": true
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "total_given_advance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_deducted_advance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "unsaved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "request_nos": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "order_nos": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "attachments",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "order_currency",
                    "order_nos",
                    "planned_payments",
                    "project",
                    "realized_payments",
                    "request_nos",
                    "slug",
                    "status",
                    "supplier",
                    "total_deducted_advance",
                    "total_given_advance",
                    "unsaved"
                ]
            },
            "InvoiceAdvanceBalance": {
                "type": "object",
                "properties": {
                    "given_advances": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "total_given_advance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_deducted_advance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "deduction_rate": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "deduction_rate",
                    "given_advances",
                    "total_deducted_advance",
                    "total_given_advance"
                ]
            },
            "InvoiceItem": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "order_item": {
                        "$ref": "#/components/schemas/OrderItem"
                    },
                    "request_item": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestItem"
                            }
                        ],
                        "nullable": true
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Invoiced quantity"
                    },
                    "total_invoiced_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "remaining_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vatwitholding"
                            }
                        ],
                        "nullable": true
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tax"
                        }
                    },
                    "selected": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    },
                    "is_additional": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "is_additional",
                    "order_item",
                    "remaining_quantity",
                    "selected",
                    "total_invoiced_quantity"
                ]
            },
            "InvoiceItemList": {
                "type": "object",
                "properties": {
                    "resource_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "activity_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "wbs_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity": {
                        "type": "string",
                        "readOnly": true
                    },
                    "wbs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vat_ratio": {
                        "type": "integer"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "invoice_no": {
                        "type": "string",
                        "readOnly": true
                    },
                    "invoice_date": {
                        "type": "string",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "exchange_rates": {}
                },
                "required": [
                    "activity",
                    "activity_tree",
                    "company",
                    "currency",
                    "exchange_rates",
                    "invoice_date",
                    "invoice_no",
                    "project",
                    "quantity",
                    "resource",
                    "resource_tree",
                    "total",
                    "total_vat",
                    "unit_price",
                    "vat_ratio",
                    "wbs",
                    "wbs_tree"
                ]
            },
            "InvoiceItemRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "order_item": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "request_item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Invoiced quantity"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRequest"
                        }
                    }
                },
                "required": [
                    "id",
                    "order_item"
                ]
            },
            "InvoiceList": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "title": "Supplier name",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "exchange_rate_usd": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,11}(?:\\.\\d{0,8})?$",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "exchange_rates": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "balance",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "exchange_rate_usd",
                    "exchange_rates",
                    "id",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "supplier",
                    "url"
                ]
            },
            "InvoicePlannedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "has_condition": {
                        "type": "boolean"
                    },
                    "condition": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "InvoicePlannedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "has_condition": {
                        "type": "boolean"
                    },
                    "condition": {
                        "type": "string"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "InvoicePrepareRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "items"
                ]
            },
            "InvoiceRealizedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "InvoiceRealizedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "InvoiceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "waybill_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceItemRequest"
                        }
                    },
                    "correction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoicePlannedPaymentRequest"
                        }
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    }
                },
                "required": [
                    "company",
                    "currency",
                    "id",
                    "planned_payments",
                    "project",
                    "supplier"
                ]
            },
            "InvoiceTypeEnum": {
                "enum": [
                    "TEMELFATURA",
                    "TICARIFATURA"
                ],
                "type": "string",
                "description": "* `TEMELFATURA` - Basic Invoice\n* `TICARIFATURA` - Commercial Invoice"
            },
            "LocationParameter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "country": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "country",
                    "id",
                    "value"
                ]
            },
            "LocationParameterRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "country": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "country",
                    "value"
                ]
            },
            "MainDepartment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "sub_departments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubDepartment"
                        }
                    }
                },
                "required": [
                    "id",
                    "sub_departments",
                    "value"
                ]
            },
            "MainDepartmentRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "sub_departments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "sub_departments",
                    "value"
                ]
            },
            "MainPosition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "sub_positions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubPosition"
                        }
                    }
                },
                "required": [
                    "id",
                    "sub_positions",
                    "value"
                ]
            },
            "MainPositionRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "sub_positions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "sub_positions",
                    "value"
                ]
            },
            "MaritalStatusEnum": {
                "enum": [
                    "SINGLE",
                    "MARRIED"
                ],
                "type": "string",
                "description": "* `SINGLE` - Single\n* `MARRIED` - Married"
            },
            "Member": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "status_type": {
                        "$ref": "#/components/schemas/StatusTypeEnum"
                    },
                    "subscription": {
                        "type": "object",
                        "properties": {
                            "endpoint": {
                                "type": "string"
                            },
                            "keys": {
                                "type": "object",
                                "properties": {
                                    "auth": {
                                        "type": "string"
                                    },
                                    "p256dh": {
                                        "type": "string"
                                    }
                                }
                            },
                            "browser": {
                                "type": "string"
                            },
                            "user_agent": {
                                "type": "string"
                            }
                        }
                    },
                    "browser": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "user_agent": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "group": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "status_type",
                    "subscription"
                ]
            },
            "NotificationRequest": {
                "type": "object",
                "properties": {
                    "status_type": {
                        "$ref": "#/components/schemas/StatusTypeEnum"
                    },
                    "subscription": {
                        "type": "object",
                        "properties": {
                            "endpoint": {
                                "type": "string"
                            },
                            "keys": {
                                "type": "object",
                                "properties": {
                                    "auth": {
                                        "type": "string"
                                    },
                                    "p256dh": {
                                        "type": "string"
                                    }
                                }
                            },
                            "browser": {
                                "type": "string"
                            },
                            "user_agent": {
                                "type": "string"
                            }
                        }
                    },
                    "browser": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "user_agent": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "group": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "status_type",
                    "subscription"
                ]
            },
            "NullEnum": {
                "enum": [
                    null
                ]
            },
            "OfferComparisonRequestRequest": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "items"
                ]
            },
            "OfferComparisonResponse": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "api_response": {},
                    "offer_url": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "api_response",
                    "message",
                    "offer_url",
                    "success"
                ]
            },
            "Order": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyNameCode"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Currency"
                            }
                        ],
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "delivery_warehouse": {
                        "$ref": "#/components/schemas/WarehouseName"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Expected order delivery date"
                    },
                    "delivery_contact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserFullName"
                            }
                        ],
                        "readOnly": true
                    },
                    "delivery_contact_phone": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "delivery_note": {
                        "type": "string"
                    },
                    "packaging_methods": {
                        "type": "array",
                        "items": {},
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderAdvancePayment"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderPlannedPayment"
                        }
                    },
                    "totals": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "unsaved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "request_nos": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "attachments",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "delivery_contact",
                    "id",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "planned_payments",
                    "project",
                    "request_nos",
                    "slug",
                    "status",
                    "supplier",
                    "total_vat",
                    "totals",
                    "unsaved"
                ]
            },
            "OrderAdvancePayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "OrderAdvancePaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "OrderItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "request_item": {
                        "$ref": "#/components/schemas/RequestItem"
                    },
                    "ordered_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "total_ordered_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "remaining_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "invoiced_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vatwitholding"
                            }
                        ],
                        "nullable": true
                    },
                    "is_additional": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "selected": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    }
                },
                "required": [
                    "id",
                    "invoiced_quantity",
                    "is_additional",
                    "remaining_quantity",
                    "request_item",
                    "selected",
                    "total",
                    "total_ordered_quantity",
                    "total_vat"
                ]
            },
            "OrderItemRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "request_item": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "ordered_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "request_item"
                ]
            },
            "OrderList": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "title": "Supplier name",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "totals_with_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "supplier",
                    "totals_with_vat"
                ]
            },
            "OrderPlannedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "payment_term": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "OrderPlannedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "payment_term": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "OrderPrepareRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "items"
                ]
            },
            "OrderRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemRequest"
                        }
                    },
                    "delivery_warehouse": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Expected order delivery date"
                    },
                    "delivery_contact_phone": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "delivery_note": {
                        "type": "string"
                    },
                    "packaging_methods": {
                        "type": "array",
                        "items": {},
                        "nullable": true
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderPlannedPaymentRequest"
                        }
                    }
                },
                "required": [
                    "company",
                    "currency",
                    "id",
                    "planned_payments",
                    "project",
                    "supplier"
                ]
            },
            "PackagingMethod": {
                "type": "object",
                "properties": {
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                }
            },
            "PackagingMethodRequest": {
                "type": "object",
                "properties": {
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                }
            },
            "PaginatedAccountList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    }
                }
            },
            "PaginatedActivityListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivityList"
                        }
                    }
                }
            },
            "PaginatedApprovalHistoryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApprovalHistory"
                        }
                    }
                }
            },
            "PaginatedApprovedOrderItemList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApprovedOrderItem"
                        }
                    }
                }
            },
            "PaginatedApprovedRequestItemList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApprovedRequestItem"
                        }
                    }
                }
            },
            "PaginatedBankAccountListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccountList"
                        }
                    }
                }
            },
            "PaginatedCashAccountListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CashAccountList"
                        }
                    }
                }
            },
            "PaginatedCompanyList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Company"
                        }
                    }
                }
            },
            "PaginatedContractCollateralListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractCollateralList"
                        }
                    }
                }
            },
            "PaginatedContractListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractList"
                        }
                    }
                }
            },
            "PaginatedCrewListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CrewList"
                        }
                    }
                }
            },
            "PaginatedDeductionReturnListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeductionReturnList"
                        }
                    }
                }
            },
            "PaginatedExpenseListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExpenseList"
                        }
                    }
                }
            },
            "PaginatedIncomeInvoiceListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoiceList"
                        }
                    }
                }
            },
            "PaginatedInstrumentListDiscoveryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstrumentListDiscovery"
                        }
                    }
                }
            },
            "PaginatedInvoiceListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceList"
                        }
                    }
                }
            },
            "PaginatedOrderListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderList"
                        }
                    }
                }
            },
            "PaginatedPaymentBondListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentBondList"
                        }
                    }
                }
            },
            "PaginatedPaymentChequeListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentChequeList"
                        }
                    }
                }
            },
            "PaginatedPaymentDetailList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentDetail"
                        }
                    }
                }
            },
            "PaginatedPaymentPlan2TypeDiscoveryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentPlan2TypeDiscovery"
                        }
                    }
                }
            },
            "PaginatedPersonListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersonList"
                        }
                    }
                }
            },
            "PaginatedProductListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductList"
                        }
                    }
                }
            },
            "PaginatedProgressListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressList"
                        }
                    }
                }
            },
            "PaginatedProjectListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectList"
                        }
                    }
                }
            },
            "PaginatedRequestListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestList"
                        }
                    }
                }
            },
            "PaginatedResourceListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceList"
                        }
                    }
                }
            },
            "PaginatedRevenueBondListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RevenueBondList"
                        }
                    }
                }
            },
            "PaginatedRevenueChequeListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RevenueChequeList"
                        }
                    }
                }
            },
            "PaginatedRevenueDetailList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RevenueDetail"
                        }
                    }
                }
            },
            "PaginatedReviewsListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReviewsList"
                        }
                    }
                }
            },
            "PaginatedRevisionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Revision"
                        }
                    }
                }
            },
            "PaginatedSalaryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Salary"
                        }
                    }
                }
            },
            "PaginatedSlipList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Slip"
                        }
                    }
                }
            },
            "PaginatedSpecialInvoiceListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoiceList"
                        }
                    }
                }
            },
            "PaginatedSupplierAccountListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SupplierAccountList"
                        }
                    }
                }
            },
            "PaginatedSupplierList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supplier"
                        }
                    }
                }
            },
            "PaginatedTransactionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    }
                }
            },
            "PaginatedTransactionListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionList"
                        }
                    }
                }
            },
            "PaginatedTransitionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transition"
                        }
                    }
                }
            },
            "PaginatedWBSListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WBSList"
                        }
                    }
                }
            },
            "PaginatedWarehouseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "page_count": {
                        "type": "integer"
                    },
                    "next": {
                        "type": "string",
                        "nullable": true
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Warehouse"
                        }
                    }
                }
            },
            "PatchedAccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "comments": {
                        "type": "string"
                    }
                }
            },
            "PatchedAccountingTypeRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                }
            },
            "PatchedActivityRequest": {
                "type": "object",
                "properties": {
                    "accounting_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchedCodeAccountingCodeRequest"
                        }
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    }
                }
            },
            "PatchedActivityTypeRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                }
            },
            "PatchedAnswerRequest": {
                "type": "object",
                "properties": {
                    "score": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0,
                        "nullable": true
                    }
                }
            },
            "PatchedBankAccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "bank": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sub_type": {
                        "$ref": "#/components/schemas/BankAccountSubTypeEnum"
                    },
                    "branch": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "account_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedBankNameRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                }
            },
            "PatchedBranchRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                }
            },
            "PatchedCashAccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "sub_type": {
                        "$ref": "#/components/schemas/CashAccountSubTypeEnum"
                    },
                    "cash_account_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "comments": {
                        "type": "string"
                    }
                }
            },
            "PatchedCodeAccountingCodeRequest": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 20
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedCompanyRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "geolocation": {
                        "type": "string",
                        "title": "Coordinates",
                        "pattern": "^-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+$",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "fax": {
                        "type": "string",
                        "title": "Fax (1)",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_office": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_no": {
                        "type": "string",
                        "nullable": true,
                        "title": "Tax/TC ID No ",
                        "maxLength": 20
                    },
                    "mersis_no": {
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 16
                    },
                    "commercial_reg_id": {
                        "type": "string",
                        "title": "Commercial ID No",
                        "maxLength": 255
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "company_code": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 4,
                        "maxLength": 4
                    }
                }
            },
            "PatchedContactRequest": {
                "type": "object",
                "properties": {
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Name and surname",
                        "maxLength": 255
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "phone_internal": {
                        "type": "string",
                        "title": "Internal phone",
                        "maxLength": 20
                    },
                    "phone_mobile": {
                        "type": "string",
                        "title": "Mobile phone",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail",
                        "maxLength": 254
                    }
                }
            },
            "PatchedContractRequest": {
                "type": "object",
                "description": "Moves `UniqueValidator`'s from the validation stage to the save stage.\nIt solves the problem with nested validation for unique fields on update.\n\nIf you want more details, you can read related issues and articles:\nhttps://github.com/beda-software/drf-writable-nested/issues/1\nhttp://www.django-rest-framework.org/api-guide/validators/#updating-nested-serializers\n\nExample of usage:\n```\n    class Child(models.Model):\n    field = models.CharField(unique=True)\n\n\nclass Parent(models.Model):\n    child = models.ForeignKey('Child')\n\n\nclass ChildSerializer(UniqueFieldsMixin, serializers.ModelSerializer):\n    class Meta:\n        model = Child\n\n\nclass ParentSerializer(NestedUpdateMixin, serializers.ModelSerializer):\n    child = ChildSerializer()\n\n    class Meta:\n        model = Parent\n```\n\nNote: `UniqueFieldsMixin` must be applied only on the serializer\nwhich has unique fields.\n\nNote: When you are using both mixins\n(`UniqueFieldsMixin` and `NestedCreateMixin` or `NestedUpdateMixin`)\nyou should put `UniqueFieldsMixin` ahead.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "subcontractor": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "main_contractor": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "is_lump_sum": {
                        "type": "boolean"
                    },
                    "contract_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "contract_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "contract_description": {
                        "type": "string"
                    },
                    "work_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "work_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "current_revision": {
                        "$ref": "#/components/schemas/RevisionRequest"
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractAdvancePaymentRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractPlannedPaymentRequest"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractDeductionRequest"
                        }
                    },
                    "collaterals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractCollateralRequest"
                        }
                    }
                }
            },
            "PatchedCrewRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "location": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "PatchedCurrencyRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                }
            },
            "PatchedCustomUserDetailsRequest": {
                "type": "object",
                "properties": {
                    "profile": {
                        "$ref": "#/components/schemas/ProfileRequest"
                    },
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    }
                }
            },
            "PatchedDeductionReturnRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeductionReturnPlannedPaymentRequest"
                        }
                    }
                }
            },
            "PatchedExpenseRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ExpenseTypeChoices"
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "account_from": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "account_to": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "PatchedGroupMemberRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 150
                    }
                }
            },
            "PatchedIncomeInvoiceCategoryRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "is_refund": {
                        "type": "boolean",
                        "description": "Income invoices that creates a negative cost, e.g Refunds?"
                    }
                }
            },
            "PatchedIncomeInvoiceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_type": {
                        "nullable": true,
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            },
                            {
                                "$ref": "#/components/schemas/NullEnum"
                            }
                        ]
                    },
                    "category": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoiceItemRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoicePlannedPaymentRequest"
                        }
                    },
                    "realized_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeInvoiceRealizedPaymentRequest"
                        }
                    }
                }
            },
            "PatchedInvoiceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "waybill_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceItemRequest"
                        }
                    },
                    "correction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoicePlannedPaymentRequest"
                        }
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    }
                }
            },
            "PatchedLocationParameterRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "country": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedMainDepartmentRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "sub_departments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "PatchedMainPositionRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "sub_positions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "PatchedOrderAdvancePaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedOrderRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItemRequest"
                        }
                    },
                    "delivery_warehouse": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Expected order delivery date"
                    },
                    "delivery_contact_phone": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "delivery_note": {
                        "type": "string"
                    },
                    "packaging_methods": {
                        "type": "array",
                        "items": {},
                        "nullable": true
                    },
                    "advance_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderAdvancePaymentRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderPlannedPaymentRequest"
                        }
                    }
                }
            },
            "PatchedPackagingMethodRequest": {
                "type": "object",
                "properties": {
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                }
            },
            "PatchedPaymentBondRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "PatchedPaymentChequeRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "PatchedPaymentDetailRequest": {
                "type": "object",
                "properties": {
                    "realized_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "txn_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paid_together": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedPaymentMethodRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                }
            },
            "PatchedPersonRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "position": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "department": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "profession": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "quit_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "quit_reason": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "quit_record": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "crew": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status386Enum"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "location": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "photo": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "tckn": {
                        "type": "string",
                        "maxLength": 11
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "birth_place": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "gender": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GenderEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "marital_status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MaritalStatusEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "nationality": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "blood_type": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BloodTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "passport_number": {
                        "type": "string",
                        "maxLength": 11
                    },
                    "passport_issue_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "passport_expire_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "passport_issue_place": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "phone_mobile": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "phone_home": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "phone_other": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "education_level": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EducationLevelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "education_school": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "education_department": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "education_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "education_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                }
            },
            "PatchedProductCreateRequest": {
                "type": "object",
                "properties": {
                    "warehouse": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "unit": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,16}(?:\\.\\d{0,4})?$"
                    },
                    "waybill_no": {
                        "type": "string"
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "serial_number": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "volume": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "default": 0.0
                    },
                    "weight": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "default": 0.0
                    }
                }
            },
            "PatchedProfessionRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Profession Code",
                        "maxLength": 50
                    }
                }
            },
            "PatchedProgressRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "progress_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true
                    },
                    "progress_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "progress_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressItemRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressPlannedPaymentRequest"
                        }
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "additions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressAdditionRequest"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressDeductionRequest"
                        }
                    }
                }
            },
            "PatchedProjectRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "country": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "city": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "district": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "project_type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code_prefix": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "project_code": {
                        "type": "string",
                        "minLength": 1
                    },
                    "duration": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "project_active": {
                        "type": "boolean"
                    },
                    "use_wbs": {
                        "type": "boolean"
                    },
                    "use_budget_codes": {
                        "type": "boolean"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Default reporting currency"
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "responsibles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponsibleUserTypeRequest"
                        }
                    }
                }
            },
            "PatchedProjectSalaryPermissionRequest": {
                "type": "object",
                "properties": {
                    "can_view_salary": {
                        "type": "boolean"
                    },
                    "can_edit_salary": {
                        "type": "boolean"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedProjectTypeParamRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "responsibilities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                }
            },
            "PatchedQuitReasonRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Quit Reason Code",
                        "maxLength": 50
                    }
                }
            },
            "PatchedQuitRecordRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "blacklist": {
                        "type": "boolean",
                        "description": "If this is checked, the person will not be able to work in the company."
                    }
                }
            },
            "PatchedRateRequest": {
                "type": "object",
                "properties": {
                    "rate_from": {
                        "type": "string",
                        "minLength": 1
                    },
                    "rate_to": {
                        "type": "string",
                        "minLength": 1
                    }
                }
            },
            "PatchedRequestRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Requested delivery date"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Request notes"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestItemRequest"
                        }
                    }
                }
            },
            "PatchedResourceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "accounting_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchedCodeAccountingCodeRequest"
                        }
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/ResourceTypeEnum"
                    },
                    "numchild": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    }
                }
            },
            "PatchedResponsibleRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/CustomUserDetailsRequest"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedResponsibleTypeParamRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    },
                    "unique": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedRevenueBondRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "PatchedRevenueChequeRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "PatchedRevenueDetailRequest": {
                "type": "object",
                "properties": {
                    "realized_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "txn_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paid_together": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedReviewQuestionRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1
                    },
                    "maximum_score": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 1
                    },
                    "sort_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                }
            },
            "PatchedReviewRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "template": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchedAnswerRequest"
                        }
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    }
                }
            },
            "PatchedReviewTemplateRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "review_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "pass_mark": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReviewQuestionRequest"
                        }
                    }
                }
            },
            "PatchedRevisionRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractItemRequest"
                        }
                    }
                }
            },
            "PatchedSalaryRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "person": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "salary": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,10}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "salary_type": {
                        "$ref": "#/components/schemas/SalaryTypeEnum"
                    },
                    "salary_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "PatchedSlipRequest": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "PatchedSpecialInvoiceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "waybill_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "warehouse": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoiceItemRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoicePlannedPaymentRequest"
                        }
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "correction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "prepaid_from": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                }
            },
            "PatchedSupplierAccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "sub_type": {
                        "$ref": "#/components/schemas/SupplierAccountSubTypeEnum"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedSupplierAccountingCodeRequest": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "account_owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountOwnerEnum"
                            }
                        ],
                        "default": "VENDOR"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SupplierAccountingCodeTypeEnum"
                            }
                        ],
                        "default": "MAIN"
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Account code",
                        "maxLength": 30
                    }
                }
            },
            "PatchedSupplierBankAccountRequest": {
                "type": "object",
                "properties": {
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "bank_name": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "swift_no": {
                        "type": "string",
                        "maxLength": 20
                    }
                }
            },
            "PatchedSupplierRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "country": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "city": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "district": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "branch": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "activity_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "geolocation": {
                        "type": "string",
                        "title": "Coordinates",
                        "pattern": "^-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+$",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "fax": {
                        "type": "string",
                        "title": "Fax (1)",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_office": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_no": {
                        "type": "string",
                        "nullable": true,
                        "title": "Tax/TC ID No ",
                        "maxLength": 20
                    },
                    "mersis_no": {
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 16
                    },
                    "commercial_reg_id": {
                        "type": "string",
                        "title": "Commercial ID No",
                        "maxLength": 255
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Supplier name",
                        "maxLength": 255
                    }
                }
            },
            "PatchedSupplierTypeRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                }
            },
            "PatchedTaxParameterRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "ratio": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Tax Ratio"
                    },
                    "add_to_vat": {
                        "type": "boolean",
                        "title": "Include Vat"
                    }
                }
            },
            "PatchedTransactionListCreateRequest": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionCreateRequest"
                        }
                    }
                }
            },
            "PatchedTransactionRequest": {
                "type": "object",
                "properties": {
                    "slip": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "direction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TransactionDirectionEnum"
                            }
                        ],
                        "default": "D"
                    },
                    "balance_debit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_credit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    }
                }
            },
            "PatchedVatwitholdingRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "ratio": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Vat witholding Ratio"
                    }
                }
            },
            "PatchedWBSRequest": {
                "type": "object",
                "properties": {
                    "numchild": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "PatchedWarehouseRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "responsibles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserNameAvatarRequest"
                        }
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    }
                }
            },
            "PayByBond": {
                "type": "object",
                "properties": {
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "instrument": {
                        "$ref": "#/components/schemas/PaymentBond"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    }
                },
                "required": [
                    "instrument",
                    "payment_date"
                ]
            },
            "PayByBondRequest": {
                "type": "object",
                "properties": {
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "instrument": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    }
                },
                "required": [
                    "instrument",
                    "payment_date"
                ]
            },
            "PayByCheque": {
                "type": "object",
                "properties": {
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "instrument": {
                        "$ref": "#/components/schemas/PaymentCheque"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    }
                },
                "required": [
                    "instrument",
                    "payment_date"
                ]
            },
            "PayByChequeRequest": {
                "type": "object",
                "properties": {
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "instrument": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    }
                },
                "required": [
                    "instrument",
                    "payment_date"
                ]
            },
            "PayByFilter": {
                "type": "object",
                "properties": {
                    "amount_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "account",
                    "amount_from",
                    "description",
                    "payment_date"
                ]
            },
            "PayByFilterRequest": {
                "type": "object",
                "properties": {
                    "amount_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "account",
                    "amount_from",
                    "description",
                    "payment_date"
                ]
            },
            "PaySelected": {
                "type": "object",
                "properties": {
                    "amount_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "to_be_paid": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ToBePaid"
                        }
                    }
                },
                "required": [
                    "account",
                    "amount_from",
                    "description",
                    "payment_date",
                    "to_be_paid"
                ]
            },
            "PaySelectedRequest": {
                "type": "object",
                "properties": {
                    "amount_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_to": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "xrate_from": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1
                    },
                    "to_be_paid": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ToBePaidRequest"
                        }
                    }
                },
                "required": [
                    "account",
                    "amount_from",
                    "description",
                    "payment_date",
                    "to_be_paid"
                ]
            },
            "PaymentBond": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentBondStateEnum"
                            }
                        ],
                        "description": "",
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "PaymentBondList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "PaymentBondRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "counter_party",
                    "currency",
                    "entry_date",
                    "payment_date",
                    "project"
                ]
            },
            "PaymentBondStateEnum": {
                "enum": []
            },
            "PaymentCheque": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentChequeStateEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "$ref": "#/components/schemas/BankName"
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "PaymentChequeList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "bank_name",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "PaymentChequeRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "counter_party",
                    "currency",
                    "entry_date",
                    "payment_date",
                    "project"
                ]
            },
            "PaymentChequeStateEnum": {
                "enum": [
                    "UNDEFINED",
                    "PORTFOLIO",
                    "OUT",
                    "PAID",
                    "RETURNOUT",
                    "CANCEL"
                ],
                "type": "string",
                "description": "* `UNDEFINED` - Undefined\n* `PORTFOLIO` - Portfolio\n* `OUT` - Out\n* `PAID` - Paid\n* `RETURNOUT` - Returned To Owner\n* `CANCEL` - Cancelled"
            },
            "PaymentDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "payment_from": {
                        "type": "string",
                        "readOnly": true
                    },
                    "payment_to": {
                        "type": "string",
                        "readOnly": true
                    },
                    "realized_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "realized_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "txn_type": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "payment_method": {
                        "type": "string",
                        "readOnly": true
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paid_together": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "currency",
                    "id",
                    "paid_together",
                    "payment_date",
                    "payment_from",
                    "payment_method",
                    "payment_to",
                    "project",
                    "realized_at",
                    "realized_by"
                ]
            },
            "PaymentDetailDelete": {
                "type": "object",
                "properties": {
                    "delete_note": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "delete_note"
                ]
            },
            "PaymentDetailDeleteRequest": {
                "type": "object",
                "properties": {
                    "delete_note": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "delete_note"
                ]
            },
            "PaymentDetailRealize": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "ids"
                ]
            },
            "PaymentDetailRealizeRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "ids"
                ]
            },
            "PaymentDetailRequest": {
                "type": "object",
                "properties": {
                    "realized_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "txn_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paid_together": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "amount",
                    "paid_together",
                    "payment_date",
                    "realized_at"
                ]
            },
            "PaymentMethod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "PaymentMethodRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "value"
                ]
            },
            "PaymentPlan2TypeDiscovery": {
                "type": "object",
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameSerailizer"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "counter": {
                        "$ref": "#/components/schemas/Counter"
                    },
                    "module": {
                        "type": "string",
                        "readOnly": true
                    },
                    "object_type": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "content_type": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "payment_description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "document_no": {
                        "type": "string",
                        "readOnly": true
                    },
                    "due_total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "planned_total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "paid_total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "realized_total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "first_payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "first_payment_method": {
                        "type": "string"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "company",
                    "content_type",
                    "counter",
                    "currency",
                    "document_no",
                    "due_total",
                    "first_payment_date",
                    "first_payment_method",
                    "id",
                    "module",
                    "object_type",
                    "paid_total",
                    "payment_description",
                    "planned_total",
                    "project",
                    "realized_total",
                    "supplier",
                    "type"
                ]
            },
            "Permissions": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "permissions"
                ]
            },
            "Person": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "position": {
                        "$ref": "#/components/schemas/SubPosition"
                    },
                    "department": {
                        "$ref": "#/components/schemas/SubDepartment"
                    },
                    "profession": {
                        "$ref": "#/components/schemas/Profession"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "quit_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "quit_reason": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/QuitReason"
                            }
                        ],
                        "nullable": true
                    },
                    "quit_record": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/QuitRecord"
                            }
                        ],
                        "nullable": true
                    },
                    "crew": {
                        "$ref": "#/components/schemas/CrewNameLocation"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status386Enum"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectName"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "location": {
                        "$ref": "#/components/schemas/LocationParameter"
                    },
                    "project_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "tckn": {
                        "type": "string",
                        "maxLength": 11
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "birth_place": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "gender": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GenderEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "marital_status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MaritalStatusEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "nationality": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "blood_type": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BloodTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "passport_number": {
                        "type": "string",
                        "maxLength": 11
                    },
                    "passport_issue_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "passport_expire_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "passport_issue_place": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "phone_mobile": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "phone_home": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "phone_other": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "education_level": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EducationLevelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "education_school": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "education_department": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "education_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "education_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                },
                "required": [
                    "company",
                    "counter",
                    "crew",
                    "department",
                    "first_name",
                    "id",
                    "last_name",
                    "location",
                    "position",
                    "profession",
                    "project",
                    "start_date"
                ]
            },
            "PersonList": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "last_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "position": {
                        "type": "string",
                        "readOnly": true
                    },
                    "department": {
                        "type": "string",
                        "readOnly": true
                    },
                    "profession": {
                        "type": "string",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "readOnly": true
                    },
                    "crew": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status386Enum"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "quit_date": {
                        "type": "string",
                        "format": "date",
                        "readOnly": true,
                        "nullable": true
                    },
                    "quit_reason": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "nullable": true
                    },
                    "quit_record": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "company",
                    "counter",
                    "crew",
                    "department",
                    "first_name",
                    "id",
                    "last_name",
                    "location",
                    "position",
                    "profession",
                    "project",
                    "quit_date",
                    "quit_reason",
                    "quit_record",
                    "status"
                ]
            },
            "PersonRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "last_name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100
                    },
                    "position": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "department": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "profession": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "quit_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "quit_reason": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "quit_record": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "crew": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status386Enum"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "location": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "photo": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true
                    },
                    "tckn": {
                        "type": "string",
                        "maxLength": 11
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "birth_place": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "gender": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/GenderEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "marital_status": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/MaritalStatusEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "nationality": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "blood_type": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BloodTypeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "passport_number": {
                        "type": "string",
                        "maxLength": 11
                    },
                    "passport_issue_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "passport_expire_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "passport_issue_place": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "phone_mobile": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "phone_home": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "phone_other": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "education_level": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/EducationLevelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "education_school": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "education_department": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "education_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "education_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    }
                },
                "required": [
                    "company",
                    "crew",
                    "department",
                    "first_name",
                    "last_name",
                    "location",
                    "position",
                    "profession",
                    "project",
                    "start_date"
                ]
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "warehouse": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityNameCode"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceNameCode"
                    },
                    "wbs": {
                        "$ref": "#/components/schemas/WBSNameCode"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/ResourceUnit"
                    },
                    "description": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "serial_number": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "brand": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "volume": {
                        "type": "number",
                        "format": "double",
                        "title": "Volume m³"
                    },
                    "weight": {
                        "type": "number",
                        "format": "double",
                        "title": "Weight kg"
                    },
                    "request_slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "order_slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "special_invoice_slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "activity",
                    "attachments",
                    "company",
                    "created",
                    "created_by",
                    "id",
                    "modified",
                    "modified_by",
                    "order_slug",
                    "project",
                    "request_slug",
                    "resource",
                    "special_invoice_slug",
                    "supplier",
                    "unit",
                    "warehouse",
                    "wbs"
                ]
            },
            "ProductCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "warehouse": {
                        "$ref": "#/components/schemas/WarehouseName"
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectName"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityNameCode"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceNameCode"
                    },
                    "wbs": {
                        "$ref": "#/components/schemas/WBSNameCode"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/ResourceUnit"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,16}(?:\\.\\d{0,4})?$"
                    },
                    "waybill_no": {
                        "type": "string"
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "serial_number": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "volume": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "default": 0.0
                    },
                    "weight": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "default": 0.0
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "quantity",
                    "resource",
                    "unit",
                    "waybill_date",
                    "wbs"
                ]
            },
            "ProductCreateRequest": {
                "type": "object",
                "properties": {
                    "warehouse": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "unit": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,16}(?:\\.\\d{0,4})?$"
                    },
                    "waybill_no": {
                        "type": "string"
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "serial_number": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "volume": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "default": 0.0
                    },
                    "weight": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "default": 0.0
                    }
                },
                "required": [
                    "activity",
                    "quantity",
                    "resource",
                    "unit",
                    "waybill_date",
                    "wbs"
                ]
            },
            "ProductDeliveryListCreateRequest": {
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductDeliveryRequest"
                        }
                    }
                },
                "required": [
                    "products"
                ]
            },
            "ProductDeliveryRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "waybill_no": {
                        "type": "string",
                        "minLength": 1
                    },
                    "warehouse": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "product",
                    "quantity",
                    "warehouse",
                    "waybill_date",
                    "waybill_no"
                ]
            },
            "ProductList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityNameCode"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceNameCode"
                    },
                    "wbs": {
                        "$ref": "#/components/schemas/WBSNameCode"
                    },
                    "unit": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "quantity": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "warehouse": {
                        "$ref": "#/components/schemas/WarehouseName"
                    },
                    "supplier": {
                        "type": "string",
                        "readOnly": true
                    },
                    "order_no": {
                        "type": "string",
                        "readOnly": true
                    },
                    "request_no": {
                        "type": "string",
                        "readOnly": true
                    },
                    "expected_delivery_date": {
                        "type": "string",
                        "format": "date",
                        "readOnly": true
                    }
                },
                "required": [
                    "activity",
                    "company",
                    "description",
                    "expected_delivery_date",
                    "id",
                    "order_no",
                    "project",
                    "quantity",
                    "request_no",
                    "resource",
                    "supplier",
                    "unit",
                    "warehouse",
                    "wbs"
                ]
            },
            "Profession": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "title": "Profession Code",
                        "maxLength": 50
                    }
                },
                "required": [
                    "code",
                    "id",
                    "value"
                ]
            },
            "ProfessionRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Profession Code",
                        "maxLength": 50
                    }
                },
                "required": [
                    "code",
                    "value"
                ]
            },
            "Profile": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "format": "uri"
                    },
                    "notificate_by": {
                        "type": "array",
                        "items": {}
                    },
                    "is_removed": {
                        "type": "boolean"
                    },
                    "primary_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 6
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "delegated_until": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "delegated_to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "avatar",
                    "notificate_by"
                ]
            },
            "ProfileRequest": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "format": "binary"
                    },
                    "notificate_by": {
                        "type": "array",
                        "items": {}
                    },
                    "is_removed": {
                        "type": "boolean"
                    },
                    "primary_code": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 6
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "delegated_until": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "delegated_to": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "avatar",
                    "notificate_by"
                ]
            },
            "Progress": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract_counter": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Counter"
                            }
                        ],
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProjectNameCode"
                            }
                        ],
                        "readOnly": true
                    },
                    "company": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompanyName"
                            }
                        ],
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SupplierName"
                            }
                        ],
                        "readOnly": true
                    },
                    "progress_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true
                    },
                    "progress_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "progress_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "contract_category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContractCategory"
                            }
                        ],
                        "readOnly": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressItem"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressPlannedPayment"
                        }
                    },
                    "totals": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Total"
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "additions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressAddition"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressDeduction"
                        }
                    },
                    "invoiced_deductions_total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Invoiced deductions"
                    },
                    "non_invoiced_deductions_total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Non invoiced deductions"
                    },
                    "additions_total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Additions"
                    }
                },
                "required": [
                    "additions_total",
                    "approver",
                    "attachments",
                    "company",
                    "contract",
                    "contract_category",
                    "contract_counter",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "invoiced_deductions_total",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "non_invoiced_deductions_total",
                    "project",
                    "slug",
                    "status",
                    "subcontractor",
                    "total_vat",
                    "totals"
                ]
            },
            "ProgressAddition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/ProgressAdditionType"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "cumulative_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "cumulative_amount",
                    "id",
                    "type"
                ]
            },
            "ProgressAdditionRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "ProgressAdditionType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "slug",
                    "value"
                ]
            },
            "ProgressDeduction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/ProgressDeductionType"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "cumulative_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true
                    },
                    "total_returned": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "contract_percentage": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "contract_percentage",
                    "cumulative_amount",
                    "id",
                    "total_returned",
                    "type"
                ]
            },
            "ProgressDeductionRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "ProgressDeductionType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "is_invoiceable": {
                        "type": "boolean",
                        "description": "Invoiceable deductions doesn't affect the balance of progress"
                    },
                    "is_returnable": {
                        "type": "boolean",
                        "description": "Returnable deductions can be returned thru a deduction return form"
                    },
                    "is_advance": {
                        "type": "boolean",
                        "description": "Is this an advance deduction?"
                    },
                    "is_contract_defined": {
                        "type": "boolean",
                        "description": "Contract defined deductions can be pre deined in the contract as percentage"
                    }
                },
                "required": [
                    "id",
                    "slug",
                    "value"
                ]
            },
            "ProgressItem": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contract_item": {
                        "$ref": "#/components/schemas/ContractItem"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Progressed quantity"
                    },
                    "cumulative_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true
                    },
                    "total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "selected": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    }
                },
                "required": [
                    "contract_item",
                    "cumulative_quantity",
                    "id",
                    "selected",
                    "total",
                    "total_vat"
                ]
            },
            "ProgressItemList": {
                "type": "object",
                "properties": {
                    "resource_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "activity_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "wbs_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity": {
                        "type": "string",
                        "readOnly": true
                    },
                    "wbs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "invoice_no": {
                        "type": "string",
                        "readOnly": true
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "vat_ratio": {
                        "type": "integer"
                    },
                    "exchange_rates": {}
                },
                "required": [
                    "activity",
                    "activity_tree",
                    "company",
                    "currency",
                    "exchange_rates",
                    "invoice_date",
                    "invoice_no",
                    "project",
                    "quantity",
                    "resource",
                    "resource_tree",
                    "total",
                    "total_vat",
                    "unit_price",
                    "vat_ratio",
                    "wbs",
                    "wbs_tree"
                ]
            },
            "ProgressItemRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contract_item": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Progressed quantity"
                    }
                },
                "required": [
                    "contract_item",
                    "id"
                ]
            },
            "ProgressList": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract_counter": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Counter"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contract_category": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subcontractor": {
                        "type": "string",
                        "readOnly": true
                    },
                    "progress_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true
                    },
                    "progress_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "progress_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "totals": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Total"
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "approver",
                    "balance",
                    "company",
                    "contract",
                    "contract_category",
                    "contract_counter",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "project",
                    "slug",
                    "status",
                    "subcontractor",
                    "total_vat",
                    "totals",
                    "url"
                ]
            },
            "ProgressPlannedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "ProgressPlannedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "ProgressRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "progress_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0,
                        "nullable": true
                    },
                    "progress_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "progress_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressItemRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressPlannedPaymentRequest"
                        }
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "additions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressAdditionRequest"
                        }
                    },
                    "deductions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressDeductionRequest"
                        }
                    }
                },
                "required": [
                    "contract"
                ]
            },
            "Project": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "district": {
                        "$ref": "#/components/schemas/District"
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "project_type": {
                        "$ref": "#/components/schemas/ProjectTypeValue"
                    },
                    "accounting_type": {
                        "$ref": "#/components/schemas/AccountingTypeValue"
                    },
                    "accounting_code_prefix": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "project_code": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "project_active": {
                        "type": "boolean"
                    },
                    "use_wbs": {
                        "type": "boolean"
                    },
                    "use_budget_codes": {
                        "type": "boolean"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Default reporting currency"
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyName"
                        }
                    },
                    "responsibles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponsibleUserType"
                        }
                    }
                },
                "required": [
                    "accounting_type",
                    "city",
                    "country",
                    "district",
                    "id",
                    "name",
                    "project_code",
                    "project_type",
                    "slug"
                ]
            },
            "ProjectAvailable": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyName"
                        }
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ProjectList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "country": {
                        "type": "string",
                        "readOnly": true
                    },
                    "city": {
                        "type": "string",
                        "readOnly": true
                    },
                    "district": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project_code": {
                        "type": "string",
                        "maxLength": 4,
                        "minLength": 4
                    },
                    "duration": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "project_active": {
                        "type": "boolean"
                    },
                    "responsibles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponsiblesList"
                        }
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "city",
                    "country",
                    "created",
                    "district",
                    "id",
                    "modified",
                    "name",
                    "project_code",
                    "responsibles",
                    "slug"
                ]
            },
            "ProjectName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ProjectNameCode": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "project_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "project_code"
                ]
            },
            "ProjectNameCodeCompaniesName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "project_code": {
                        "type": "string"
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyName"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "project_code"
                ]
            },
            "ProjectNameCodeCompany": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "project_code": {
                        "type": "string"
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyName"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "project_code"
                ]
            },
            "ProjectNameCodeRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "project_code": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "name",
                    "project_code"
                ]
            },
            "ProjectNameCompanies": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyName"
                        }
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ProjectNameCompany": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyName"
                        }
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ProjectNameSerailizer": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ProjectRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "country": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "city": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "district": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "project_type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code_prefix": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "project_code": {
                        "type": "string",
                        "minLength": 1
                    },
                    "duration": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "project_active": {
                        "type": "boolean"
                    },
                    "use_wbs": {
                        "type": "boolean"
                    },
                    "use_budget_codes": {
                        "type": "boolean"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Default reporting currency"
                    },
                    "companies": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "responsibles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponsibleUserTypeRequest"
                        }
                    }
                },
                "required": [
                    "accounting_type",
                    "city",
                    "country",
                    "district",
                    "name",
                    "project_code",
                    "project_type"
                ]
            },
            "ProjectSalaryPermission": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "can_view_salary": {
                        "type": "boolean"
                    },
                    "can_edit_salary": {
                        "type": "boolean"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "id",
                    "project",
                    "user"
                ]
            },
            "ProjectSalaryPermissionRequest": {
                "type": "object",
                "properties": {
                    "can_view_salary": {
                        "type": "boolean"
                    },
                    "can_edit_salary": {
                        "type": "boolean"
                    },
                    "user": {
                        "type": "integer"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "project",
                    "user"
                ]
            },
            "ProjectTypeParam": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    },
                    "responsibilities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResponsibleTypeParam"
                        }
                    },
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "responsibilities",
                    "value"
                ]
            },
            "ProjectTypeParamRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "responsibilities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    }
                },
                "required": [
                    "responsibilities"
                ]
            },
            "ProjectTypeValue": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "QuitReason": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "title": "Quit Reason Code",
                        "maxLength": 50
                    }
                },
                "required": [
                    "code",
                    "id",
                    "value"
                ]
            },
            "QuitReasonRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Quit Reason Code",
                        "maxLength": 50
                    }
                },
                "required": [
                    "code",
                    "value"
                ]
            },
            "QuitRecord": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "blacklist": {
                        "type": "boolean",
                        "description": "If this is checked, the person will not be able to work in the company."
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "QuitRecordRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "blacklist": {
                        "type": "boolean",
                        "description": "If this is checked, the person will not be able to work in the company."
                    }
                },
                "required": [
                    "value"
                ]
            },
            "Rate": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "readOnly": true
                    },
                    "rate_from": {
                        "type": "string"
                    },
                    "rate_to": {
                        "type": "string"
                    },
                    "rate_buy": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,8})?$",
                        "readOnly": true
                    },
                    "rate_sell": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,8})?$",
                        "readOnly": true
                    }
                },
                "required": [
                    "date",
                    "rate_buy",
                    "rate_from",
                    "rate_sell",
                    "rate_to"
                ]
            },
            "RateRequest": {
                "type": "object",
                "properties": {
                    "rate_from": {
                        "type": "string",
                        "minLength": 1
                    },
                    "rate_to": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "rate_from",
                    "rate_to"
                ]
            },
            "Request": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompaniesName"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyNameCode"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/RequestTypeValue"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Requested delivery date"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Request notes"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestItem"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "attachments",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "id",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "type"
                ]
            },
            "RequestItem": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityNameCode"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceNameCodeUnitsName"
                    },
                    "wbs": {
                        "$ref": "#/components/schemas/WBSNameCode"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit": {
                        "$ref": "#/components/schemas/ResourceUnit"
                    },
                    "description": {
                        "type": "string"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Requested delivery date",
                        "readOnly": true
                    },
                    "ordered_quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "selected": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    }
                },
                "required": [
                    "activity",
                    "delivery_date",
                    "id",
                    "ordered_quantity",
                    "resource",
                    "selected",
                    "unit",
                    "wbs"
                ]
            },
            "RequestItemRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "sort_order": {
                        "type": "integer"
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "resource",
                    "unit",
                    "wbs"
                ]
            },
            "RequestList": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Requested delivery date"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Request notes"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "id",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "type"
                ]
            },
            "RequestRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Requested delivery date"
                    },
                    "notes": {
                        "type": "string",
                        "title": "Request notes"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestItemRequest"
                        }
                    }
                },
                "required": [
                    "company",
                    "id",
                    "project",
                    "type"
                ]
            },
            "RequestType": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "RequestTypeValue": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "Resource": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "depth": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parent_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accounting_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CodeAccountingCode"
                        }
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceUnit"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/ResourceTypeEnum"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "numchild": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "created",
                    "depth",
                    "full_code",
                    "id",
                    "modified",
                    "name",
                    "parent_id",
                    "type",
                    "units"
                ]
            },
            "ResourceList": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "numchild": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceUnit"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name",
                    "numchild",
                    "units"
                ]
            },
            "ResourceNameCode": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name"
                ]
            },
            "ResourceNameCodeName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name"
                ]
            },
            "ResourceNameCodeUnit": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceUnit"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name",
                    "units"
                ]
            },
            "ResourceNameCodeUnits": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceUnit"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name",
                    "units"
                ]
            },
            "ResourceNameCodeUnitsName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceUnit"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name",
                    "units"
                ]
            },
            "ResourceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "accounting_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchedCodeAccountingCodeRequest"
                        }
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "type": {
                        "$ref": "#/components/schemas/ResourceTypeEnum"
                    },
                    "numchild": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    }
                },
                "required": [
                    "code",
                    "type",
                    "units"
                ]
            },
            "ResourceTypeEnum": {
                "enum": [
                    "L",
                    "M"
                ],
                "type": "string",
                "description": "* `L` - Labor\n* `M` - Material"
            },
            "ResourceUnit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "Responsible": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/CustomUserDetails"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ResponsibleTypeParam"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "id",
                    "project",
                    "type",
                    "user"
                ]
            },
            "ResponsibleRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/CustomUserDetailsRequest"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "project",
                    "type",
                    "user"
                ]
            },
            "ResponsibleTypeParam": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    },
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    },
                    "unique": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "ResponsibleTypeParamRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "value_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [en]",
                        "maxLength": 255
                    },
                    "value_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Value [tr]",
                        "maxLength": 255
                    },
                    "unique": {
                        "type": "boolean"
                    }
                }
            },
            "ResponsibleUserType": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/CustomUserDetails"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ResponsibleTypeParam"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "user"
                ]
            },
            "ResponsibleUserTypeRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/CustomUserDetailsRequest"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "type",
                    "user"
                ]
            },
            "ResponsiblesList": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserFullNameAvatar"
                    }
                },
                "required": [
                    "user"
                ]
            },
            "RevenueBond": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State99dEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "RevenueBondList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "RevenueBondRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "bond_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bond_address": {
                        "type": "string"
                    },
                    "warranter": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "counter_party",
                    "currency",
                    "entry_date",
                    "payment_date",
                    "project"
                ]
            },
            "RevenueCheque": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State99dEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "$ref": "#/components/schemas/BankName"
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "RevenueChequeList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "bank_name",
                    "company",
                    "content_type",
                    "counter",
                    "counter_party",
                    "created",
                    "created_by",
                    "currency",
                    "entry_date",
                    "id",
                    "modified",
                    "modified_by",
                    "payment_date",
                    "project",
                    "slug",
                    "state",
                    "title",
                    "url"
                ]
            },
            "RevenueChequeRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "entry_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "counter_party": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "exchange_rate_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$"
                    },
                    "cheque_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_name": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "branch_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "bank_account_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "counter_party",
                    "currency",
                    "entry_date",
                    "payment_date",
                    "project"
                ]
            },
            "RevenueDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "payment_from": {
                        "type": "string",
                        "readOnly": true
                    },
                    "payment_to": {
                        "type": "string",
                        "readOnly": true
                    },
                    "realized_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "realized_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "txn_type": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "payment_method": {
                        "type": "string",
                        "readOnly": true
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paid_together": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "amount",
                    "company",
                    "currency",
                    "id",
                    "paid_together",
                    "payment_date",
                    "payment_from",
                    "payment_method",
                    "payment_to",
                    "project",
                    "realized_at",
                    "realized_by"
                ]
            },
            "RevenueDetailDelete": {
                "type": "object",
                "properties": {
                    "delete_note": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "delete_note"
                ]
            },
            "RevenueDetailDeleteRequest": {
                "type": "object",
                "properties": {
                    "delete_note": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "delete_note"
                ]
            },
            "RevenueDetailRealize": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "ids"
                ]
            },
            "RevenueDetailRealizeRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "required": [
                    "ids"
                ]
            },
            "RevenueDetailRequest": {
                "type": "object",
                "properties": {
                    "realized_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "txn_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paid_together": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "amount",
                    "paid_together",
                    "payment_date",
                    "realized_at"
                ]
            },
            "Review": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "template": {
                        "$ref": "#/components/schemas/ReviewTemplate"
                    },
                    "score": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplier_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Answer"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created",
                    "created_by",
                    "id",
                    "modified",
                    "modified_by",
                    "score",
                    "slug",
                    "supplier",
                    "supplier_name",
                    "template"
                ]
            },
            "ReviewQuestion": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string"
                    },
                    "maximum_score": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 1
                    },
                    "sort_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "ReviewQuestionRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1
                    },
                    "maximum_score": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 1
                    },
                    "sort_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                },
                "required": [
                    "value"
                ]
            },
            "ReviewRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "template": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PatchedAnswerRequest"
                        }
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "supplier",
                    "template"
                ]
            },
            "ReviewTemplate": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "review_type": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "pass_mark": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReviewQuestion"
                        }
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "created_by",
                    "id",
                    "modified",
                    "modified_by",
                    "pass_mark",
                    "review_type",
                    "slug"
                ]
            },
            "ReviewTemplateList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "review_type": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "pass_mark": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                },
                "required": [
                    "id",
                    "pass_mark",
                    "review_type",
                    "slug"
                ]
            },
            "ReviewTemplateRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "review_type": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "pass_mark": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "questions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReviewQuestionRequest"
                        }
                    }
                },
                "required": [
                    "pass_mark",
                    "review_type"
                ]
            },
            "ReviewsList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "template": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "score": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "pass_mark": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "id",
                    "pass_mark",
                    "score",
                    "slug",
                    "supplier",
                    "template"
                ]
            },
            "Revision": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractItem"
                        }
                    }
                },
                "required": [
                    "contract",
                    "id"
                ]
            },
            "RevisionCreate": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "current": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractItem"
                        }
                    }
                },
                "required": [
                    "id"
                ]
            },
            "RevisionCreateRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "current": {
                        "type": "boolean"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractItemRequest"
                        }
                    }
                }
            },
            "RevisionRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "contract": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractItemRequest"
                        }
                    }
                },
                "required": [
                    "contract"
                ]
            },
            "Salary": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Person"
                    },
                    "salary": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,10}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "salary_type": {
                        "$ref": "#/components/schemas/SalaryTypeEnum"
                    },
                    "salary_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "salary_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": false
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "currency",
                    "id",
                    "modified",
                    "person",
                    "salary_date",
                    "salary_type_display"
                ]
            },
            "SalaryRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "person": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "salary": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,10}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "salary_type": {
                        "$ref": "#/components/schemas/SalaryTypeEnum"
                    },
                    "salary_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "currency",
                    "person",
                    "salary_date"
                ]
            },
            "SalaryTypeEnum": {
                "enum": [
                    "hourly",
                    "monthly"
                ],
                "type": "string",
                "description": "* `hourly` - Hourly\n* `monthly` - Monthly"
            },
            "Slip": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "txn_count": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "Transaction count"
                    },
                    "total_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "total_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true
                    },
                    "source_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "date",
                    "id",
                    "source_url",
                    "total_credit_dc",
                    "total_debit_dc",
                    "txn_count"
                ]
            },
            "SlipRequest": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "date"
                ]
            },
            "SpecialInvoice": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SpecialInvoiceType"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_editable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_approvable": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCodeCompany"
                    },
                    "company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierForm"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "waybill_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "warehouse": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WarehouseName"
                            }
                        ],
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Currency"
                            }
                        ],
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoiceItem"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        },
                        "readOnly": true
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoicePlannedPayment"
                        }
                    },
                    "realized_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoiceRealizedPayment"
                        },
                        "readOnly": true
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "correction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "totals": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_given_advance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "total_deducted_advance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "prepaid_from": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountName"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "agreed_exchange_currency",
                    "approver",
                    "attachments",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "is_approvable",
                    "is_editable",
                    "modified",
                    "modified_by",
                    "planned_payments",
                    "prepaid_from",
                    "project",
                    "realized_payments",
                    "slug",
                    "status",
                    "supplier",
                    "total_deducted_advance",
                    "total_given_advance",
                    "total_vat",
                    "totals",
                    "type"
                ]
            },
            "SpecialInvoiceItem": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/ActivityNameCode"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/ResourceNameCodeUnits"
                    },
                    "wbs": {
                        "$ref": "#/components/schemas/WBSNameCode"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit": {
                        "$ref": "#/components/schemas/ResourceUnit"
                    },
                    "description": {
                        "type": "string"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vatwitholding"
                            }
                        ],
                        "nullable": true
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tax"
                        }
                    },
                    "selected": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "resource",
                    "selected",
                    "unit",
                    "wbs"
                ]
            },
            "SpecialInvoiceItemList": {
                "type": "object",
                "properties": {
                    "resource_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "activity_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "wbs_tree": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "activity": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resource": {
                        "type": "string",
                        "readOnly": true
                    },
                    "wbs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "vat_ratio": {
                        "type": "integer"
                    },
                    "invoice_no": {
                        "type": "string",
                        "readOnly": true
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "total": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "total_vat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "exchange_rates": {},
                    "exchange_rate_usd": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    }
                },
                "required": [
                    "activity",
                    "activity_tree",
                    "company",
                    "currency",
                    "exchange_rate_usd",
                    "exchange_rates",
                    "invoice_date",
                    "invoice_no",
                    "project",
                    "quantity",
                    "resource",
                    "resource_tree",
                    "total",
                    "total_vat",
                    "unit_price",
                    "vat_ratio",
                    "wbs",
                    "wbs_tree"
                ]
            },
            "SpecialInvoiceItemRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "activity": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "resource": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "wbs": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "unit": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "nullable": true
                    },
                    "discount_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "discount_unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    },
                    "vat_ratio": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VatRatioChoices"
                            }
                        ],
                        "minimum": 0,
                        "maximum": 32767
                    },
                    "vat_witholding": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "taxes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRequest"
                        }
                    }
                },
                "required": [
                    "activity",
                    "id",
                    "resource",
                    "unit",
                    "wbs"
                ]
            },
            "SpecialInvoiceList": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserNameAvatar"
                            }
                        ],
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    },
                    "counter": {
                        "type": "string",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "title": "Supplier name",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "readOnly": true
                    },
                    "exchange_rate_usd": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,11}(?:\\.\\d{0,8})?$",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified_by": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "approver",
                    "balance",
                    "company",
                    "counter",
                    "created",
                    "created_by",
                    "currency",
                    "exchange_rate_usd",
                    "id",
                    "modified",
                    "modified_by",
                    "project",
                    "slug",
                    "status",
                    "supplier",
                    "url"
                ]
            },
            "SpecialInvoicePlannedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    },
                    "has_condition": {
                        "type": "boolean"
                    },
                    "condition": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "SpecialInvoicePlannedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "has_condition": {
                        "type": "boolean"
                    },
                    "condition": {
                        "type": "string"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "SpecialInvoiceRealizedPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment_method": {
                        "$ref": "#/components/schemas/PaymentMethod"
                    }
                },
                "required": [
                    "id",
                    "payment_date",
                    "payment_method"
                ]
            },
            "SpecialInvoiceRealizedPaymentRequest": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$"
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payment_method": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "payment_date",
                    "payment_method"
                ]
            },
            "SpecialInvoiceRequest": {
                "type": "object",
                "description": "Adds nested create feature",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "invoice_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "invoice_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "waybill_no": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "waybill_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "warehouse": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "has_vat_witholding": {
                        "type": "boolean"
                    },
                    "agreed_exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,6}(?:\\.\\d{0,4})?$",
                        "nullable": true,
                        "title": "Agreed currency rate"
                    },
                    "agreed_exchange_currency": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoiceItemRequest"
                        }
                    },
                    "planned_payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecialInvoicePlannedPaymentRequest"
                        }
                    },
                    "advance_deduction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "correction": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,17}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "prepaid_from": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "required": [
                    "agreed_exchange_currency",
                    "company",
                    "currency",
                    "id",
                    "planned_payments",
                    "prepaid_from",
                    "project",
                    "supplier",
                    "type"
                ]
            },
            "SpecialInvoiceType": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "stockable": {
                        "type": "boolean",
                        "title": "Include in stocks",
                        "description": "If this is a stockable item, it will be added to the inventory.",
                        "readOnly": true
                    }
                },
                "required": [
                    "description",
                    "id",
                    "stockable",
                    "value"
                ]
            },
            "State": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "required": [
                    "id",
                    "label"
                ]
            },
            "State99dEnum": {
                "enum": [
                    "UNDEFINED",
                    "PORTFOLIO",
                    "CASHED",
                    "CANCEL"
                ],
                "type": "string",
                "description": "* `UNDEFINED` - Undefined\n* `PORTFOLIO` - Portfolio\n* `CASHED` - Cashed\n* `CANCEL` - Cancelled"
            },
            "StateRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "minLength": 1
                    },
                    "label": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    }
                },
                "required": [
                    "id",
                    "label"
                ]
            },
            "Status386Enum": {
                "enum": [
                    "ACTIVE",
                    "DEACTIVE"
                ],
                "type": "string",
                "description": "* `ACTIVE` - Active\n* `DEACTIVE` - Deactive"
            },
            "StatusTypeEnum": {
                "enum": [
                    "subscribe",
                    "unsubscribe"
                ],
                "type": "string",
                "description": "* `subscribe` - subscribe\n* `unsubscribe` - unsubscribe"
            },
            "SubDepartment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "SubPosition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "Supplier": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SupplierType"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "district": {
                        "$ref": "#/components/schemas/District"
                    },
                    "branch": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Branch"
                        }
                    },
                    "activity_type": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActivityType"
                        }
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "geolocation": {
                        "type": "string",
                        "title": "Coordinates",
                        "pattern": "^-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+$",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "fax": {
                        "type": "string",
                        "title": "Fax (1)",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_office": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_no": {
                        "type": "string",
                        "nullable": true,
                        "title": "Tax/TC ID No ",
                        "maxLength": 20
                    },
                    "mersis_no": {
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 16
                    },
                    "commercial_reg_id": {
                        "type": "string",
                        "title": "Commercial ID No",
                        "maxLength": 255
                    },
                    "name": {
                        "type": "string",
                        "title": "Supplier name",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "activity_type",
                    "branch",
                    "city",
                    "country",
                    "created",
                    "created_by",
                    "district",
                    "id",
                    "modified",
                    "modified_by",
                    "name",
                    "slug",
                    "type"
                ]
            },
            "SupplierAccount": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sub_type": {
                        "$ref": "#/components/schemas/SupplierAccountSubTypeEnum"
                    },
                    "supplier": {
                        "$ref": "#/components/schemas/SupplierName"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "$ref": "#/components/schemas/ProjectNameCompany"
                    },
                    "has_transactions": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "currency",
                    "has_transactions",
                    "id",
                    "project",
                    "sub_type",
                    "supplier",
                    "type"
                ]
            },
            "SupplierAccountList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "balance": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "sub_type": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accounting_code": {
                        "type": "string"
                    },
                    "balance_credit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_debit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "balance_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    }
                },
                "required": [
                    "accounting_code",
                    "balance",
                    "balance_credit",
                    "balance_credit_dc",
                    "balance_debit",
                    "balance_debit_dc",
                    "currency",
                    "id",
                    "name",
                    "project",
                    "sub_type",
                    "supplier",
                    "type"
                ]
            },
            "SupplierAccountRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "sub_type": {
                        "$ref": "#/components/schemas/SupplierAccountSubTypeEnum"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "accounting_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "currency",
                    "project",
                    "sub_type",
                    "supplier"
                ]
            },
            "SupplierAccountSubTypeEnum": {
                "enum": [
                    "MAIN",
                    "ADVANCE",
                    "RETENTION",
                    "INSURANCE",
                    "TAX"
                ],
                "type": "string",
                "description": "* `MAIN` - Main\n* `ADVANCE` - Advance\n* `RETENTION` - Retention\n* `INSURANCE` - Insurance\n* `TAX` - Tax"
            },
            "SupplierAccountingCode": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "account_owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountOwnerEnum"
                            }
                        ],
                        "default": "VENDOR"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SupplierAccountingCodeTypeEnum"
                            }
                        ],
                        "default": "MAIN"
                    },
                    "code": {
                        "type": "string",
                        "title": "Account code",
                        "maxLength": 30
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "modified",
                    "modified_by",
                    "supplier"
                ]
            },
            "SupplierAccountingCodeRequest": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "account_owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountOwnerEnum"
                            }
                        ],
                        "default": "VENDOR"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SupplierAccountingCodeTypeEnum"
                            }
                        ],
                        "default": "MAIN"
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Account code",
                        "maxLength": 30
                    }
                },
                "required": [
                    "code",
                    "currency",
                    "supplier"
                ]
            },
            "SupplierAccountingCodeTypeEnum": {
                "enum": [
                    "MAIN",
                    "ADVANCE",
                    "GUARANTEE"
                ],
                "type": "string",
                "description": "* `MAIN` - main\n* `ADVANCE` - advance\n* `GUARANTEE` - guarantee"
            },
            "SupplierAutocomplete": {
                "type": "object",
                "properties": {
                    "sr": {
                        "type": "string"
                    }
                },
                "required": [
                    "sr"
                ]
            },
            "SupplierBankAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "supplier": {
                        "type": "string",
                        "nullable": true
                    },
                    "currency": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "bank_name": {
                        "$ref": "#/components/schemas/BankName"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "swift_no": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "created_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "modified_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "bank_name",
                    "created",
                    "created_by",
                    "currency",
                    "id",
                    "modified",
                    "modified_by",
                    "supplier"
                ]
            },
            "SupplierBankAccountRequest": {
                "type": "object",
                "properties": {
                    "supplier": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "currency": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "bank_name": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "iban": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "swift_no": {
                        "type": "string",
                        "maxLength": 20
                    }
                },
                "required": [
                    "bank_name",
                    "currency",
                    "supplier"
                ]
            },
            "SupplierForm": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "district": {
                        "$ref": "#/components/schemas/District"
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "name": {
                        "type": "string",
                        "title": "Supplier name",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "city",
                    "country",
                    "district",
                    "id",
                    "name",
                    "slug"
                ]
            },
            "SupplierName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Supplier name",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "SupplierNameRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Supplier name",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SupplierRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "country": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "city": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "district": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "branch": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "activity_type": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "geolocation": {
                        "type": "string",
                        "title": "Coordinates",
                        "pattern": "^-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+$",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "phone2": {
                        "type": "string",
                        "title": "Phone No (2)",
                        "maxLength": 255
                    },
                    "fax": {
                        "type": "string",
                        "title": "Fax (1)",
                        "maxLength": 255
                    },
                    "website_url": {
                        "type": "string",
                        "format": "uri",
                        "title": "Website",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    },
                    "email2": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (2)",
                        "maxLength": 255
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_office": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tax_no": {
                        "type": "string",
                        "nullable": true,
                        "title": "Tax/TC ID No ",
                        "maxLength": 20
                    },
                    "mersis_no": {
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 16
                    },
                    "commercial_reg_id": {
                        "type": "string",
                        "title": "Commercial ID No",
                        "maxLength": 255
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Supplier name",
                        "maxLength": 255
                    }
                },
                "required": [
                    "activity_type",
                    "branch",
                    "city",
                    "country",
                    "district",
                    "name",
                    "type"
                ]
            },
            "SupplierType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "SupplierTypeRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "value"
                ]
            },
            "Tax": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TaxParameter"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "TaxParameter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "ratio": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Tax Ratio"
                    },
                    "add_to_vat": {
                        "type": "boolean",
                        "title": "Include Vat"
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "category",
                    "id",
                    "value"
                ]
            },
            "TaxParameterRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "ratio": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Tax Ratio"
                    },
                    "add_to_vat": {
                        "type": "boolean",
                        "title": "Include Vat"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "TaxRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "unit": {
                        "$ref": "#/components/schemas/DiscountUnitChoices"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "ToBePaid": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "object_type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "object_type"
                ]
            },
            "ToBePaidRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "object_type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "object_type"
                ]
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "slip": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "account": {
                        "type": "string",
                        "readOnly": true
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "txn_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "xrate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "readOnly": true,
                        "title": "Exchange rate"
                    },
                    "direction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TransactionDirectionEnum"
                            }
                        ],
                        "default": "D"
                    },
                    "balance_debit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_credit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "project": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "account",
                    "amount",
                    "company",
                    "description",
                    "project",
                    "slip",
                    "txn_date",
                    "txn_type",
                    "xrate"
                ]
            },
            "TransactionCreate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "old_status": {
                        "$ref": "#/components/schemas/WarehouseTransactionStatus"
                    },
                    "old_warehouse": {
                        "$ref": "#/components/schemas/WarehouseName"
                    },
                    "old_project": {
                        "$ref": "#/components/schemas/ProjectName"
                    },
                    "old_company": {
                        "$ref": "#/components/schemas/CompanyName"
                    },
                    "new_status": {
                        "$ref": "#/components/schemas/WarehouseTransactionStatus"
                    },
                    "new_warehouse": {
                        "$ref": "#/components/schemas/WarehouseName"
                    },
                    "new_project": {
                        "$ref": "#/components/schemas/ProjectName"
                    },
                    "new_company": {
                        "$ref": "#/components/schemas/CompanyName"
                    }
                },
                "required": [
                    "id",
                    "new_status",
                    "old_status",
                    "product",
                    "txn_date"
                ]
            },
            "TransactionCreateRequest": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "old_status": {
                        "$ref": "#/components/schemas/WarehouseTransactionStatus"
                    },
                    "old_warehouse": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "old_project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "old_company": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "new_status": {
                        "$ref": "#/components/schemas/WarehouseTransactionStatus"
                    },
                    "new_warehouse": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "new_project": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "new_company": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "new_status",
                    "old_status",
                    "product",
                    "txn_date"
                ]
            },
            "TransactionDirectionEnum": {
                "enum": [
                    "D",
                    "C"
                ],
                "type": "string",
                "description": "* `D` - Debit\n* `C` - Credit"
            },
            "TransactionList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Transaction date"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "status": {
                        "$ref": "#/components/schemas/WarehouseTransactionStatus"
                    }
                },
                "required": [
                    "id",
                    "status"
                ]
            },
            "TransactionListCreate": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionCreate"
                        }
                    }
                },
                "required": [
                    "transactions"
                ]
            },
            "TransactionListCreateRequest": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionCreateRequest"
                        }
                    }
                },
                "required": [
                    "transactions"
                ]
            },
            "TransactionRequest": {
                "type": "object",
                "properties": {
                    "slip": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "txn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$"
                    },
                    "amount_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "direction": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TransactionDirectionEnum"
                            }
                        ],
                        "default": "D"
                    },
                    "balance_debit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_credit": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_credit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    },
                    "balance_debit_dc": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
                        "default": "0.0000"
                    }
                },
                "required": [
                    "amount",
                    "description",
                    "slip",
                    "txn_date"
                ]
            },
            "TransactionType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "Transition": {
                "type": "object",
                "properties": {
                    "direction": {
                        "type": "string"
                    },
                    "approver_type": {
                        "type": "string"
                    },
                    "approver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        ],
                        "readOnly": true
                    },
                    "delegate": {
                        "$ref": "#/components/schemas/UserProfile"
                    },
                    "source_state": {
                        "type": "string"
                    },
                    "destination_state": {
                        "type": "string"
                    },
                    "transition": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "notes": {
                        "type": "string"
                    }
                },
                "required": [
                    "approver",
                    "approver_type",
                    "delegate",
                    "destination_state",
                    "direction",
                    "notes",
                    "source_state",
                    "transition"
                ]
            },
            "UnCancellableRequest": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "ids"
                ]
            },
            "UserFullName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "full_name",
                    "id"
                ]
            },
            "UserFullNameAvatar": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "avatar",
                    "full_name",
                    "id"
                ]
            },
            "UserGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Group"
                        },
                        "readOnly": true
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "avatar",
                    "full_name",
                    "groups",
                    "id"
                ]
            },
            "UserNameAvatar": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": [
                    "avatar",
                    "full_name",
                    "id"
                ]
            },
            "UserNameAvatarRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "required": [
                    "avatar"
                ]
            },
            "UserProfile": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "avatar": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    }
                },
                "required": [
                    "avatar",
                    "full_name",
                    "id",
                    "phone_number",
                    "title"
                ]
            },
            "ValidateOfferComparisonApiKeyRequestRequest": {
                "type": "object",
                "properties": {
                    "etedarik_api_key": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "etedarik_api_key"
                ]
            },
            "ValidateOfferComparisonApiKeyResponse": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "detail"
                ]
            },
            "VatRatioChoices": {
                "enum": [
                    0,
                    1,
                    8,
                    10,
                    18,
                    20
                ],
                "type": "integer",
                "description": "* `0` - 0%\n* `1` - 1%\n* `8` - 8%\n* `10` - 10%\n* `18` - 18%\n* `20` - 20%"
            },
            "Vatwitholding": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "ratio": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Vat witholding Ratio"
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "VatwitholdingRequest": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "ratio": {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 0,
                        "title": "Vat witholding Ratio"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "WBS": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "depth": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parent_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "numchild": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "code",
                    "created",
                    "depth",
                    "full_code",
                    "id",
                    "modified",
                    "name",
                    "parent_id",
                    "project"
                ]
            },
            "WBSList": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "numchild": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name",
                    "numchild",
                    "project"
                ]
            },
            "WBSNameCode": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 2
                    },
                    "full_code": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "code",
                    "full_code",
                    "id",
                    "name"
                ]
            },
            "WBSRequest": {
                "type": "object",
                "properties": {
                    "numchild": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 255
                    },
                    "name_tr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [tr]",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 2
                    },
                    "project": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "required": [
                    "code",
                    "project"
                ]
            },
            "Warehouse": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "responsibles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserNameAvatar"
                        }
                    },
                    "country": {
                        "$ref": "#/components/schemas/Country"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "district": {
                        "$ref": "#/components/schemas/District"
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    }
                },
                "required": [
                    "city",
                    "country",
                    "district",
                    "id",
                    "name",
                    "responsibles"
                ]
            },
            "WarehouseName": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "WarehouseRequest": {
                "type": "object",
                "description": "A ModelSerializer that takes an additional `fields` argument that\ncontrols which fields should be displayed.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "responsibles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserNameAvatarRequest"
                        }
                    },
                    "address": {
                        "type": "string",
                        "description": "Haritadan seçim yaparak, profilinizde konumunuzun görünmesini sağlayabilirsiniz.",
                        "maxLength": 255
                    },
                    "phone1": {
                        "type": "string",
                        "title": "Phone No (1)",
                        "maxLength": 255
                    },
                    "email1": {
                        "type": "string",
                        "format": "email",
                        "title": "E-mail (1)",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name",
                    "responsibles"
                ]
            },
            "WarehouseTransactionStatus": {
                "enum": [
                    "EXPECTED",
                    "OVERDELIVERED",
                    "STOCK",
                    "USED",
                    "DAMAGED",
                    "LOST",
                    "STOLEN",
                    "SOLD",
                    "CANCELLED"
                ],
                "type": "string",
                "description": "* `EXPECTED` - expected\n* `OVERDELIVERED` - overdelivered\n* `STOCK` - Stock\n* `USED` - Used\n* `DAMAGED` - Damaged\n* `LOST` - Lost\n* `STOLEN` - Stolen\n* `SOLD` - Sold\n* `CANCELLED` - Cancelled"
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    },
    "externalDocs": {
        "description": "allauth",
        "url": "/_allauth/openapi.html"
    }
}